DIGEST 51ac83870b9b36bff71bc28dde9d372f
Fsf.Poly
R180:184 sf.Lists <> <> lib
ind 1062:1069 <> boollist
constr 1085:1092 <> bool_nil
constr 1109:1117 <> bool_cons
R1096:1103 sf.Poly <> boollist ind
R1125:1128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1137:1140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1141:1148 sf.Poly <> boollist ind
R1129:1136 sf.Poly <> boollist ind
R1121:1124 sf.Basics <> bool ind
ind 1623:1626 <> list
constr 1651:1653 <> nil
constr 1668:1671 <> cons
R1657:1660 sf.Poly <> list ind
R1676:1679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1686:1689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1690:1693 sf.Poly <> list ind
R1680:1683 sf.Poly <> list ind
R2883:2885 sf.Poly <> nil constr
R2935:2938 sf.Poly <> cons constr
R3720:3723 sf.Poly <> cons constr
R3732:3735 sf.Poly <> cons constr
R3744:3746 sf.Poly <> nil constr
R3748:3750 Coq.Init.Datatypes <> nat ind
R3737:3739 Coq.Init.Datatypes <> nat ind
R3725:3727 Coq.Init.Datatypes <> nat ind
def 4103:4108 <> repeat
R4126:4126 sf.Poly <> X var
R4138:4140 Coq.Init.Datatypes <> nat ind
R4145:4148 sf.Poly <> list ind
R4150:4150 sf.Poly <> X var
R4163:4167 sf.Poly <> count var
R4183:4185 sf.Poly <> nil constr
R4187:4187 sf.Poly <> X var
R4193:4193 Coq.Init.Datatypes <> S constr
R4205:4208 sf.Poly <> cons constr
R4215:4220 sf.Poly <> repeat def
R4224:4224 sf.Poly <> x var
R4222:4222 sf.Poly <> X var
R4212:4212 sf.Poly <> x var
R4210:4210 sf.Poly <> X var
def 4370:4381 <> test_repeat1
R4401:4403 Coq.Init.Logic <> :type_scope:x_'='_x not
R4387:4392 sf.Poly <> repeat def
R4394:4396 Coq.Init.Datatypes <> nat ind
R4404:4407 sf.Poly <> cons constr
R4416:4419 sf.Poly <> cons constr
R4428:4430 sf.Poly <> nil constr
R4432:4434 Coq.Init.Datatypes <> nat ind
R4421:4423 Coq.Init.Datatypes <> nat ind
R4409:4411 Coq.Init.Datatypes <> nat ind
def 4594:4605 <> test_repeat2
R4630:4632 Coq.Init.Logic <> :type_scope:x_'='_x not
R4611:4616 sf.Poly <> repeat def
R4623:4627 sf.Basics <> false constr
R4618:4621 sf.Basics <> bool ind
R4633:4636 sf.Poly <> cons constr
R4650:4652 sf.Poly <> nil constr
R4654:4657 sf.Basics <> bool ind
R4643:4647 sf.Basics <> false constr
R4638:4641 sf.Basics <> bool ind
mod 4695:4707 <> MumbleGrumble
ind 4831:4836 MumbleGrumble mumble
constr 4852:4852 MumbleGrumble a
constr 4867:4867 MumbleGrumble b
constr 4899:4899 MumbleGrumble c
R4856:4861 sf.Poly <> mumble ind
R4877:4880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4884:4887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4888:4893 sf.Poly <> mumble ind
R4881:4883 Coq.Init.Datatypes <> nat ind
R4871:4876 sf.Poly <> mumble ind
R4903:4908 sf.Poly <> mumble ind
ind 4922:4928 MumbleGrumble grumble
constr 4953:4953 MumbleGrumble d
constr 4981:4981 MumbleGrumble e
R4963:4966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4967:4973 sf.Poly <> grumble ind
R4957:4962 sf.Poly MumbleGrumble mumble ind
R4986:4989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4990:4996 sf.Poly <> grumble ind
R5328:5340 sf.Poly MumbleGrumble <> mod
def 5617:5623 <> repeat'
R5637:5640 sf.Poly <> list ind
R5642:5642 sf.Poly <> X var
R5655:5659 sf.Poly <> count var
R5682:5684 sf.Poly <> nil constr
R5686:5686 sf.Poly <> X var
R5692:5692 Coq.Init.Datatypes <> S constr
R5704:5707 sf.Poly <> cons constr
R5714:5720 sf.Poly <> repeat' def
R5724:5724 sf.Poly <> x var
R5722:5722 sf.Poly <> X var
R5711:5711 sf.Poly <> x var
R5709:5709 sf.Poly <> X var
R5824:5830 sf.Poly <> repeat' def
R5886:5891 sf.Poly <> repeat def
def 8440:8447 <> repeat''
R8461:8464 sf.Poly <> list ind
R8466:8466 sf.Poly <> X var
R8479:8483 sf.Poly <> count var
R8506:8508 sf.Poly <> nil constr
R8516:8516 Coq.Init.Datatypes <> S constr
R8528:8531 sf.Poly <> cons constr
R8538:8545 sf.Poly <> repeat'' def
R8549:8549 sf.Poly <> x var
R8535:8535 sf.Poly <> x var
def 8875:8881 <> list123
R8888:8891 sf.Poly <> cons constr
R8900:8903 sf.Poly <> cons constr
R8912:8915 sf.Poly <> cons constr
R8924:8926 sf.Poly <> nil constr
R8928:8930 Coq.Init.Datatypes <> nat ind
R8917:8919 Coq.Init.Datatypes <> nat ind
R8905:8907 Coq.Init.Datatypes <> nat ind
R8893:8895 Coq.Init.Datatypes <> nat ind
def 9004:9011 <> list123'
R9018:9021 sf.Poly <> cons constr
R9028:9031 sf.Poly <> cons constr
R9038:9041 sf.Poly <> cons constr
R9048:9050 sf.Poly <> nil constr
R9667:9669 sf.Poly <> nil constr
R9667:9669 sf.Poly <> nil constr
R9686:9689 sf.Poly <> cons constr
R9686:9689 sf.Poly <> cons constr
R9710:9715 sf.Poly <> repeat def
R9710:9715 sf.Poly <> repeat def
def 9802:9810 <> list123''
R9815:9818 sf.Poly <> cons constr
R9823:9826 sf.Poly <> cons constr
R9831:9834 sf.Poly <> cons constr
R9838:9840 sf.Poly <> nil constr
def 10012:10020 <> repeat'''
R10038:10038 sf.Poly <> X var
R10050:10052 Coq.Init.Datatypes <> nat ind
R10057:10060 sf.Poly <> list ind
R10062:10062 sf.Poly <> X var
R10075:10079 sf.Poly <> count var
R10102:10104 sf.Poly <> nil constr
R10110:10110 Coq.Init.Datatypes <> S constr
R10122:10125 sf.Poly <> cons constr
R10130:10138 sf.Poly <> repeat''' def
R10140:10140 sf.Poly <> x var
R10127:10127 sf.Poly <> x var
ind 10743:10747 <> list'
constr 10772:10775 <> nil'
constr 10789:10793 <> cons'
R10779:10783 sf.Poly <> list' ind
R10798:10801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10807:10810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10811:10815 sf.Poly <> list' ind
R10802:10806 sf.Poly <> list' ind
def 11251:11253 <> app
R11275:11278 sf.Poly <> list ind
R11280:11280 sf.Poly <> X var
R11299:11302 sf.Poly <> list ind
R11304:11304 sf.Poly <> X var
R11318:11319 sf.Poly <> l1 var
R11330:11332 sf.Poly <> nil constr
R11342:11343 sf.Poly <> l2 var
R11349:11352 sf.Poly <> cons constr
R11361:11364 sf.Poly <> cons constr
R11369:11371 sf.Poly <> app def
R11375:11376 sf.Poly <> l2 var
def 11396:11398 <> rev
R11412:11415 sf.Poly <> list ind
R11417:11417 sf.Poly <> X var
R11422:11425 sf.Poly <> list ind
R11427:11427 sf.Poly <> X var
R11440:11440 sf.Poly <> l var
R11451:11453 sf.Poly <> nil constr
R11463:11465 sf.Poly <> nil constr
R11471:11474 sf.Poly <> cons constr
R11483:11485 sf.Poly <> app def
R11496:11499 sf.Poly <> cons constr
R11503:11505 sf.Poly <> nil constr
R11488:11490 sf.Poly <> rev def
def 11525:11530 <> length
R11548:11551 sf.Poly <> list ind
R11553:11553 sf.Poly <> X var
R11558:11560 Coq.Init.Datatypes <> nat ind
R11573:11573 sf.Poly <> l var
R11584:11586 sf.Poly <> nil constr
R11597:11600 sf.Poly <> cons constr
R11610:11610 Coq.Init.Datatypes <> S constr
R11613:11618 sf.Poly <> length def
def 11640:11648 <> test_rev1
R11679:11682 Coq.Init.Logic <> :type_scope:x_'='_x not
R11702:11702 Coq.Init.Logic <> :type_scope:x_'='_x not
R11654:11656 sf.Poly <> rev def
R11659:11662 sf.Poly <> cons constr
R11667:11670 sf.Poly <> cons constr
R11674:11676 sf.Poly <> nil constr
R11683:11686 sf.Poly <> cons constr
R11691:11694 sf.Poly <> cons constr
R11698:11700 sf.Poly <> nil constr
def 11740:11748 <> test_rev2
R11772:11774 Coq.Init.Logic <> :type_scope:x_'='_x not
R11753:11755 sf.Poly <> rev def
R11758:11761 sf.Poly <> cons constr
R11768:11770 sf.Poly <> nil constr
R11763:11766 sf.Basics <> true constr
R11775:11778 sf.Poly <> cons constr
R11785:11787 sf.Poly <> nil constr
R11780:11783 sf.Basics <> true constr
def 11825:11836 <> test_length1
R11876:11878 Coq.Init.Logic <> :type_scope:x_'='_x not
R11839:11844 sf.Poly <> length def
R11847:11850 sf.Poly <> cons constr
R11855:11858 sf.Poly <> cons constr
R11863:11866 sf.Poly <> cons constr
R11870:11872 sf.Poly <> nil constr
def 12232:12236 <> mynil
R12241:12243 sf.Poly <> nil constr
def 12810:12814 <> mynil
R12818:12821 sf.Poly <> list ind
R12823:12825 Coq.Init.Datatypes <> nat ind
R12830:12832 sf.Poly <> nil constr
R12961:12963 sf.Poly <> nil constr
def 12978:12983 <> mynil'
R12989:12991 sf.Poly <> nil constr
R12993:12995 Coq.Init.Datatypes <> nat ind
R13277:13280 sf.Poly <> cons constr
not 13264:13264 <> ::x_'::'_x
R13362:13364 sf.Poly <> nil constr
not 13353:13353 <> ::'['_']'
R13397:13400 sf.Poly <> cons constr
R13408:13411 sf.Poly <> cons constr
R13415:13416 sf.Poly <> ::'['_']' not
not 13376:13376 <> ::'['_x_';'_'..'_';'_x_']'
R13446:13448 sf.Poly <> app def
not 13433:13433 <> ::x_'++'_x
def 13581:13590 <> list123'''
R13595:13595 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13597:13598 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13600:13601 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13603:13603 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 13911:13919 <> app_nil_r
R13949:13952 sf.Poly <> list ind
R13954:13954 sf.Poly <> X var
R13966:13968 Coq.Init.Logic <> :type_scope:x_'='_x not
R13960:13963 sf.Poly <> ::x_'++'_x not
R13959:13959 sf.Poly <> l var
R13964:13965 sf.Poly <> ::'['_']' not
R13969:13969 sf.Poly <> l var
prf 14060:14068 <> app_assoc
R14088:14091 sf.Poly <> list ind
R14093:14093 sf.Poly <> A var
R14110:14112 Coq.Init.Logic <> :type_scope:x_'='_x not
R14100:14103 sf.Poly <> ::x_'++'_x not
R14099:14099 sf.Poly <> l var
R14105:14108 sf.Poly <> ::x_'++'_x not
R14104:14104 sf.Poly <> m var
R14109:14109 sf.Poly <> n var
R14113:14113 sf.Poly <> ::x_'++'_x not
R14120:14124 sf.Poly <> ::x_'++'_x not
R14115:14118 sf.Poly <> ::x_'++'_x not
R14114:14114 sf.Poly <> l var
R14119:14119 sf.Poly <> m var
R14125:14125 sf.Poly <> n var
prf 14228:14237 <> app_length
R14266:14269 sf.Poly <> list ind
R14271:14271 sf.Poly <> X var
R14294:14296 Coq.Init.Logic <> :type_scope:x_'='_x not
R14277:14282 sf.Poly <> length def
R14287:14290 sf.Poly <> ::x_'++'_x not
R14285:14286 sf.Poly <> l1 var
R14291:14292 sf.Poly <> l2 var
R14306:14308 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14297:14302 sf.Poly <> length def
R14304:14305 sf.Poly <> l1 var
R14309:14314 sf.Poly <> length def
R14316:14317 sf.Poly <> l2 var
prf 14553:14565 <> rev_app_distr
R14586:14589 sf.Poly <> list ind
R14591:14591 sf.Poly <> X var
R14611:14613 Coq.Init.Logic <> :type_scope:x_'='_x not
R14597:14599 sf.Poly <> rev def
R14604:14607 sf.Poly <> ::x_'++'_x not
R14602:14603 sf.Poly <> l1 var
R14608:14609 sf.Poly <> l2 var
R14620:14623 sf.Poly <> ::x_'++'_x not
R14614:14616 sf.Poly <> rev def
R14618:14619 sf.Poly <> l2 var
R14624:14626 sf.Poly <> rev def
R14628:14629 sf.Poly <> l1 var
R14676:14684 sf.Poly <> app_nil_r thm
R14676:14684 sf.Poly <> app_nil_r thm
R14676:14684 sf.Poly <> app_nil_r thm
R14736:14744 sf.Poly <> app_assoc thm
R14736:14744 sf.Poly <> app_assoc thm
R14736:14744 sf.Poly <> app_assoc thm
prf 14774:14787 <> rev_involutive
R14819:14822 sf.Poly <> list ind
R14824:14824 sf.Poly <> X var
R14840:14842 Coq.Init.Logic <> :type_scope:x_'='_x not
R14829:14831 sf.Poly <> rev def
R14834:14836 sf.Poly <> rev def
R14838:14838 sf.Poly <> l var
R14843:14843 sf.Poly <> l var
R14916:14928 sf.Poly <> rev_app_distr thm
R14916:14928 sf.Poly <> rev_app_distr thm
R14916:14928 sf.Poly <> rev_app_distr thm
ind 15272:15275 <> prod
constr 15302:15305 <> pair
R15310:15313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15315:15318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15319:15322 sf.Poly <> prod ind
R15340:15343 sf.Poly <> pair constr
R15340:15343 sf.Poly <> pair constr
R15490:15493 sf.Poly <> pair constr
not 15474:15474 <> ::'('_x_','_x_')'
R15629:15632 sf.Poly <> prod ind
not 15617:15617 <> :type_scope:x_'*'_x
def 16231:16233 <> fst
R16254:16256 sf.Poly <> :type_scope:x_'*'_x not
R16253:16253 sf.Poly <> X var
R16257:16257 sf.Poly <> Y var
R16262:16262 sf.Poly <> X var
R16275:16275 sf.Poly <> p var
R16286:16286 sf.Poly <> ::'('_x_','_x_')' not
R16288:16289 sf.Poly <> ::'('_x_','_x_')' not
R16291:16291 sf.Poly <> ::'('_x_','_x_')' not
def 16317:16319 <> snd
R16340:16342 sf.Poly <> :type_scope:x_'*'_x not
R16339:16339 sf.Poly <> X var
R16343:16343 sf.Poly <> Y var
R16348:16348 sf.Poly <> Y var
R16361:16361 sf.Poly <> p var
R16372:16372 sf.Poly <> ::'('_x_','_x_')' not
R16374:16375 sf.Poly <> ::'('_x_','_x_')' not
R16377:16377 sf.Poly <> ::'('_x_','_x_')' not
def 16624:16630 <> combine
R16651:16654 sf.Poly <> list ind
R16656:16656 sf.Poly <> X var
R16665:16668 sf.Poly <> list ind
R16670:16670 sf.Poly <> Y var
R16686:16689 sf.Poly <> list ind
R16693:16693 sf.Poly <> :type_scope:x_'*'_x not
R16692:16692 sf.Poly <> X var
R16694:16694 sf.Poly <> Y var
R16712:16713 sf.Poly <> ly var
R16708:16709 sf.Poly <> lx var
R16724:16725 sf.Poly <> ::'['_']' not
R16733:16734 sf.Poly <> ::'['_']' not
R16743:16744 sf.Poly <> ::'['_']' not
R16749:16750 sf.Poly <> ::'['_']' not
R16757:16760 sf.Poly <> ::x_'::'_x not
R16766:16769 sf.Poly <> ::x_'::'_x not
R16782:16786 sf.Poly <> ::x_'::'_x not
R16800:16800 sf.Poly <> ::x_'::'_x not
R16776:16776 sf.Poly <> ::'('_x_','_x_')' not
R16778:16779 sf.Poly <> ::'('_x_','_x_')' not
R16781:16781 sf.Poly <> ::'('_x_','_x_')' not
R16787:16793 sf.Poly <> combine def
def 17496:17500 <> split
R17520:17523 sf.Poly <> list ind
R17527:17527 sf.Poly <> :type_scope:x_'*'_x not
R17526:17526 sf.Poly <> X var
R17528:17528 sf.Poly <> Y var
R17536:17536 sf.Poly <> :type_scope:x_'*'_x not
R17543:17547 sf.Poly <> :type_scope:x_'*'_x not
R17554:17554 sf.Poly <> :type_scope:x_'*'_x not
R17537:17540 sf.Poly <> list ind
R17542:17542 sf.Poly <> X var
R17548:17551 sf.Poly <> list ind
R17553:17553 sf.Poly <> Y var
R17567:17567 sf.Poly <> l var
R17577:17579 sf.Poly <> nil constr
R17582:17582 sf.Poly <> ::'('_x_','_x_')' not
R17586:17586 sf.Poly <> ::'('_x_','_x_')' not
R17590:17590 sf.Poly <> ::'('_x_','_x_')' not
R17583:17585 sf.Poly <> nil constr
R17587:17589 sf.Poly <> nil constr
R17600:17601 sf.Poly <> ::x_'::'_x not
R17595:17595 sf.Poly <> ::'('_x_','_x_')' not
R17597:17597 sf.Poly <> ::'('_x_','_x_')' not
R17599:17599 sf.Poly <> ::'('_x_','_x_')' not
R17613:17617 sf.Poly <> split def
R17643:17643 sf.Poly <> ::'('_x_','_x_')' not
R17646:17646 sf.Poly <> ::'('_x_','_x_')' not
R17649:17649 sf.Poly <> ::'('_x_','_x_')' not
R17652:17652 sf.Poly <> ::'('_x_','_x_')' not
R17658:17658 sf.Poly <> ::'('_x_','_x_')' not
R17664:17664 sf.Poly <> ::'('_x_','_x_')' not
R17654:17655 sf.Poly <> ::x_'::'_x not
R17660:17661 sf.Poly <> ::x_'::'_x not
def 17700:17709 <> test_split
R17741:17743 Coq.Init.Logic <> :type_scope:x_'='_x not
R17714:17718 sf.Poly <> split def
R17720:17720 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17730:17730 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17740:17740 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17731:17731 sf.Poly <> ::'('_x_','_x_')' not
R17733:17733 sf.Poly <> ::'('_x_','_x_')' not
R17739:17739 sf.Poly <> ::'('_x_','_x_')' not
R17734:17738 sf.Basics <> false constr
R17721:17721 sf.Poly <> ::'('_x_','_x_')' not
R17723:17723 sf.Poly <> ::'('_x_','_x_')' not
R17729:17729 sf.Poly <> ::'('_x_','_x_')' not
R17724:17728 sf.Basics <> false constr
R17744:17744 sf.Poly <> ::'('_x_','_x_')' not
R17750:17750 sf.Poly <> ::'('_x_','_x_')' not
R17764:17764 sf.Poly <> ::'('_x_','_x_')' not
R17745:17745 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17747:17747 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17749:17749 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17751:17751 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17757:17757 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17763:17763 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17758:17762 sf.Basics <> false constr
R17752:17756 sf.Basics <> false constr
ind 18035:18040 <> option
constr 18065:18068 <> Some
constr 18090:18093 <> None
R18073:18076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18077:18082 sf.Poly <> option ind
R18097:18102 sf.Poly <> option ind
R18118:18121 sf.Poly <> Some constr
R18118:18121 sf.Poly <> Some constr
R18140:18143 sf.Poly <> None constr
R18140:18143 sf.Poly <> None constr
def 18257:18265 <> nth_error
R18283:18286 sf.Poly <> list ind
R18288:18288 sf.Poly <> X var
R18296:18298 Coq.Init.Datatypes <> nat ind
R18322:18327 sf.Poly <> option ind
R18329:18329 sf.Poly <> X var
R18342:18342 sf.Poly <> l var
R18353:18354 sf.Poly <> ::'['_']' not
R18359:18362 sf.Poly <> None constr
R18369:18372 sf.Poly <> ::x_'::'_x not
R18382:18388 sf.Basics <> beq_nat def
R18392:18392 Coq.Init.Datatypes <> O constr
R18390:18390 sf.Poly <> n var
R18411:18419 sf.Poly <> nth_error def
R18425:18428 Coq.Init.Peano <> pred syndef
R18430:18430 sf.Poly <> n var
R18399:18402 sf.Poly <> Some constr
def 18449:18463 <> test_nth_error1
R18488:18490 Coq.Init.Logic <> :type_scope:x_'='_x not
R18467:18475 sf.Poly <> nth_error def
R18477:18477 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18479:18479 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18481:18481 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18483:18483 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18485:18485 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18491:18494 sf.Poly <> Some constr
def 18532:18546 <> test_nth_error2
R18571:18573 Coq.Init.Logic <> :type_scope:x_'='_x not
R18550:18558 sf.Poly <> nth_error def
R18560:18560 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18564:18564 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18568:18568 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18565:18565 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18567:18567 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18561:18561 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18563:18563 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18574:18577 sf.Poly <> Some constr
R18579:18579 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18581:18581 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18617:18631 <> test_nth_error3
R18653:18655 Coq.Init.Logic <> :type_scope:x_'='_x not
R18635:18643 sf.Poly <> nth_error def
R18645:18645 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18650:18650 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18646:18649 sf.Basics <> true constr
R18656:18659 sf.Poly <> None constr
def 18915:18922 <> hd_error
R18940:18943 sf.Poly <> list ind
R18945:18945 sf.Poly <> X var
R18950:18955 sf.Poly <> option ind
R18957:18957 sf.Poly <> X var
R18970:18970 sf.Poly <> l var
R18980:18982 sf.Poly <> nil constr
R18985:18988 sf.Poly <> None constr
R18994:18995 sf.Poly <> ::x_'::'_x not
R19000:19003 sf.Poly <> Some constr
R19142:19149 sf.Poly <> hd_error def
def 19161:19174 <> test_hd_error1
R19192:19194 Coq.Init.Logic <> :type_scope:x_'='_x not
R19178:19185 sf.Poly <> hd_error def
R19187:19187 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19189:19189 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19191:19191 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19195:19198 sf.Poly <> Some constr
def 19222:19235 <> test_hd_error2
R19258:19261 Coq.Init.Logic <> :type_scope:x_'='_x not
R19239:19246 sf.Poly <> hd_error def
R19249:19249 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19253:19253 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19257:19257 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19254:19254 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19256:19256 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19250:19250 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19252:19252 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19262:19265 sf.Poly <> Some constr
R19267:19267 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19269:19269 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19943:19952 <> doit3times
R19967:19968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19969:19969 sf.Poly <> X var
R19966:19966 sf.Poly <> X var
R19975:19975 sf.Poly <> X var
R19980:19980 sf.Poly <> X var
R19987:19987 sf.Poly <> f var
R19990:19990 sf.Poly <> f var
R19993:19993 sf.Poly <> f var
R19995:19995 sf.Poly <> n var
R20154:20163 sf.Poly <> doit3times def
def 20235:20249 <> test_doit3times
R20273:20275 Coq.Init.Logic <> :type_scope:x_'='_x not
R20252:20261 sf.Poly <> doit3times def
R20263:20270 sf.Basics <> minustwo def
def 20314:20329 <> test_doit3times'
R20352:20354 Coq.Init.Logic <> :type_scope:x_'='_x not
R20332:20341 sf.Poly <> doit3times def
R20348:20351 sf.Basics <> true constr
R20343:20346 sf.Basics <> negb def
R20355:20359 sf.Basics <> false constr
def 20750:20755 <> filter
R20774:20775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20776:20779 sf.Basics <> bool ind
R20773:20773 sf.Poly <> X var
R20785:20788 sf.Poly <> list ind
R20790:20790 sf.Poly <> X var
R20812:20815 sf.Poly <> list ind
R20817:20817 sf.Poly <> X var
R20831:20831 sf.Poly <> l var
R20842:20843 sf.Poly <> ::'['_']' not
R20852:20853 sf.Poly <> ::'['_']' not
R20860:20863 sf.Poly <> ::x_'::'_x not
R20872:20875 sf.Poly <> test var
R20940:20945 sf.Poly <> filter def
R20947:20950 sf.Poly <> test var
R20885:20889 sf.Poly <> ::x_'::'_x not
R20903:20903 sf.Poly <> ::x_'::'_x not
R20890:20895 sf.Poly <> filter def
R20897:20900 sf.Poly <> test var
def 21131:21142 <> test_filter1
R21167:21169 Coq.Init.Logic <> :type_scope:x_'='_x not
R21145:21150 sf.Poly <> filter def
R21158:21158 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21160:21160 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21162:21162 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21164:21164 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21166:21166 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21152:21156 sf.Basics <> evenb def
R21170:21170 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21172:21172 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21174:21174 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21215:21225 <> length_is_1
R21243:21246 sf.Poly <> list ind
R21248:21248 sf.Poly <> X var
R21253:21256 sf.Basics <> bool ind
R21263:21269 sf.Basics <> beq_nat def
R21272:21277 sf.Poly <> length def
R21279:21279 sf.Poly <> l var
def 21294:21305 <> test_filter2
R21380:21384 Coq.Init.Logic <> :type_scope:x_'='_x not
R21312:21317 sf.Poly <> filter def
R21342:21343 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21350:21351 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21355:21356 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21360:21361 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21369:21370 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21373:21374 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21378:21379 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21375:21375 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21377:21377 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21371:21372 sf.Poly <> ::'['_']' not
R21362:21362 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21364:21364 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21366:21366 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21368:21368 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21357:21357 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21359:21359 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21352:21352 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21354:21354 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21344:21344 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21346:21347 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21349:21349 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21319:21329 sf.Poly <> length_is_1 def
R21385:21386 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21390:21391 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21395:21396 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21400:21401 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21397:21397 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21399:21399 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21392:21392 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21394:21394 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21387:21387 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21389:21389 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21560:21575 <> countoddmembers'
R21580:21583 sf.Poly <> list ind
R21585:21587 Coq.Init.Datatypes <> nat ind
R21592:21594 Coq.Init.Datatypes <> nat ind
R21601:21606 sf.Poly <> length def
R21609:21614 sf.Poly <> filter def
R21621:21621 sf.Poly <> l var
R21616:21619 sf.Basics <> oddb def
def 21634:21655 <> test_countoddmembers'1
R21690:21692 Coq.Init.Logic <> :type_scope:x_'='_x not
R21660:21675 sf.Poly <> countoddmembers' def
R21677:21677 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21679:21679 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21681:21681 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21683:21683 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21685:21685 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21687:21687 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21689:21689 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21730:21751 <> test_countoddmembers'2
R21780:21782 Coq.Init.Logic <> :type_scope:x_'='_x not
R21756:21771 sf.Poly <> countoddmembers' def
R21773:21773 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21775:21775 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21777:21777 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21779:21779 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21820:21841 <> test_countoddmembers'3
R21866:21868 Coq.Init.Logic <> :type_scope:x_'='_x not
R21846:21861 sf.Poly <> countoddmembers' def
R21863:21865 sf.Poly <> nil constr
def 22647:22660 <> test_anon_fun'
R22694:22696 Coq.Init.Logic <> :type_scope:x_'='_x not
R22665:22674 sf.Poly <> doit3times def
R22687:22689 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22686:22686 sf.Poly <> n var
R22690:22690 sf.Poly <> n var
def 22937:22949 <> test_filter2'
R23044:23048 Coq.Init.Logic <> :type_scope:x_'='_x not
R22956:22961 sf.Poly <> filter def
R23006:23007 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23014:23015 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23019:23020 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23024:23025 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23033:23034 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23037:23038 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23042:23043 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23039:23039 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23041:23041 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23035:23036 sf.Poly <> ::'['_']' not
R23026:23026 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23028:23028 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23030:23030 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23032:23032 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23021:23021 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23023:23023 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23016:23016 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23018:23018 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23008:23008 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23010:23011 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23013:23013 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22973:22979 sf.Basics <> beq_nat def
R22982:22987 sf.Poly <> length def
R22989:22989 sf.Poly <> l var
R23049:23050 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23054:23055 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23059:23060 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23064:23065 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23061:23061 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23063:23063 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23056:23056 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23058:23058 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23051:23051 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23053:23053 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23367:23381 <> filter_even_gt7
R23388:23391 sf.Poly <> list ind
R23393:23395 Coq.Init.Datatypes <> nat ind
R23400:23403 sf.Poly <> list ind
R23405:23407 Coq.Init.Datatypes <> nat ind
R23414:23419 sf.Poly <> filter def
R23459:23459 sf.Poly <> l var
R23428:23430 Coq.Init.Datatypes <> nat ind
R23433:23436 sf.Basics <> andb def
R23449:23451 sf.Basics <> leb def
R23455:23455 sf.Poly <> x var
R23439:23443 sf.Basics <> evenb def
R23445:23445 sf.Poly <> x var
def 23471:23492 <> test_filter_even_gt7_1
R23533:23535 Coq.Init.Logic <> :type_scope:x_'='_x not
R23498:23512 sf.Poly <> filter_even_gt7 def
R23514:23514 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23516:23516 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23518:23518 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23520:23520 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23522:23522 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23525:23525 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23527:23527 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23530:23530 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23532:23532 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23536:23536 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23539:23539 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23542:23542 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23544:23544 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23567:23588 <> test_filter_even_gt7_2
R23624:23626 Coq.Init.Logic <> :type_scope:x_'='_x not
R23594:23608 sf.Poly <> filter_even_gt7 def
R23610:23610 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23612:23612 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23614:23614 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23616:23616 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23619:23619 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23623:23623 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23627:23628 sf.Poly <> ::'['_']' not
def 24273:24281 <> partition
R24324:24327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24328:24331 sf.Basics <> bool ind
R24323:24323 sf.Poly <> X var
R24360:24363 sf.Poly <> list ind
R24365:24365 sf.Poly <> X var
R24378:24380 sf.Poly <> :type_scope:x_'*'_x not
R24372:24375 sf.Poly <> list ind
R24377:24377 sf.Poly <> X var
R24381:24384 sf.Poly <> list ind
R24386:24386 sf.Poly <> X var
R24391:24391 sf.Poly <> ::'('_x_','_x_')' not
R24405:24405 sf.Poly <> ::'('_x_','_x_')' not
R24437:24437 sf.Poly <> ::'('_x_','_x_')' not
R24392:24397 sf.Poly <> filter def
R24404:24404 sf.Poly <> l var
R24399:24402 sf.Poly <> test var
R24406:24411 sf.Poly <> filter def
R24436:24436 sf.Poly <> l var
R24421:24424 sf.Basics <> negb def
R24427:24430 sf.Poly <> test var
R24432:24432 sf.Poly <> x var
def 24449:24463 <> test_partition1
R24492:24494 Coq.Init.Logic <> :type_scope:x_'='_x not
R24466:24474 sf.Poly <> partition def
R24481:24481 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24483:24483 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24485:24485 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24487:24487 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24489:24489 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24491:24491 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24476:24479 sf.Basics <> oddb def
R24495:24495 sf.Poly <> ::'('_x_','_x_')' not
R24503:24504 sf.Poly <> ::'('_x_','_x_')' not
R24510:24510 sf.Poly <> ::'('_x_','_x_')' not
R24496:24496 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24498:24498 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24500:24500 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24502:24502 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24505:24505 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24507:24507 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24509:24509 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24532:24546 <> test_partition2
R24583:24585 Coq.Init.Logic <> :type_scope:x_'='_x not
R24549:24557 sf.Poly <> partition def
R24576:24576 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24578:24578 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24580:24580 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24582:24582 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24569:24573 sf.Basics <> false constr
R24586:24586 sf.Poly <> ::'('_x_','_x_')' not
R24589:24590 sf.Poly <> ::'('_x_','_x_')' not
R24598:24598 sf.Poly <> ::'('_x_','_x_')' not
R24587:24588 sf.Poly <> ::'['_']' not
R24591:24591 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24593:24593 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24595:24595 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24597:24597 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24780:24782 <> map
R24799:24800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24801:24801 sf.Poly <> Y var
R24798:24798 sf.Poly <> X var
R24807:24810 sf.Poly <> list ind
R24812:24812 sf.Poly <> X var
R24818:24821 sf.Poly <> list ind
R24823:24823 sf.Poly <> Y var
R24837:24837 sf.Poly <> l var
R24848:24849 sf.Poly <> ::'['_']' not
R24858:24859 sf.Poly <> ::'['_']' not
R24866:24869 sf.Poly <> ::x_'::'_x not
R24875:24875 sf.Poly <> ::x_'::'_x not
R24879:24884 sf.Poly <> ::x_'::'_x not
R24892:24892 sf.Poly <> ::x_'::'_x not
R24876:24876 sf.Poly <> f var
R24885:24887 sf.Poly <> map def
R24889:24889 sf.Poly <> f var
def 25109:25117 <> test_map1
R25151:25153 Coq.Init.Logic <> :type_scope:x_'='_x not
R25120:25122 sf.Poly <> map def
R25144:25144 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25146:25146 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25148:25148 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25150:25150 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25134:25137 Coq.Init.Peano <> plus syndef
R25141:25141 sf.Poly <> x var
R25154:25154 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25156:25156 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25158:25158 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25160:25160 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25454:25462 <> test_map2
R25485:25487 Coq.Init.Logic <> :type_scope:x_'='_x not
R25467:25469 sf.Poly <> map def
R25476:25476 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25478:25478 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25480:25480 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25482:25482 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25484:25484 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25471:25474 sf.Basics <> oddb def
R25488:25488 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25494:25494 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25499:25499 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25505:25505 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25510:25510 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25506:25509 sf.Basics <> true constr
R25500:25504 sf.Basics <> false constr
R25495:25498 sf.Basics <> true constr
R25489:25493 sf.Basics <> false constr
def 25699:25707 <> test_map3
R25755:25759 Coq.Init.Logic <> :type_scope:x_'='_x not
R25714:25716 sf.Poly <> map def
R25746:25746 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25748:25748 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25750:25750 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25752:25752 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25754:25754 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25728:25728 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25736:25736 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25743:25743 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25737:25740 sf.Basics <> oddb def
R25742:25742 sf.Poly <> n var
R25729:25733 sf.Basics <> evenb def
R25735:25735 sf.Poly <> n var
R25760:25760 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25773:25773 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25786:25786 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25799:25799 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25812:25812 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25800:25800 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25806:25806 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25811:25811 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25807:25810 sf.Basics <> true constr
R25801:25805 sf.Basics <> false constr
R25787:25787 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25792:25792 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25798:25798 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25793:25797 sf.Basics <> false constr
R25788:25791 sf.Basics <> true constr
R25774:25774 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25780:25780 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25785:25785 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25781:25784 sf.Basics <> true constr
R25775:25779 sf.Basics <> false constr
R25761:25761 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25766:25766 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25772:25772 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25767:25771 sf.Basics <> false constr
R25762:25765 sf.Basics <> true constr
prf 26074:26082 <> map_distr
R26107:26108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26109:26109 sf.Poly <> Y var
R26106:26106 sf.Poly <> X var
R26119:26122 sf.Poly <> list ind
R26124:26124 sf.Poly <> X var
R26146:26146 Coq.Init.Logic <> :type_scope:x_'='_x not
R26132:26134 sf.Poly <> map def
R26141:26142 sf.Poly <> ::x_'++'_x not
R26139:26140 sf.Poly <> l1 var
R26143:26144 sf.Poly <> l2 var
R26136:26136 sf.Poly <> f var
R26155:26157 sf.Poly <> ::x_'++'_x not
R26166:26166 sf.Poly <> ::x_'++'_x not
R26147:26149 sf.Poly <> map def
R26153:26154 sf.Poly <> l1 var
R26151:26151 sf.Poly <> f var
R26158:26160 sf.Poly <> map def
R26164:26165 sf.Poly <> l2 var
R26162:26162 sf.Poly <> f var
prf 26251:26257 <> map_rev
R26287:26290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26291:26291 sf.Poly <> Y var
R26286:26286 sf.Poly <> X var
R26299:26302 sf.Poly <> list ind
R26304:26304 sf.Poly <> X var
R26323:26325 Coq.Init.Logic <> :type_scope:x_'='_x not
R26310:26312 sf.Poly <> map def
R26317:26319 sf.Poly <> rev def
R26321:26321 sf.Poly <> l var
R26314:26314 sf.Poly <> f var
R26326:26328 sf.Poly <> rev def
R26331:26333 sf.Poly <> map def
R26337:26337 sf.Poly <> l var
R26335:26335 sf.Poly <> f var
R26390:26398 sf.Poly <> map_distr thm
R26390:26398 sf.Poly <> map_distr thm
R26390:26398 sf.Poly <> map_distr thm
def 26913:26920 <> flat_map
R26937:26940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26941:26944 sf.Poly <> list ind
R26946:26946 sf.Poly <> Y var
R26936:26936 sf.Poly <> X var
R26952:26955 sf.Poly <> list ind
R26957:26957 sf.Poly <> X var
R26965:26968 sf.Poly <> list ind
R26970:26970 sf.Poly <> Y var
R26984:26984 sf.Poly <> l var
R26994:26996 sf.Poly <> nil constr
R26999:27001 sf.Poly <> nil constr
R27007:27008 sf.Poly <> ::x_'::'_x not
R27016:27018 sf.Poly <> ::x_'++'_x not
R27032:27032 sf.Poly <> ::x_'++'_x not
R27013:27013 sf.Poly <> f var
R27019:27026 sf.Poly <> flat_map def
R27028:27028 sf.Poly <> f var
def 27050:27063 <> test_flat_map1
R27103:27107 Coq.Init.Logic <> :type_scope:x_'='_x not
R27068:27075 sf.Poly <> flat_map def
R27096:27096 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27098:27098 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27100:27100 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27102:27102 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27087:27087 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27089:27089 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27091:27091 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27093:27093 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27092:27092 sf.Poly <> n var
R27090:27090 sf.Poly <> n var
R27088:27088 sf.Poly <> n var
R27108:27108 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27110:27111 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27113:27114 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27116:27117 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27119:27120 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27122:27123 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27125:27126 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27128:27129 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27131:27132 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27134:27134 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27320:27329 <> option_map
R27350:27353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27354:27354 sf.Poly <> Y var
R27349:27349 sf.Poly <> X var
R27363:27368 sf.Poly <> option ind
R27370:27370 sf.Poly <> X var
R27397:27402 sf.Poly <> option ind
R27404:27404 sf.Poly <> Y var
R27417:27418 sf.Poly <> xo var
R27431:27434 sf.Poly <> None constr
R27439:27442 sf.Poly <> None constr
R27450:27453 sf.Poly <> Some constr
R27460:27463 sf.Poly <> Some constr
R27466:27466 sf.Poly <> f var
def 28299:28302 <> fold
R28320:28321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28323:28324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28325:28325 sf.Poly <> Y var
R28322:28322 sf.Poly <> Y var
R28319:28319 sf.Poly <> X var
R28331:28334 sf.Poly <> list ind
R28336:28336 sf.Poly <> X var
R28342:28342 sf.Poly <> Y var
R28372:28372 sf.Poly <> Y var
R28385:28385 sf.Poly <> l var
R28396:28398 sf.Poly <> nil constr
R28403:28403 sf.Poly <> b var
R28410:28413 sf.Poly <> ::x_'::'_x not
R28419:28419 sf.Poly <> f var
R28424:28427 sf.Poly <> fold def
R28433:28433 sf.Poly <> b var
R28429:28429 sf.Poly <> f var
R28908:28911 sf.Poly <> fold def
R28913:28916 sf.Basics <> andb def
def 28978:28990 <> fold_example1
R29017:29019 Coq.Init.Logic <> :type_scope:x_'='_x not
R28996:28999 sf.Poly <> fold def
R29006:29006 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29008:29008 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29010:29010 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29012:29012 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29014:29014 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29001:29004 Coq.Init.Peano <> mult syndef
def 29058:29070 <> fold_example2
R29113:29115 Coq.Init.Logic <> :type_scope:x_'='_x not
R29076:29079 sf.Poly <> fold def
R29109:29112 sf.Basics <> true constr
R29086:29086 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29091:29091 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29096:29096 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29102:29102 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29107:29107 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29103:29106 sf.Basics <> true constr
R29097:29101 sf.Basics <> false constr
R29092:29095 sf.Basics <> true constr
R29087:29090 sf.Basics <> true constr
R29081:29084 sf.Basics <> andb def
R29116:29120 sf.Basics <> false constr
def 29157:29169 <> fold_example3
R29206:29208 Coq.Init.Logic <> :type_scope:x_'='_x not
R29175:29178 sf.Poly <> fold def
R29204:29205 sf.Poly <> ::'['_']' not
R29185:29185 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29189:29189 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29192:29192 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29198:29198 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29202:29202 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29199:29199 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29201:29201 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29193:29193 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29195:29195 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29197:29197 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29190:29191 sf.Poly <> ::'['_']' not
R29186:29186 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29188:29188 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29180:29182 sf.Poly <> app def
R29209:29209 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29211:29211 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29213:29213 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29215:29215 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29217:29217 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30134:30141 <> constfun
R30157:30157 sf.Poly <> X var
R30165:30166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30167:30167 sf.Poly <> X var
R30162:30164 Coq.Init.Datatypes <> nat ind
R30181:30183 Coq.Init.Datatypes <> nat ind
R30189:30189 sf.Poly <> x var
def 30204:30208 <> ftrue
R30213:30220 sf.Poly <> constfun def
R30222:30225 sf.Basics <> true constr
def 30237:30253 <> constfun_example1
R30264:30266 Coq.Init.Logic <> :type_scope:x_'='_x not
R30257:30261 sf.Poly <> ftrue def
R30267:30270 sf.Basics <> true constr
def 30307:30323 <> constfun_example2
R30342:30344 Coq.Init.Logic <> :type_scope:x_'='_x not
R30328:30335 sf.Poly <> constfun def
R30546:30549 Coq.Init.Peano <> plus syndef
def 31160:31164 <> plus3
R31169:31172 Coq.Init.Peano <> plus syndef
R31183:31187 sf.Poly <> plus3 def
def 31199:31208 <> test_plus3
R31222:31224 Coq.Init.Logic <> :type_scope:x_'='_x not
R31215:31219 sf.Poly <> plus3 def
def 31262:31272 <> test_plus3'
R31296:31298 Coq.Init.Logic <> :type_scope:x_'='_x not
R31278:31287 sf.Poly <> doit3times def
R31289:31293 sf.Poly <> plus3 def
def 31336:31347 <> test_plus3''
R31373:31375 Coq.Init.Logic <> :type_scope:x_'='_x not
R31352:31361 sf.Poly <> doit3times def
R31364:31367 Coq.Init.Peano <> plus syndef
mod 31516:31524 <> Exercises
def 31726:31736 Exercises fold_length
R31754:31757 sf.Poly Exercises list ind
R31759:31759 sf.Poly <> X var
R31764:31766 Coq.Init.Datatypes <> nat ind
R31773:31776 sf.Poly Exercises fold def
R31795:31795 sf.Poly <> l var
R31790:31790 Coq.Init.Datatypes <> S constr
R31792:31792 sf.Poly <> n var
def 31809:31825 Exercises test_fold_length1
R31848:31850 Coq.Init.Logic <> :type_scope:x_'='_x not
R31829:31839 sf.Poly Exercises fold_length def
R31841:31841 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31843:31843 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31845:31845 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31847:31847 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 31936:31954 Exercises fold_length_correct
R31972:31975 sf.Poly Exercises list ind
R31977:31977 sf.Poly <> X var
R31996:31998 Coq.Init.Logic <> :type_scope:x_'='_x not
R31983:31993 sf.Poly Exercises fold_length def
R31995:31995 sf.Poly <> l var
R31999:32004 sf.Poly Exercises length def
R32006:32006 sf.Poly <> l var
R32050:32060 sf.Poly Exercises fold_length def
R32100:32110 sf.Poly Exercises fold_length def
def 32278:32285 Exercises fold_map
R32304:32307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32308:32308 sf.Poly <> Y var
R32303:32303 sf.Poly <> X var
R32316:32319 sf.Poly Exercises list ind
R32321:32321 sf.Poly <> X var
R32326:32329 sf.Poly Exercises list ind
R32331:32331 sf.Poly <> Y var
R32338:32341 sf.Poly Exercises fold def
R32363:32365 sf.Poly Exercises nil constr
R32361:32361 sf.Poly <> l var
R32356:32357 sf.Poly <> ::x_'::'_x not
R32353:32353 sf.Poly <> f var
R32355:32355 sf.Poly <> x var
R32358:32358 sf.Poly <> y var
prf 32504:32519 Exercises fold_map_correct
R32543:32544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32545:32545 sf.Poly <> Y var
R32542:32542 sf.Poly <> X var
R32551:32554 sf.Poly Exercises list ind
R32556:32556 sf.Poly <> X var
R32576:32576 Coq.Init.Logic <> :type_scope:x_'='_x not
R32564:32571 sf.Poly Exercises fold_map def
R32575:32575 sf.Poly <> l var
R32573:32573 sf.Poly <> f var
R32577:32579 sf.Poly Exercises map def
R32583:32583 sf.Poly <> l var
R32581:32581 sf.Poly <> f var
R32649:32656 sf.Poly Exercises fold_map def
def 33496:33505 Exercises prod_curry
R33534:33537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33538:33538 sf.Poly <> Z var
R33530:33532 sf.Poly <> :type_scope:x_'*'_x not
R33529:33529 sf.Poly <> X var
R33533:33533 sf.Poly <> Y var
R33546:33546 sf.Poly <> X var
R33554:33554 sf.Poly <> Y var
R33559:33559 sf.Poly <> Z var
R33564:33564 sf.Poly <> f var
R33566:33566 sf.Poly <> ::'('_x_','_x_')' not
R33568:33569 sf.Poly <> ::'('_x_','_x_')' not
R33571:33571 sf.Poly <> ::'('_x_','_x_')' not
R33567:33567 sf.Poly <> x var
R33570:33570 sf.Poly <> y var
def 33716:33727 Exercises prod_uncurry
R33761:33764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33766:33769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33770:33770 sf.Poly <> Z var
R33765:33765 sf.Poly <> Y var
R33760:33760 sf.Poly <> X var
R33779:33781 sf.Poly <> :type_scope:x_'*'_x not
R33778:33778 sf.Poly <> X var
R33782:33782 sf.Poly <> Y var
R33787:33787 sf.Poly <> Z var
R33800:33800 sf.Poly <> p var
R33810:33810 sf.Poly <> ::'('_x_','_x_')' not
R33812:33812 sf.Poly <> ::'('_x_','_x_')' not
R33814:33814 sf.Poly <> ::'('_x_','_x_')' not
R33817:33817 sf.Poly <> f var
def 33967:33975 Exercises test_map2
R34009:34011 Coq.Init.Logic <> :type_scope:x_'='_x not
R33978:33980 sf.Poly Exercises map def
R34002:34002 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34004:34004 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34006:34006 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34008:34008 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33992:33995 Coq.Init.Peano <> plus syndef
R33999:33999 sf.Poly <> x var
R34012:34012 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34014:34014 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34016:34016 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34018:34018 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34188:34197 sf.Poly Exercises prod_curry def
R34207:34218 sf.Poly Exercises prod_uncurry def
prf 34230:34242 Exercises uncurry_curry
R34298:34301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34303:34306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34307:34307 sf.Poly <> Z var
R34302:34302 sf.Poly <> Y var
R34297:34297 sf.Poly <> X var
R34372:34374 Coq.Init.Logic <> :type_scope:x_'='_x not
R34341:34350 sf.Poly Exercises prod_curry def
R34371:34371 sf.Poly <> y var
R34369:34369 sf.Poly <> x var
R34353:34364 sf.Poly Exercises prod_uncurry def
R34366:34366 sf.Poly <> f var
R34375:34375 sf.Poly <> f var
R34379:34379 sf.Poly <> y var
R34377:34377 sf.Poly <> x var
R34404:34413 sf.Poly Exercises prod_curry def
R34423:34434 sf.Poly Exercises prod_uncurry def
prf 34464:34476 Exercises curry_uncurry
R34531:34531 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34537:34541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34542:34542 sf.Poly <> Z var
R34533:34535 sf.Poly <> :type_scope:x_'*'_x not
R34532:34532 sf.Poly <> X var
R34536:34536 sf.Poly <> Y var
R34551:34553 sf.Poly <> :type_scope:x_'*'_x not
R34550:34550 sf.Poly <> X var
R34554:34554 sf.Poly <> Y var
R34589:34591 Coq.Init.Logic <> :type_scope:x_'='_x not
R34560:34571 sf.Poly Exercises prod_uncurry def
R34588:34588 sf.Poly <> p var
R34574:34583 sf.Poly Exercises prod_curry def
R34585:34585 sf.Poly <> f var
R34592:34592 sf.Poly <> f var
R34594:34594 sf.Poly <> p var
R34631:34642 sf.Poly Exercises prod_uncurry def
R34652:34661 sf.Poly Exercises prod_curry def
mod 35516:35521 <> Exercises.Church
def 35535:35537 Exercises.Church nat
R35559:35559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35566:35570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35572:35575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35576:35576 sf.Poly <> X var
R35571:35571 sf.Poly <> X var
R35561:35564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35565:35565 sf.Poly <> X var
R35560:35560 sf.Poly <> X var
def 35732:35734 Exercises.Church one
R35738:35740 sf.Poly Exercises.Church nat def
R35768:35771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35772:35772 sf.Poly <> X var
R35767:35767 sf.Poly <> X var
R35780:35780 sf.Poly <> X var
R35786:35786 sf.Poly <> f var
R35788:35788 sf.Poly <> x var
def 35868:35870 Exercises.Church two
R35874:35876 sf.Poly Exercises.Church nat def
R35904:35907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35908:35908 sf.Poly <> X var
R35903:35903 sf.Poly <> X var
R35916:35916 sf.Poly <> X var
R35922:35922 sf.Poly <> f var
R35925:35925 sf.Poly <> f var
R35927:35927 sf.Poly <> x var
def 36107:36110 Exercises.Church zero
R36114:36116 sf.Poly Exercises.Church nat def
R36144:36147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36148:36148 sf.Poly <> X var
R36143:36143 sf.Poly <> X var
R36156:36156 sf.Poly <> X var
R36162:36162 sf.Poly <> x var
def 36437:36441 Exercises.Church three
R36445:36447 sf.Poly Exercises.Church nat def
R36453:36462 sf.Poly Exercises.Church doit3times def
def 36670:36673 Exercises.Church succ
R36680:36682 sf.Poly Exercises.Church nat def
R36687:36689 sf.Poly Exercises.Church nat def
R36719:36722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36723:36723 sf.Poly <> X var
R36718:36718 sf.Poly <> X var
R36731:36731 sf.Poly <> X var
R36736:36736 sf.Poly <> f var
R36739:36739 sf.Poly <> n var
R36745:36745 sf.Poly <> x var
R36743:36743 sf.Poly <> f var
R36741:36741 sf.Poly <> X var
def 36758:36763 Exercises.Church succ_1
R36776:36778 Coq.Init.Logic <> :type_scope:x_'='_x not
R36767:36770 sf.Poly Exercises.Church succ def
R36772:36775 sf.Poly Exercises.Church zero def
R36779:36781 sf.Poly Exercises.Church one def
def 36811:36816 Exercises.Church succ_2
R36828:36830 Coq.Init.Logic <> :type_scope:x_'='_x not
R36820:36823 sf.Poly Exercises.Church succ def
R36825:36827 sf.Poly Exercises.Church one def
R36831:36833 sf.Poly Exercises.Church two def
def 36863:36868 Exercises.Church succ_3
R36880:36882 Coq.Init.Logic <> :type_scope:x_'='_x not
R36872:36875 sf.Poly Exercises.Church succ def
R36877:36879 sf.Poly Exercises.Church two def
R36883:36887 sf.Poly Exercises.Church three def
def 36961:36964 Exercises.Church plus
R36973:36975 sf.Poly Exercises.Church nat def
R36980:36982 sf.Poly Exercises.Church nat def
R37006:37007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37008:37008 sf.Poly <> X var
R37005:37005 sf.Poly <> X var
R37014:37014 sf.Poly <> X var
R37018:37018 sf.Poly <> n var
R37025:37025 sf.Poly <> m var
R37031:37031 sf.Poly <> x var
R37029:37029 sf.Poly <> f var
R37027:37027 sf.Poly <> X var
R37022:37022 sf.Poly <> f var
R37020:37020 sf.Poly <> X var
def 37045:37050 Exercises.Church plus_1
R37067:37069 Coq.Init.Logic <> :type_scope:x_'='_x not
R37054:37057 sf.Poly Exercises.Church plus def
R37064:37066 sf.Poly Exercises.Church one def
R37059:37062 sf.Poly Exercises.Church zero def
R37070:37072 sf.Poly Exercises.Church one def
def 37102:37107 Exercises.Church plus_2
R37125:37127 Coq.Init.Logic <> :type_scope:x_'='_x not
R37111:37114 sf.Poly Exercises.Church plus def
R37120:37124 sf.Poly Exercises.Church three def
R37116:37118 sf.Poly Exercises.Church two def
R37128:37131 sf.Poly Exercises.Church plus def
R37139:37141 sf.Poly Exercises.Church two def
R37133:37137 sf.Poly Exercises.Church three def
def 37171:37176 Exercises.Church plus_3
R37207:37209 Coq.Init.Logic <> :type_scope:x_'='_x not
R37182:37185 sf.Poly Exercises.Church plus def
R37202:37206 sf.Poly Exercises.Church three def
R37188:37191 sf.Poly Exercises.Church plus def
R37197:37199 sf.Poly Exercises.Church two def
R37193:37195 sf.Poly Exercises.Church two def
R37210:37213 sf.Poly Exercises.Church plus def
R37220:37223 sf.Poly Exercises.Church plus def
R37231:37235 sf.Poly Exercises.Church three def
R37225:37229 sf.Poly Exercises.Church three def
R37215:37217 sf.Poly Exercises.Church one def
def 37293:37296 Exercises.Church mult
R37305:37307 sf.Poly Exercises.Church nat def
R37312:37314 sf.Poly Exercises.Church nat def
R37338:37339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37340:37340 sf.Poly <> X var
R37337:37337 sf.Poly <> X var
R37346:37346 sf.Poly <> X var
R37350:37350 sf.Poly <> n var
R37362:37362 sf.Poly <> x var
R37355:37355 sf.Poly <> m var
R37359:37359 sf.Poly <> f var
R37357:37357 sf.Poly <> X var
R37352:37352 sf.Poly <> X var
def 37374:37379 Exercises.Church mult_1
R37395:37397 Coq.Init.Logic <> :type_scope:x_'='_x not
R37383:37386 sf.Poly Exercises.Church mult def
R37392:37394 sf.Poly Exercises.Church one def
R37388:37390 sf.Poly Exercises.Church one def
R37398:37400 sf.Poly Exercises.Church one def
def 37430:37435 Exercises.Church mult_2
R37467:37469 Coq.Init.Logic <> :type_scope:x_'='_x not
R37439:37442 sf.Poly Exercises.Church mult def
R37450:37453 sf.Poly Exercises.Church plus def
R37461:37465 sf.Poly Exercises.Church three def
R37455:37459 sf.Poly Exercises.Church three def
R37444:37447 sf.Poly Exercises.Church zero def
R37470:37473 sf.Poly Exercises.Church zero def
def 37503:37508 Exercises.Church mult_3
R37526:37528 Coq.Init.Logic <> :type_scope:x_'='_x not
R37512:37515 sf.Poly Exercises.Church mult def
R37521:37525 sf.Poly Exercises.Church three def
R37517:37519 sf.Poly Exercises.Church two def
R37529:37532 sf.Poly Exercises.Church plus def
R37540:37544 sf.Poly Exercises.Church three def
R37534:37538 sf.Poly Exercises.Church three def
R37851:37853 sf.Poly Exercises.Church one def
R37862:37865 sf.Poly Exercises.Church mult def
R37874:37876 sf.Poly Exercises.Church nat def
def 37891:37894 Exercises.Church exp'
R37901:37903 sf.Poly Exercises.Church nat def
R37906:37908 sf.Poly Exercises.Church nat def
R37931:37932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37933:37933 sf.Poly <> X var
R37930:37930 sf.Poly <> X var
R37939:37939 sf.Poly <> X var
R37943:37943 sf.Poly <> m var
R37975:37975 sf.Poly <> x var
R37973:37973 sf.Poly <> f var
R37963:37963 sf.Poly <> n var
R37967:37968 sf.Poly <> f' var
R37965:37965 sf.Poly <> X var
R37947:37948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37949:37949 sf.Poly <> X var
R37946:37946 sf.Poly <> X var
def 37990:37992 Exercises.Church exp
R38001:38003 sf.Poly Exercises.Church nat def
R38008:38010 sf.Poly Exercises.Church nat def
R38037:38037 sf.Poly <> m var
R38047:38047 sf.Poly <> n var
R38049:38049 sf.Poly <> X var
R38041:38042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38043:38043 sf.Poly <> X var
R38040:38040 sf.Poly <> X var
def 38205:38209 Exercises.Church exp_1
R38226:38227 Coq.Init.Logic <> :type_scope:x_'='_x not
R38213:38215 sf.Poly Exercises.Church exp def
R38221:38225 sf.Poly Exercises.Church three def
R38217:38219 sf.Poly Exercises.Church two def
R38228:38231 sf.Poly Exercises.Church plus def
R38251:38253 sf.Poly Exercises.Church two def
R38235:38238 sf.Poly Exercises.Church mult def
R38244:38248 sf.Poly Exercises.Church three def
R38240:38242 sf.Poly Exercises.Church two def
def 38282:38286 Exercises.Church exp_2
R38304:38306 Coq.Init.Logic <> :type_scope:x_'='_x not
R38290:38293 sf.Poly Exercises.Church exp' def
R38301:38303 sf.Poly Exercises.Church two def
R38295:38299 sf.Poly Exercises.Church three def
R38307:38310 sf.Poly Exercises.Church plus def
R38338:38340 sf.Poly Exercises.Church one def
R38313:38316 sf.Poly Exercises.Church mult def
R38323:38326 sf.Poly Exercises.Church mult def
R38332:38334 sf.Poly Exercises.Church two def
R38328:38330 sf.Poly Exercises.Church two def
R38318:38320 sf.Poly Exercises.Church two def
def 38389:38393 Exercises.Church exp_3
R38411:38413 Coq.Init.Logic <> :type_scope:x_'='_x not
R38397:38399 sf.Poly Exercises.Church exp def
R38407:38410 sf.Poly Exercises.Church zero def
R38401:38405 sf.Poly Exercises.Church three def
R38414:38416 sf.Poly Exercises.Church one def
R38461:38466 sf.Poly Exercises.Church <> mod
R38484:38492 sf.Poly Exercises <> mod
