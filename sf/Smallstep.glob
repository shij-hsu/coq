DIGEST 21e5e4219b0f31af410e3a8fcca20b66
Fsf.Smallstep
R69:83 Coq.Arith.Arith <> <> lib
R101:115 Coq.Arith.EqNat <> <> lib
R133:147 Coq.omega.Omega <> <> lib
R165:178 Coq.Lists.List <> <> lib
R218:221 sf.Maps <> <> lib
R239:241 sf.Imp <> <> lib
ind 4166:4167 <> tm
constr 4183:4183 <> C
constr 4224:4224 <> P
R4190:4193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4194:4195 sf.Smallstep <> tm ind
R4187:4189 Coq.Init.Datatypes <> nat ind
R4230:4233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4236:4239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4240:4241 sf.Smallstep <> tm ind
R4234:4235 sf.Smallstep <> tm ind
R4228:4229 sf.Smallstep <> tm ind
def 4397:4401 <> evalF
R4408:4409 sf.Smallstep <> tm ind
R4414:4416 Coq.Init.Datatypes <> nat ind
R4429:4429 sf.Smallstep <> t var
R4440:4440 sf.Smallstep <> C constr
R4453:4453 sf.Smallstep <> P constr
R4472:4474 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4464:4468 sf.Smallstep <> evalF def
R4475:4479 sf.Smallstep <> evalF def
ind 5100:5103 <> eval
constr 5132:5138 <> E_Const
constr 5171:5176 <> E_Plus
R5109:5112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5116:5119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5113:5115 Coq.Init.Datatypes <> nat ind
R5107:5108 sf.Smallstep <> tm ind
R5289:5292 sf.Smallstep <> eval ind
R5161:5164 sf.Smallstep <> ::x_'\\'_x not
R5158:5158 sf.Smallstep <> C constr
R5160:5160 sf.Smallstep <> n var
R5165:5165 sf.Smallstep <> n var
R5214:5223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5232:5241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5249:5253 sf.Smallstep <> ::x_'\\'_x not
R5261:5261 sf.Smallstep <> ::x_'\\'_x not
R5242:5242 sf.Smallstep <> P constr
R5247:5248 sf.Smallstep <> t2 var
R5244:5245 sf.Smallstep <> t1 var
R5256:5258 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5254:5255 sf.Smallstep <> n1 var
R5259:5260 sf.Smallstep <> n2 var
R5226:5229 sf.Smallstep <> ::x_'\\'_x not
R5224:5225 sf.Smallstep <> t2 var
R5230:5231 sf.Smallstep <> n2 var
R5208:5211 sf.Smallstep <> ::x_'\\'_x not
R5206:5207 sf.Smallstep <> t1 var
R5212:5213 sf.Smallstep <> n1 var
R5289:5292 sf.Smallstep <> eval ind
not 5272:5272 <> ::x_'\\'_x
mod 5308:5319 <> SimpleArith1
ind 5937:5940 SimpleArith1 step
constr 5968:5984 SimpleArith1 ST_PlusConstConst
constr 6044:6051 SimpleArith1 ST_Plus1
constr 6124:6131 SimpleArith1 ST_Plus2
R5946:5949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5952:5955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5950:5951 sf.Smallstep SimpleArith1 tm ind
R5944:5945 sf.Smallstep SimpleArith1 tm ind
R6236:6239 sf.Smallstep <> step ind
R6023:6027 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R6008:6008 sf.Smallstep SimpleArith1 P constr
R6018:6018 sf.Smallstep SimpleArith1 C constr
R6020:6021 sf.Smallstep <> n2 var
R6011:6011 sf.Smallstep SimpleArith1 C constr
R6013:6014 sf.Smallstep <> n1 var
R6028:6028 sf.Smallstep SimpleArith1 C constr
R6033:6035 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6031:6032 sf.Smallstep <> n1 var
R6036:6037 sf.Smallstep <> n2 var
R6089:6098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6106:6110 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R6099:6099 sf.Smallstep SimpleArith1 P constr
R6104:6105 sf.Smallstep <> t2 var
R6101:6102 sf.Smallstep <> t1 var
R6111:6111 sf.Smallstep SimpleArith1 P constr
R6117:6118 sf.Smallstep <> t2 var
R6113:6115 sf.Smallstep <> t1' var
R6081:6085 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R6079:6080 sf.Smallstep <> t1 var
R6086:6088 sf.Smallstep <> t1' var
R6169:6178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6190:6194 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R6179:6179 sf.Smallstep SimpleArith1 P constr
R6188:6189 sf.Smallstep <> t2 var
R6182:6182 sf.Smallstep SimpleArith1 C constr
R6184:6185 sf.Smallstep <> n1 var
R6195:6195 sf.Smallstep SimpleArith1 P constr
R6204:6206 sf.Smallstep <> t2' var
R6198:6198 sf.Smallstep SimpleArith1 C constr
R6200:6201 sf.Smallstep <> n1 var
R6161:6165 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R6159:6160 sf.Smallstep <> t2 var
R6166:6168 sf.Smallstep <> t2' var
R6236:6239 sf.Smallstep SimpleArith1 step ind
not 6217:6217 SimpleArith1 ::x_'==>'_x
def 6874:6884 SimpleArith1 test_step_1
R6943:6959 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R6894:6894 sf.Smallstep SimpleArith1 P constr
R6929:6929 sf.Smallstep SimpleArith1 P constr
R6938:6938 sf.Smallstep SimpleArith1 C constr
R6932:6932 sf.Smallstep SimpleArith1 C constr
R6905:6905 sf.Smallstep SimpleArith1 P constr
R6914:6914 sf.Smallstep SimpleArith1 C constr
R6908:6908 sf.Smallstep SimpleArith1 C constr
R6960:6960 sf.Smallstep SimpleArith1 P constr
R6991:6991 sf.Smallstep SimpleArith1 P constr
R7000:7000 sf.Smallstep SimpleArith1 C constr
R6994:6994 sf.Smallstep SimpleArith1 C constr
R6971:6971 sf.Smallstep SimpleArith1 C constr
R6975:6977 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7022:7029 sf.Smallstep SimpleArith1 ST_Plus1 constr
R7022:7029 sf.Smallstep SimpleArith1 ST_Plus1 constr
R7038:7054 sf.Smallstep SimpleArith1 ST_PlusConstConst constr
R7038:7054 sf.Smallstep SimpleArith1 ST_PlusConstConst constr
def 7295:7305 SimpleArith1 test_step_2
R7384:7400 sf.Smallstep SimpleArith1 ::x_'==>'_x not
R7315:7315 sf.Smallstep SimpleArith1 P constr
R7340:7340 sf.Smallstep SimpleArith1 P constr
R7369:7369 sf.Smallstep SimpleArith1 P constr
R7378:7378 sf.Smallstep SimpleArith1 C constr
R7372:7372 sf.Smallstep SimpleArith1 C constr
R7353:7353 sf.Smallstep SimpleArith1 C constr
R7326:7326 sf.Smallstep SimpleArith1 C constr
R7401:7401 sf.Smallstep SimpleArith1 P constr
R7426:7426 sf.Smallstep SimpleArith1 P constr
R7455:7455 sf.Smallstep SimpleArith1 C constr
R7459:7461 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7439:7439 sf.Smallstep SimpleArith1 C constr
R7412:7412 sf.Smallstep SimpleArith1 C constr
R7512:7519 sf.Smallstep SimpleArith1 ST_Plus2 constr
R7512:7519 sf.Smallstep SimpleArith1 ST_Plus2 constr
R7529:7536 sf.Smallstep SimpleArith1 ST_Plus2 constr
R7529:7536 sf.Smallstep SimpleArith1 ST_Plus2 constr
R7546:7562 sf.Smallstep SimpleArith1 ST_PlusConstConst constr
R7546:7562 sf.Smallstep SimpleArith1 ST_PlusConstConst constr
R7585:7596 sf.Smallstep SimpleArith1 <> mod
def 8202:8209 <> relation
R8225:8226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8228:8229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8227:8227 sf.Smallstep <> X var
R8224:8224 sf.Smallstep <> X var
def 9985:9997 <> deterministic
R10013:10020 sf.Smallstep <> relation def
R10022:10022 sf.Smallstep <> X var
R10047:10047 sf.Smallstep <> X var
R10056:10059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10066:10069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10072:10074 Coq.Init.Logic <> :type_scope:x_'='_x not
R10070:10071 sf.Smallstep <> y1 var
R10075:10076 sf.Smallstep <> y2 var
R10060:10060 sf.Smallstep <> R var
R10064:10065 sf.Smallstep <> y2 var
R10062:10062 sf.Smallstep <> x var
R10050:10050 sf.Smallstep <> R var
R10054:10055 sf.Smallstep <> y1 var
R10052:10052 sf.Smallstep <> x var
mod 10087:10098 <> SimpleArith2
prf 10131:10148 SimpleArith2 step_deterministic
R10153:10165 sf.Smallstep SimpleArith2 deterministic def
R10167:10170 sf.Smallstep SimpleArith1 step ind
R10189:10201 sf.Smallstep SimpleArith2 deterministic def
R10945:10956 sf.Smallstep SimpleArith2 <> mod
R11648:11648 Coq.Init.Datatypes <> S constr
R11651:11651 Coq.Init.Datatypes <> S constr
R11648:11648 Coq.Init.Datatypes <> S constr
R11651:11651 Coq.Init.Datatypes <> S constr
R11688:11688 Coq.Init.Datatypes <> S constr
mod 12611:12622 <> SimpleArith3
prf 12655:12676 SimpleArith3 step_deterministic_alt
R12679:12691 sf.Smallstep SimpleArith3 deterministic def
R12693:12696 sf.Smallstep SimpleArith1 step ind
R13023:13034 sf.Smallstep SimpleArith3 <> mod
ind 14187:14191 <> value
constr 14211:14217 <> v_const
R14197:14200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14195:14196 sf.Smallstep <> tm ind
R14231:14235 sf.Smallstep <> value ind
R14238:14238 sf.Smallstep <> C constr
R14240:14240 sf.Smallstep <> n var
ind 15457:15460 <> step
constr 15488:15504 <> ST_PlusConstConst
constr 15574:15581 <> ST_Plus1
constr 15658:15665 <> ST_Plus2
R15466:15469 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15472:15475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15470:15471 sf.Smallstep <> tm ind
R15464:15465 sf.Smallstep <> tm ind
R15824:15827 sf.Smallstep <> step ind
R15547:15557 sf.Smallstep <> ::x_'==>'_x not
R15532:15532 sf.Smallstep <> P constr
R15542:15542 sf.Smallstep <> C constr
R15544:15545 sf.Smallstep <> n2 var
R15535:15535 sf.Smallstep <> C constr
R15537:15538 sf.Smallstep <> n1 var
R15558:15558 sf.Smallstep <> C constr
R15563:15565 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15561:15562 sf.Smallstep <> n1 var
R15566:15567 sf.Smallstep <> n2 var
R15621:15632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15640:15644 sf.Smallstep <> ::x_'==>'_x not
R15633:15633 sf.Smallstep <> P constr
R15638:15639 sf.Smallstep <> t2 var
R15635:15636 sf.Smallstep <> t1 var
R15645:15645 sf.Smallstep <> P constr
R15651:15652 sf.Smallstep <> t2 var
R15647:15649 sf.Smallstep <> t1' var
R15613:15617 sf.Smallstep <> ::x_'==>'_x not
R15611:15612 sf.Smallstep <> t1 var
R15618:15620 sf.Smallstep <> t1' var
R15703:15752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15763:15774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15782:15786 sf.Smallstep <> ::x_'==>'_x not
R15775:15775 sf.Smallstep <> P constr
R15780:15781 sf.Smallstep <> t2 var
R15777:15778 sf.Smallstep <> v1 var
R15787:15787 sf.Smallstep <> P constr
R15792:15794 sf.Smallstep <> t2' var
R15789:15790 sf.Smallstep <> v1 var
R15755:15759 sf.Smallstep <> ::x_'==>'_x not
R15753:15754 sf.Smallstep <> t2 var
R15760:15762 sf.Smallstep <> t2' var
R15695:15699 sf.Smallstep <> value ind
R15701:15702 sf.Smallstep <> v1 var
R15824:15827 sf.Smallstep <> step ind
not 15805:15805 <> ::x_'==>'_x
prf 17102:17119 <> step_deterministic
R17125:17137 sf.Smallstep <> deterministic def
R17139:17142 sf.Smallstep <> step ind
R17159:17171 sf.Smallstep <> deterministic def
prf 18965:18979 <> strong_progress
R19002:19006 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19026:19026 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18995:18999 sf.Smallstep <> value ind
R19001:19001 sf.Smallstep <> t var
R19007:19013 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19016:19017 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19019:19023 sf.Smallstep <> ::x_'==>'_x not
R19018:19018 sf.Smallstep <> t var
R19024:19025 sf.Smallstep <> t' var
R19077:19083 sf.Smallstep <> v_const constr
R19077:19083 sf.Smallstep <> v_const constr
R19218:19218 sf.Smallstep <> C constr
R19222:19224 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19218:19218 sf.Smallstep <> C constr
R19222:19224 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19247:19263 sf.Smallstep <> ST_PlusConstConst constr
R19247:19263 sf.Smallstep <> ST_PlusConstConst constr
R19327:19327 sf.Smallstep <> P constr
R19327:19327 sf.Smallstep <> P constr
R19353:19360 sf.Smallstep <> ST_Plus2 constr
R19353:19360 sf.Smallstep <> ST_Plus2 constr
R19440:19440 sf.Smallstep <> P constr
R19440:19440 sf.Smallstep <> P constr
R19466:19473 sf.Smallstep <> ST_Plus1 constr
R19466:19473 sf.Smallstep <> ST_Plus1 constr
def 20149:20159 <> normal_form
R20173:20180 sf.Smallstep <> relation def
R20182:20182 sf.Smallstep <> X var
R20188:20188 sf.Smallstep <> X var
R20203:20204 Coq.Init.Logic <> :type_scope:'~'_x not
R20205:20211 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20214:20215 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20216:20216 sf.Smallstep <> R var
R20220:20221 sf.Smallstep <> t' var
R20218:20218 sf.Smallstep <> t var
prf 20771:20781 <> value_is_nf
R20804:20807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20808:20818 sf.Smallstep <> normal_form def
R20825:20825 sf.Smallstep <> v var
R20820:20823 sf.Smallstep <> step ind
R20797:20801 sf.Smallstep <> value ind
R20803:20803 sf.Smallstep <> v var
R20844:20854 sf.Smallstep <> normal_form def
prf 20943:20953 <> nf_is_value
R20987:20990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20991:20995 sf.Smallstep <> value ind
R20997:20997 sf.Smallstep <> t var
R20969:20979 sf.Smallstep <> normal_form def
R20986:20986 sf.Smallstep <> t var
R20981:20984 sf.Smallstep <> step ind
R21058:21068 sf.Smallstep <> normal_form def
R21104:21107 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21097:21101 sf.Smallstep <> value ind
R21108:21114 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21117:21118 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21120:21124 sf.Smallstep <> ::x_'==>'_x not
R21125:21126 sf.Smallstep <> t' var
R21104:21107 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21097:21101 sf.Smallstep <> value ind
R21108:21114 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21117:21118 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21120:21124 sf.Smallstep <> ::x_'==>'_x not
R21125:21126 sf.Smallstep <> t' var
R21165:21179 sf.Smallstep <> strong_progress thm
R21165:21179 sf.Smallstep <> strong_progress thm
prf 21284:21299 <> nf_same_as_value
R21333:21337 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21315:21325 sf.Smallstep <> normal_form def
R21332:21332 sf.Smallstep <> t var
R21327:21330 sf.Smallstep <> step ind
R21338:21342 sf.Smallstep <> value ind
R21344:21344 sf.Smallstep <> t var
R21369:21379 sf.Smallstep <> nf_is_value thm
R21369:21379 sf.Smallstep <> nf_is_value thm
R21388:21398 sf.Smallstep <> value_is_nf thm
R21388:21398 sf.Smallstep <> value_is_nf thm
mod 22124:22128 <> Temp1
ind 22142:22146 Temp1 value
constr 22166:22172 Temp1 v_const
constr 22200:22206 Temp1 v_funny
R22152:22155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22150:22151 sf.Smallstep Temp1 tm ind
R22186:22190 sf.Smallstep <> value ind
R22193:22193 sf.Smallstep Temp1 C constr
R22195:22195 sf.Smallstep <> n var
R22272:22276 sf.Smallstep <> value ind
R22279:22279 sf.Smallstep Temp1 P constr
R22285:22285 sf.Smallstep Temp1 C constr
R22287:22288 sf.Smallstep <> n2 var
R22281:22282 sf.Smallstep <> t1 var
ind 22353:22356 Temp1 step
constr 22384:22400 Temp1 ST_PlusConstConst
constr 22460:22467 Temp1 ST_Plus1
constr 22540:22547 Temp1 ST_Plus2
R22362:22365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22368:22371 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22366:22367 sf.Smallstep Temp1 tm ind
R22360:22361 sf.Smallstep Temp1 tm ind
R22662:22665 sf.Smallstep <> step ind
R22439:22443 sf.Smallstep Temp1 ::x_'==>'_x not
R22424:22424 sf.Smallstep Temp1 P constr
R22434:22434 sf.Smallstep Temp1 C constr
R22436:22437 sf.Smallstep <> n2 var
R22427:22427 sf.Smallstep Temp1 C constr
R22429:22430 sf.Smallstep <> n1 var
R22444:22444 sf.Smallstep Temp1 C constr
R22449:22451 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22447:22448 sf.Smallstep <> n1 var
R22452:22453 sf.Smallstep <> n2 var
R22505:22514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22522:22526 sf.Smallstep Temp1 ::x_'==>'_x not
R22515:22515 sf.Smallstep Temp1 P constr
R22520:22521 sf.Smallstep <> t2 var
R22517:22518 sf.Smallstep <> t1 var
R22527:22527 sf.Smallstep Temp1 P constr
R22533:22534 sf.Smallstep <> t2 var
R22529:22531 sf.Smallstep <> t1' var
R22497:22501 sf.Smallstep Temp1 ::x_'==>'_x not
R22495:22496 sf.Smallstep <> t1 var
R22502:22504 sf.Smallstep <> t1' var
R22583:22592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22603:22612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22620:22624 sf.Smallstep Temp1 ::x_'==>'_x not
R22613:22613 sf.Smallstep Temp1 P constr
R22618:22619 sf.Smallstep <> t2 var
R22615:22616 sf.Smallstep <> v1 var
R22625:22625 sf.Smallstep Temp1 P constr
R22630:22632 sf.Smallstep <> t2' var
R22627:22628 sf.Smallstep <> v1 var
R22595:22599 sf.Smallstep Temp1 ::x_'==>'_x not
R22593:22594 sf.Smallstep <> t2 var
R22600:22602 sf.Smallstep <> t2' var
R22575:22579 sf.Smallstep Temp1 value ind
R22581:22582 sf.Smallstep <> v1 var
R22662:22665 sf.Smallstep Temp1 step ind
not 22643:22643 Temp1 ::x_'==>'_x
prf 22681:22709 Temp1 value_not_same_as_normal_form
R22715:22721 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22723:22724 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22732:22735 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22725:22729 sf.Smallstep Temp1 value ind
R22731:22731 sf.Smallstep <> v var
R22736:22737 Coq.Init.Logic <> :type_scope:'~'_x not
R22738:22748 sf.Smallstep Temp1 normal_form def
R22755:22755 sf.Smallstep <> v var
R22750:22753 sf.Smallstep Temp1 step ind
R22773:22773 sf.Smallstep Temp1 P constr
R22782:22782 sf.Smallstep Temp1 C constr
R22776:22776 sf.Smallstep Temp1 C constr
R22773:22773 sf.Smallstep Temp1 P constr
R22782:22782 sf.Smallstep Temp1 C constr
R22776:22776 sf.Smallstep Temp1 C constr
R22802:22808 sf.Smallstep Temp1 v_funny constr
R22802:22808 sf.Smallstep Temp1 v_funny constr
R22821:22823 Coq.Init.Logic <> not def
R22841:22851 sf.Smallstep Temp1 normal_form def
R22879:22879 sf.Smallstep Temp1 C constr
R22879:22879 sf.Smallstep Temp1 C constr
R22891:22907 sf.Smallstep Temp1 ST_PlusConstConst constr
R22891:22907 sf.Smallstep Temp1 ST_PlusConstConst constr
R22950:22954 sf.Smallstep Temp1 <> mod
mod 23169:23173 <> Temp2
ind 23187:23191 Temp2 value
constr 23211:23217 Temp2 v_const
R23197:23200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23195:23196 sf.Smallstep Temp2 tm ind
R23231:23235 sf.Smallstep <> value ind
R23238:23238 sf.Smallstep Temp2 C constr
R23240:23240 sf.Smallstep <> n var
ind 23304:23307 Temp2 step
constr 23335:23342 Temp2 ST_Funny
constr 23424:23440 Temp2 ST_PlusConstConst
constr 23500:23507 Temp2 ST_Plus1
constr 23580:23587 Temp2 ST_Plus2
R23313:23316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23319:23322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23317:23318 sf.Smallstep Temp2 tm ind
R23311:23312 sf.Smallstep Temp2 tm ind
R23702:23705 sf.Smallstep <> step ind
R23401:23405 sf.Smallstep Temp2 ::x_'==>'_x not
R23398:23398 sf.Smallstep Temp2 C constr
R23400:23400 sf.Smallstep <> n var
R23406:23406 sf.Smallstep Temp2 P constr
R23415:23415 sf.Smallstep Temp2 C constr
R23409:23409 sf.Smallstep Temp2 C constr
R23411:23411 sf.Smallstep <> n var
R23479:23483 sf.Smallstep Temp2 ::x_'==>'_x not
R23464:23464 sf.Smallstep Temp2 P constr
R23474:23474 sf.Smallstep Temp2 C constr
R23476:23477 sf.Smallstep <> n2 var
R23467:23467 sf.Smallstep Temp2 C constr
R23469:23470 sf.Smallstep <> n1 var
R23484:23484 sf.Smallstep Temp2 C constr
R23489:23491 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23487:23488 sf.Smallstep <> n1 var
R23492:23493 sf.Smallstep <> n2 var
R23545:23554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23562:23566 sf.Smallstep Temp2 ::x_'==>'_x not
R23555:23555 sf.Smallstep Temp2 P constr
R23560:23561 sf.Smallstep <> t2 var
R23557:23558 sf.Smallstep <> t1 var
R23567:23567 sf.Smallstep Temp2 P constr
R23573:23574 sf.Smallstep <> t2 var
R23569:23571 sf.Smallstep <> t1' var
R23537:23541 sf.Smallstep Temp2 ::x_'==>'_x not
R23535:23536 sf.Smallstep <> t1 var
R23542:23544 sf.Smallstep <> t1' var
R23623:23632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23643:23652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23660:23664 sf.Smallstep Temp2 ::x_'==>'_x not
R23653:23653 sf.Smallstep Temp2 P constr
R23658:23659 sf.Smallstep <> t2 var
R23655:23656 sf.Smallstep <> v1 var
R23665:23665 sf.Smallstep Temp2 P constr
R23670:23672 sf.Smallstep <> t2' var
R23667:23668 sf.Smallstep <> v1 var
R23635:23639 sf.Smallstep Temp2 ::x_'==>'_x not
R23633:23634 sf.Smallstep <> t2 var
R23640:23642 sf.Smallstep <> t2' var
R23615:23619 sf.Smallstep Temp2 value ind
R23621:23622 sf.Smallstep <> v1 var
R23702:23705 sf.Smallstep Temp2 step ind
not 23683:23683 Temp2 ::x_'==>'_x
prf 23721:23749 Temp2 value_not_same_as_normal_form
R23755:23761 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23763:23764 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23772:23775 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23765:23769 sf.Smallstep Temp2 value ind
R23771:23771 sf.Smallstep <> v var
R23776:23777 Coq.Init.Logic <> :type_scope:'~'_x not
R23778:23788 sf.Smallstep Temp2 normal_form def
R23795:23795 sf.Smallstep <> v var
R23790:23793 sf.Smallstep Temp2 step ind
R23813:23813 sf.Smallstep Temp2 C constr
R23813:23813 sf.Smallstep Temp2 C constr
R23837:23843 sf.Smallstep Temp2 v_const constr
R23837:23843 sf.Smallstep Temp2 v_const constr
R23858:23868 sf.Smallstep Temp2 normal_form def
R23878:23880 Coq.Init.Logic <> not def
R23913:23913 sf.Smallstep Temp2 P constr
R23922:23922 sf.Smallstep Temp2 C constr
R23916:23916 sf.Smallstep Temp2 C constr
R23913:23913 sf.Smallstep Temp2 P constr
R23922:23922 sf.Smallstep Temp2 C constr
R23916:23916 sf.Smallstep Temp2 C constr
R23935:23942 sf.Smallstep Temp2 ST_Funny constr
R23935:23942 sf.Smallstep Temp2 ST_Funny constr
R23987:23991 sf.Smallstep Temp2 <> mod
mod 24468:24472 <> Temp3
ind 24486:24490 Temp3 value
constr 24512:24518 Temp3 v_const
R24496:24499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24494:24495 sf.Smallstep Temp3 tm ind
R24532:24536 sf.Smallstep <> value ind
R24539:24539 sf.Smallstep Temp3 C constr
R24541:24541 sf.Smallstep <> n var
ind 24605:24608 Temp3 step
constr 24636:24652 Temp3 ST_PlusConstConst
constr 24712:24719 Temp3 ST_Plus1
R24614:24617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24620:24623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24618:24619 sf.Smallstep Temp3 tm ind
R24612:24613 sf.Smallstep Temp3 tm ind
R24816:24819 sf.Smallstep <> step ind
R24691:24695 sf.Smallstep Temp3 ::x_'==>'_x not
R24676:24676 sf.Smallstep Temp3 P constr
R24686:24686 sf.Smallstep Temp3 C constr
R24688:24689 sf.Smallstep <> n2 var
R24679:24679 sf.Smallstep Temp3 C constr
R24681:24682 sf.Smallstep <> n1 var
R24696:24696 sf.Smallstep Temp3 C constr
R24701:24703 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24699:24700 sf.Smallstep <> n1 var
R24704:24705 sf.Smallstep <> n2 var
R24757:24766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24774:24778 sf.Smallstep Temp3 ::x_'==>'_x not
R24767:24767 sf.Smallstep Temp3 P constr
R24772:24773 sf.Smallstep <> t2 var
R24769:24770 sf.Smallstep <> t1 var
R24779:24779 sf.Smallstep Temp3 P constr
R24785:24786 sf.Smallstep <> t2 var
R24781:24783 sf.Smallstep <> t1' var
R24749:24753 sf.Smallstep Temp3 ::x_'==>'_x not
R24747:24748 sf.Smallstep <> t1 var
R24754:24756 sf.Smallstep <> t1' var
R24816:24819 sf.Smallstep Temp3 step ind
not 24797:24797 Temp3 ::x_'==>'_x
prf 24878:24906 Temp3 value_not_same_as_normal_form
R24912:24918 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24920:24921 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24931:24934 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24922:24923 Coq.Init.Logic <> :type_scope:'~'_x not
R24924:24928 sf.Smallstep Temp3 value ind
R24930:24930 sf.Smallstep <> t var
R24935:24945 sf.Smallstep Temp3 normal_form def
R24952:24952 sf.Smallstep <> t var
R24947:24950 sf.Smallstep Temp3 step ind
R24970:24970 sf.Smallstep Temp3 P constr
R24979:24979 sf.Smallstep Temp3 P constr
R24988:24988 sf.Smallstep Temp3 C constr
R24982:24982 sf.Smallstep Temp3 C constr
R24973:24973 sf.Smallstep Temp3 C constr
R24970:24970 sf.Smallstep Temp3 P constr
R24979:24979 sf.Smallstep Temp3 P constr
R24988:24988 sf.Smallstep Temp3 C constr
R24982:24982 sf.Smallstep Temp3 C constr
R24973:24973 sf.Smallstep Temp3 C constr
R25015:25017 Coq.Init.Logic <> not def
R25053:25063 sf.Smallstep Temp3 normal_form def
R25066:25068 Coq.Init.Logic <> not def
R25164:25168 sf.Smallstep Temp3 <> mod
mod 25284:25288 <> Temp4
ind 25493:25494 Temp4 tm
constr 25510:25514 Temp4 ttrue
constr 25525:25530 Temp4 tfalse
constr 25541:25543 Temp4 tif
R25518:25519 sf.Smallstep <> tm ind
R25534:25535 sf.Smallstep <> tm ind
R25549:25552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25555:25558 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25561:25564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25565:25566 sf.Smallstep <> tm ind
R25559:25560 sf.Smallstep <> tm ind
R25553:25554 sf.Smallstep <> tm ind
R25547:25548 sf.Smallstep <> tm ind
ind 25580:25584 Temp4 value
constr 25606:25611 Temp4 v_true
constr 25631:25637 Temp4 v_false
R25590:25593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25588:25589 sf.Smallstep Temp4 tm ind
R25615:25619 sf.Smallstep <> value ind
R25621:25625 sf.Smallstep Temp4 ttrue constr
R25641:25645 sf.Smallstep <> value ind
R25647:25652 sf.Smallstep Temp4 tfalse constr
ind 25715:25718 Temp4 step
constr 25746:25754 Temp4 ST_IfTrue
constr 25805:25814 Temp4 ST_IfFalse
constr 25866:25870 Temp4 ST_If
R25724:25727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25730:25733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25728:25729 sf.Smallstep Temp4 tm ind
R25722:25723 sf.Smallstep Temp4 tm ind
R25980:25983 sf.Smallstep <> step ind
R25793:25797 sf.Smallstep Temp4 ::x_'==>'_x not
R25778:25780 sf.Smallstep Temp4 tif constr
R25791:25792 sf.Smallstep <> t2 var
R25788:25789 sf.Smallstep <> t1 var
R25782:25786 sf.Smallstep Temp4 ttrue constr
R25798:25799 sf.Smallstep <> t1 var
R25854:25858 sf.Smallstep Temp4 ::x_'==>'_x not
R25838:25840 sf.Smallstep Temp4 tif constr
R25852:25853 sf.Smallstep <> t2 var
R25849:25850 sf.Smallstep <> t1 var
R25842:25847 sf.Smallstep Temp4 tfalse constr
R25859:25860 sf.Smallstep <> t2 var
R25911:25920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25933:25937 sf.Smallstep Temp4 ::x_'==>'_x not
R25921:25923 sf.Smallstep Temp4 tif constr
R25931:25932 sf.Smallstep <> t3 var
R25928:25929 sf.Smallstep <> t2 var
R25925:25926 sf.Smallstep <> t1 var
R25938:25940 sf.Smallstep Temp4 tif constr
R25949:25950 sf.Smallstep <> t3 var
R25946:25947 sf.Smallstep <> t2 var
R25942:25944 sf.Smallstep <> t1' var
R25903:25907 sf.Smallstep Temp4 ::x_'==>'_x not
R25901:25902 sf.Smallstep <> t1 var
R25908:25910 sf.Smallstep <> t1' var
R25980:25983 sf.Smallstep Temp4 step ind
not 25961:25961 Temp4 ::x_'==>'_x
def 26221:26235 Temp4 bool_step_prop1
R26248:26252 sf.Smallstep Temp4 ::x_'==>'_x not
R26242:26247 sf.Smallstep Temp4 tfalse constr
R26253:26258 sf.Smallstep Temp4 tfalse constr
def 26293:26307 Temp4 bool_step_prop2
R26398:26409 sf.Smallstep Temp4 ::x_'==>'_x not
R26317:26319 sf.Smallstep Temp4 tif constr
R26373:26375 sf.Smallstep Temp4 tif constr
R26391:26396 sf.Smallstep Temp4 tfalse constr
R26384:26389 sf.Smallstep Temp4 tfalse constr
R26377:26382 sf.Smallstep Temp4 tfalse constr
R26342:26344 sf.Smallstep Temp4 tif constr
R26358:26362 sf.Smallstep Temp4 ttrue constr
R26352:26356 sf.Smallstep Temp4 ttrue constr
R26346:26350 sf.Smallstep Temp4 ttrue constr
R26328:26332 sf.Smallstep Temp4 ttrue constr
R26410:26414 sf.Smallstep Temp4 ttrue constr
def 26449:26463 Temp4 bool_step_prop3
R26552:26564 sf.Smallstep Temp4 ::x_'==>'_x not
R26473:26475 sf.Smallstep Temp4 tif constr
R26546:26551 sf.Smallstep Temp4 tfalse constr
R26516:26518 sf.Smallstep Temp4 tif constr
R26532:26536 sf.Smallstep Temp4 ttrue constr
R26526:26530 sf.Smallstep Temp4 ttrue constr
R26520:26524 sf.Smallstep Temp4 ttrue constr
R26485:26487 sf.Smallstep Temp4 tif constr
R26501:26505 sf.Smallstep Temp4 ttrue constr
R26495:26499 sf.Smallstep Temp4 ttrue constr
R26489:26493 sf.Smallstep Temp4 ttrue constr
R26565:26567 sf.Smallstep Temp4 tif constr
R26620:26625 sf.Smallstep Temp4 tfalse constr
R26590:26592 sf.Smallstep Temp4 tif constr
R26606:26610 sf.Smallstep Temp4 ttrue constr
R26600:26604 sf.Smallstep Temp4 ttrue constr
R26594:26598 sf.Smallstep Temp4 ttrue constr
R26576:26580 sf.Smallstep Temp4 ttrue constr
prf 26634:26656 Temp4 bool_step_prop3_correct
R26659:26673 sf.Smallstep Temp4 bool_step_prop3 def
R26690:26704 sf.Smallstep Temp4 bool_step_prop3 def
R26714:26718 sf.Smallstep Temp4 ST_If constr
R26714:26718 sf.Smallstep Temp4 ST_If constr
R26728:26736 sf.Smallstep Temp4 ST_IfTrue constr
R26728:26736 sf.Smallstep Temp4 ST_IfTrue constr
prf 26957:26971 Temp4 strong_progress
R26994:26998 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27018:27018 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26987:26991 sf.Smallstep Temp4 value ind
R26993:26993 sf.Smallstep <> t var
R26999:27005 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27008:27009 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27011:27015 sf.Smallstep Temp4 ::x_'==>'_x not
R27010:27010 sf.Smallstep <> t var
R27016:27017 sf.Smallstep <> t' var
R27066:27071 sf.Smallstep Temp4 v_true constr
R27066:27071 sf.Smallstep Temp4 v_true constr
R27091:27097 sf.Smallstep Temp4 v_false constr
R27091:27097 sf.Smallstep Temp4 v_false constr
R27180:27188 sf.Smallstep Temp4 ST_IfTrue constr
R27180:27188 sf.Smallstep Temp4 ST_IfTrue constr
R27218:27227 sf.Smallstep Temp4 ST_IfFalse constr
R27218:27227 sf.Smallstep Temp4 ST_IfFalse constr
R27279:27281 sf.Smallstep Temp4 tif constr
R27279:27281 sf.Smallstep Temp4 tif constr
R27299:27303 sf.Smallstep Temp4 ST_If constr
R27299:27303 sf.Smallstep Temp4 ST_If constr
prf 27425:27442 Temp4 step_deterministic
R27448:27460 sf.Smallstep Temp4 deterministic def
R27462:27465 sf.Smallstep Temp4 step ind
R27482:27494 sf.Smallstep Temp4 deterministic def
mod 27861:27865 <> Temp4.Temp5
ind 28635:28638 Temp4.Temp5 step
constr 28666:28674 Temp4.Temp5 ST_IfTrue
constr 28725:28734 Temp4.Temp5 ST_IfFalse
constr 28786:28790 Temp4.Temp5 ST_If
constr 28875:28889 Temp4.Temp5 ST_ShortCircuit
R28644:28647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28650:28653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28648:28649 sf.Smallstep Temp4.Temp5 tm ind
R28642:28643 sf.Smallstep Temp4.Temp5 tm ind
R28978:28981 sf.Smallstep <> step ind
R28713:28717 sf.Smallstep Temp4.Temp5 ::x_'==>'_x not
R28698:28700 sf.Smallstep Temp4.Temp5 tif constr
R28711:28712 sf.Smallstep <> t2 var
R28708:28709 sf.Smallstep <> t1 var
R28702:28706 sf.Smallstep Temp4.Temp5 ttrue constr
R28718:28719 sf.Smallstep <> t1 var
R28774:28778 sf.Smallstep Temp4.Temp5 ::x_'==>'_x not
R28758:28760 sf.Smallstep Temp4.Temp5 tif constr
R28772:28773 sf.Smallstep <> t2 var
R28769:28770 sf.Smallstep <> t1 var
R28762:28767 sf.Smallstep Temp4.Temp5 tfalse constr
R28779:28780 sf.Smallstep <> t2 var
R28831:28840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28853:28857 sf.Smallstep Temp4.Temp5 ::x_'==>'_x not
R28841:28843 sf.Smallstep Temp4.Temp5 tif constr
R28851:28852 sf.Smallstep <> t3 var
R28848:28849 sf.Smallstep <> t2 var
R28845:28846 sf.Smallstep <> t1 var
R28858:28860 sf.Smallstep Temp4.Temp5 tif constr
R28869:28870 sf.Smallstep <> t3 var
R28866:28867 sf.Smallstep <> t2 var
R28862:28864 sf.Smallstep <> t1' var
R28823:28827 sf.Smallstep Temp4.Temp5 ::x_'==>'_x not
R28821:28822 sf.Smallstep <> t1 var
R28828:28830 sf.Smallstep <> t1' var
R28923:28925 sf.Smallstep Temp4.Temp5 ::x_'==>'_x not
R28911:28913 sf.Smallstep Temp4.Temp5 tif constr
R28921:28922 sf.Smallstep <> t2 var
R28918:28919 sf.Smallstep <> t2 var
R28915:28916 sf.Smallstep <> t1 var
R28926:28927 sf.Smallstep <> t2 var
R28978:28981 sf.Smallstep Temp4.Temp5 step ind
not 28959:28959 Temp4.Temp5 ::x_'==>'_x
def 29002:29016 Temp4.Temp5 bool_step_prop4
R29107:29125 sf.Smallstep Temp4.Temp5 ::x_'==>'_x not
R29030:29032 sf.Smallstep Temp4.Temp5 tif constr
R29101:29106 sf.Smallstep Temp4.Temp5 tfalse constr
R29082:29087 sf.Smallstep Temp4.Temp5 tfalse constr
R29047:29049 sf.Smallstep Temp4.Temp5 tif constr
R29063:29067 sf.Smallstep Temp4.Temp5 ttrue constr
R29057:29061 sf.Smallstep Temp4.Temp5 ttrue constr
R29051:29055 sf.Smallstep Temp4.Temp5 ttrue constr
R29126:29131 sf.Smallstep Temp4.Temp5 tfalse constr
def 29143:29163 Temp4.Temp5 bool_step_prop4_holds
R29169:29183 sf.Smallstep Temp4.Temp5 bool_step_prop4 def
R29200:29214 sf.Smallstep Temp4.Temp5 bool_step_prop4 def
R29223:29237 sf.Smallstep Temp4.Temp5 ST_ShortCircuit constr
R29223:29237 sf.Smallstep Temp4.Temp5 ST_ShortCircuit constr
R30215:30219 sf.Smallstep Temp4.Temp5 <> mod
R30226:30230 sf.Smallstep Temp4 <> mod
ind 31246:31250 <> multi
constr 31297:31306 <> multi_refl
constr 31343:31352 <> multi_step
R31265:31272 sf.Smallstep <> relation def
R31274:31274 sf.Smallstep <> X var
R31279:31286 sf.Smallstep <> relation def
R31327:31331 sf.Smallstep <> multi ind
R31337:31337 sf.Smallstep <> x var
R31335:31335 sf.Smallstep <> x var
R31401:31424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31436:31459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31460:31464 sf.Smallstep <> multi ind
R31470:31470 sf.Smallstep <> z var
R31468:31468 sf.Smallstep <> x var
R31425:31429 sf.Smallstep <> multi ind
R31435:31435 sf.Smallstep <> z var
R31433:31433 sf.Smallstep <> y var
R31400:31400 sf.Smallstep <> y var
R31398:31398 sf.Smallstep <> x var
R32191:32195 sf.Smallstep <> multi ind
R32197:32200 sf.Smallstep <> step ind
not 32171:32171 <> ::x_'==>*'_x
prf 32745:32751 <> multi_R
R32774:32781 sf.Smallstep <> relation def
R32783:32783 sf.Smallstep <> X var
R32793:32793 sf.Smallstep <> X var
R32809:32812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32814:32818 sf.Smallstep <> multi ind
R32820:32820 sf.Smallstep <> R var
R32825:32825 sf.Smallstep <> y var
R32823:32823 sf.Smallstep <> x var
R32804:32804 sf.Smallstep <> R var
R32808:32808 sf.Smallstep <> y var
R32806:32806 sf.Smallstep <> x var
R32863:32872 sf.Smallstep <> multi_step constr
R32863:32872 sf.Smallstep <> multi_step constr
R32897:32906 sf.Smallstep <> multi_refl constr
R32897:32906 sf.Smallstep <> multi_refl constr
prf 32967:32977 <> multi_trans
R33003:33010 sf.Smallstep <> relation def
R33012:33012 sf.Smallstep <> X var
R33024:33024 sf.Smallstep <> X var
R33045:33055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33067:33076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33077:33081 sf.Smallstep <> multi ind
R33087:33087 sf.Smallstep <> z var
R33085:33085 sf.Smallstep <> x var
R33083:33083 sf.Smallstep <> R var
R33056:33060 sf.Smallstep <> multi ind
R33066:33066 sf.Smallstep <> z var
R33064:33064 sf.Smallstep <> y var
R33062:33062 sf.Smallstep <> R var
R33034:33038 sf.Smallstep <> multi ind
R33044:33044 sf.Smallstep <> y var
R33042:33042 sf.Smallstep <> x var
R33040:33040 sf.Smallstep <> R var
R33206:33215 sf.Smallstep <> multi_step constr
R33206:33215 sf.Smallstep <> multi_step constr
prf 33550:33565 <> test_multistep_1
R33623:33637 sf.Smallstep <> ::x_'==>*'_x not
R33574:33574 sf.Smallstep <> P constr
R33609:33609 sf.Smallstep <> P constr
R33618:33618 sf.Smallstep <> C constr
R33612:33612 sf.Smallstep <> C constr
R33585:33585 sf.Smallstep <> P constr
R33594:33594 sf.Smallstep <> C constr
R33588:33588 sf.Smallstep <> C constr
R33638:33638 sf.Smallstep <> C constr
R33641:33641 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33647:33651 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33657:33657 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33643:33645 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33653:33655 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33705:33705 sf.Smallstep <> P constr
R33752:33752 sf.Smallstep <> P constr
R33761:33761 sf.Smallstep <> C constr
R33755:33755 sf.Smallstep <> C constr
R33724:33724 sf.Smallstep <> C constr
R33728:33730 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33676:33685 sf.Smallstep <> multi_step constr
R33705:33705 sf.Smallstep <> P constr
R33752:33752 sf.Smallstep <> P constr
R33761:33761 sf.Smallstep <> C constr
R33755:33755 sf.Smallstep <> C constr
R33724:33724 sf.Smallstep <> C constr
R33728:33730 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33676:33685 sf.Smallstep <> multi_step constr
R33777:33784 sf.Smallstep <> ST_Plus1 constr
R33777:33784 sf.Smallstep <> ST_Plus1 constr
R33793:33809 sf.Smallstep <> ST_PlusConstConst constr
R33793:33809 sf.Smallstep <> ST_PlusConstConst constr
R33849:33849 sf.Smallstep <> P constr
R33896:33896 sf.Smallstep <> C constr
R33900:33902 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33868:33868 sf.Smallstep <> C constr
R33872:33874 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33820:33829 sf.Smallstep <> multi_step constr
R33849:33849 sf.Smallstep <> P constr
R33896:33896 sf.Smallstep <> C constr
R33900:33902 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33868:33868 sf.Smallstep <> C constr
R33872:33874 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33820:33829 sf.Smallstep <> multi_step constr
R33917:33924 sf.Smallstep <> ST_Plus2 constr
R33917:33924 sf.Smallstep <> ST_Plus2 constr
R33933:33939 sf.Smallstep <> v_const constr
R33933:33939 sf.Smallstep <> v_const constr
R33950:33966 sf.Smallstep <> ST_PlusConstConst constr
R33950:33966 sf.Smallstep <> ST_PlusConstConst constr
R33977:33983 sf.Smallstep <> multi_R thm
R33977:33983 sf.Smallstep <> multi_R thm
R33994:34010 sf.Smallstep <> ST_PlusConstConst constr
R33994:34010 sf.Smallstep <> ST_PlusConstConst constr
prf 34160:34176 <> test_multistep_1'
R34234:34247 sf.Smallstep <> ::x_'==>*'_x not
R34185:34185 sf.Smallstep <> P constr
R34220:34220 sf.Smallstep <> P constr
R34229:34229 sf.Smallstep <> C constr
R34223:34223 sf.Smallstep <> C constr
R34196:34196 sf.Smallstep <> P constr
R34205:34205 sf.Smallstep <> C constr
R34199:34199 sf.Smallstep <> C constr
R34248:34248 sf.Smallstep <> C constr
R34251:34251 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34257:34261 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34267:34267 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34253:34255 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34263:34265 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34287:34296 sf.Smallstep <> multi_step constr
R34287:34296 sf.Smallstep <> multi_step constr
R34305:34312 sf.Smallstep <> ST_Plus1 constr
R34305:34312 sf.Smallstep <> ST_Plus1 constr
R34321:34337 sf.Smallstep <> ST_PlusConstConst constr
R34321:34337 sf.Smallstep <> ST_PlusConstConst constr
R34349:34358 sf.Smallstep <> multi_step constr
R34349:34358 sf.Smallstep <> multi_step constr
R34367:34374 sf.Smallstep <> ST_Plus2 constr
R34367:34374 sf.Smallstep <> ST_Plus2 constr
R34383:34389 sf.Smallstep <> v_const constr
R34383:34389 sf.Smallstep <> v_const constr
R34400:34416 sf.Smallstep <> ST_PlusConstConst constr
R34400:34416 sf.Smallstep <> ST_PlusConstConst constr
R34428:34437 sf.Smallstep <> multi_step constr
R34428:34437 sf.Smallstep <> multi_step constr
R34446:34462 sf.Smallstep <> ST_PlusConstConst constr
R34446:34462 sf.Smallstep <> ST_PlusConstConst constr
R34473:34482 sf.Smallstep <> multi_refl constr
R34473:34482 sf.Smallstep <> multi_refl constr
prf 34557:34572 <> test_multistep_2
R34580:34585 sf.Smallstep <> ::x_'==>*'_x not
R34577:34577 sf.Smallstep <> C constr
R34586:34586 sf.Smallstep <> C constr
R34605:34614 sf.Smallstep <> multi_refl constr
R34605:34614 sf.Smallstep <> multi_refl constr
prf 34720:34735 <> test_multistep_3
R34757:34771 sf.Smallstep <> ::x_'==>*'_x not
R34744:34744 sf.Smallstep <> P constr
R34753:34753 sf.Smallstep <> C constr
R34747:34747 sf.Smallstep <> C constr
R34772:34772 sf.Smallstep <> P constr
R34781:34781 sf.Smallstep <> C constr
R34775:34775 sf.Smallstep <> C constr
R34801:34810 sf.Smallstep <> multi_refl constr
R34801:34810 sf.Smallstep <> multi_refl constr
prf 34907:34922 <> test_multistep_4
R35000:35013 sf.Smallstep <> ::x_'==>*'_x not
R34931:34931 sf.Smallstep <> P constr
R34956:34956 sf.Smallstep <> P constr
R34985:34985 sf.Smallstep <> P constr
R34994:34994 sf.Smallstep <> C constr
R34988:34988 sf.Smallstep <> C constr
R34969:34969 sf.Smallstep <> C constr
R34942:34942 sf.Smallstep <> C constr
R35014:35014 sf.Smallstep <> P constr
R35039:35039 sf.Smallstep <> C constr
R35043:35046 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35052:35052 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35048:35050 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35025:35025 sf.Smallstep <> C constr
R35071:35080 sf.Smallstep <> multi_step constr
R35071:35080 sf.Smallstep <> multi_step constr
R35089:35096 sf.Smallstep <> ST_Plus2 constr
R35089:35096 sf.Smallstep <> ST_Plus2 constr
R35105:35111 sf.Smallstep <> v_const constr
R35105:35111 sf.Smallstep <> v_const constr
R35123:35130 sf.Smallstep <> ST_Plus2 constr
R35123:35130 sf.Smallstep <> ST_Plus2 constr
R35139:35145 sf.Smallstep <> v_const constr
R35139:35145 sf.Smallstep <> v_const constr
R35154:35170 sf.Smallstep <> ST_PlusConstConst constr
R35154:35170 sf.Smallstep <> ST_PlusConstConst constr
R35190:35199 sf.Smallstep <> multi_step constr
R35190:35199 sf.Smallstep <> multi_step constr
R35208:35215 sf.Smallstep <> ST_Plus2 constr
R35208:35215 sf.Smallstep <> ST_Plus2 constr
R35224:35230 sf.Smallstep <> v_const constr
R35224:35230 sf.Smallstep <> v_const constr
R35242:35258 sf.Smallstep <> ST_PlusConstConst constr
R35242:35258 sf.Smallstep <> ST_PlusConstConst constr
R35274:35283 sf.Smallstep <> multi_refl constr
R35274:35283 sf.Smallstep <> multi_refl constr
def 35564:35579 <> step_normal_form
R35584:35594 sf.Smallstep <> normal_form def
R35596:35599 sf.Smallstep <> step ind
def 35614:35627 <> normal_form_of
R35637:35638 sf.Smallstep <> tm ind
R35656:35659 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35648:35653 sf.Smallstep <> ::x_'==>*'_x not
R35647:35647 sf.Smallstep <> t var
R35654:35655 sf.Smallstep <> t' var
R35660:35675 sf.Smallstep <> step_normal_form def
R35677:35678 sf.Smallstep <> t' var
prf 36125:36143 <> normal_forms_unique
R36148:36160 sf.Smallstep <> deterministic def
R36162:36175 sf.Smallstep <> normal_form_of def
R36247:36259 sf.Smallstep <> deterministic def
R36269:36282 sf.Smallstep <> normal_form_of def
R36603:36603 Coq.Init.Logic <> :type_scope:x_'='_x not
R36603:36603 Coq.Init.Logic <> :type_scope:x_'='_x not
R36616:36633 sf.Smallstep <> step_deterministic thm
R36616:36633 sf.Smallstep <> step_deterministic thm
def 37047:37057 <> normalizing
R37071:37078 sf.Smallstep <> relation def
R37080:37080 sf.Smallstep <> X var
R37098:37104 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37107:37112 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37127:37130 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37114:37118 sf.Smallstep <> multi ind
R37120:37120 sf.Smallstep <> R var
R37125:37126 sf.Smallstep <> t' var
R37123:37123 sf.Smallstep <> t var
R37131:37141 sf.Smallstep <> normal_form def
R37145:37146 sf.Smallstep <> t' var
R37143:37143 sf.Smallstep <> R var
prf 37540:37556 <> multistep_congr_1
R37594:37602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37610:37615 sf.Smallstep <> ::x_'==>*'_x not
R37603:37603 sf.Smallstep <> P constr
R37608:37609 sf.Smallstep <> t2 var
R37605:37606 sf.Smallstep <> t1 var
R37616:37616 sf.Smallstep <> P constr
R37622:37623 sf.Smallstep <> t2 var
R37618:37620 sf.Smallstep <> t1' var
R37585:37590 sf.Smallstep <> ::x_'==>*'_x not
R37583:37584 sf.Smallstep <> t1 var
R37591:37593 sf.Smallstep <> t1' var
R37697:37706 sf.Smallstep <> multi_refl constr
R37697:37706 sf.Smallstep <> multi_refl constr
R37755:37755 sf.Smallstep <> P constr
R37738:37747 sf.Smallstep <> multi_step constr
R37755:37755 sf.Smallstep <> P constr
R37738:37747 sf.Smallstep <> multi_step constr
R37778:37785 sf.Smallstep <> ST_Plus1 constr
R37778:37785 sf.Smallstep <> ST_Plus1 constr
prf 37884:37900 <> multistep_congr_2
R37935:37943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37955:37963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37971:37976 sf.Smallstep <> ::x_'==>*'_x not
R37964:37964 sf.Smallstep <> P constr
R37969:37970 sf.Smallstep <> t2 var
R37966:37967 sf.Smallstep <> t1 var
R37977:37977 sf.Smallstep <> P constr
R37982:37984 sf.Smallstep <> t2' var
R37979:37980 sf.Smallstep <> t1 var
R37946:37951 sf.Smallstep <> ::x_'==>*'_x not
R37944:37945 sf.Smallstep <> t2 var
R37952:37954 sf.Smallstep <> t2' var
R37927:37931 sf.Smallstep <> value ind
R37933:37934 sf.Smallstep <> t1 var
R38027:38036 sf.Smallstep <> multi_refl constr
R38027:38036 sf.Smallstep <> multi_refl constr
R38067:38067 sf.Smallstep <> P constr
R38050:38059 sf.Smallstep <> multi_step constr
R38067:38067 sf.Smallstep <> P constr
R38050:38059 sf.Smallstep <> multi_step constr
R38082:38089 sf.Smallstep <> ST_Plus2 constr
R38082:38089 sf.Smallstep <> ST_Plus2 constr
prf 39334:39349 <> step_normalizing
R39355:39365 sf.Smallstep <> normalizing def
R39367:39370 sf.Smallstep <> step ind
R39389:39399 sf.Smallstep <> normalizing def
R39445:39445 sf.Smallstep <> C constr
R39445:39445 sf.Smallstep <> C constr
R39486:39495 sf.Smallstep <> multi_refl constr
R39486:39495 sf.Smallstep <> multi_refl constr
R39620:39635 sf.Smallstep <> nf_same_as_value thm
R39620:39635 sf.Smallstep <> nf_same_as_value thm
R39620:39635 sf.Smallstep <> nf_same_as_value thm
R39644:39650 sf.Smallstep <> v_const constr
R39644:39650 sf.Smallstep <> v_const constr
R39853:39868 sf.Smallstep <> nf_same_as_value thm
R39853:39868 sf.Smallstep <> nf_same_as_value thm
R39853:39868 sf.Smallstep <> nf_same_as_value thm
R39886:39901 sf.Smallstep <> nf_same_as_value thm
R39886:39901 sf.Smallstep <> nf_same_as_value thm
R39886:39901 sf.Smallstep <> nf_same_as_value thm
R40032:40032 sf.Smallstep <> C constr
R40037:40039 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R40032:40032 sf.Smallstep <> C constr
R40037:40039 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R40111:40111 sf.Smallstep <> P constr
R40114:40114 sf.Smallstep <> C constr
R40093:40103 sf.Smallstep <> multi_trans thm
R40111:40111 sf.Smallstep <> P constr
R40114:40114 sf.Smallstep <> C constr
R40093:40103 sf.Smallstep <> multi_trans thm
R40141:40157 sf.Smallstep <> multistep_congr_1 thm
R40141:40157 sf.Smallstep <> multistep_congr_1 thm
R40218:40218 sf.Smallstep <> P constr
R40228:40228 sf.Smallstep <> C constr
R40221:40221 sf.Smallstep <> C constr
R40187:40197 sf.Smallstep <> multi_trans thm
R40218:40218 sf.Smallstep <> P constr
R40228:40228 sf.Smallstep <> C constr
R40221:40221 sf.Smallstep <> C constr
R40187:40197 sf.Smallstep <> multi_trans thm
R40252:40268 sf.Smallstep <> multistep_congr_2 thm
R40252:40268 sf.Smallstep <> multistep_congr_2 thm
R40277:40283 sf.Smallstep <> v_const constr
R40277:40283 sf.Smallstep <> v_const constr
R40313:40319 sf.Smallstep <> multi_R thm
R40313:40319 sf.Smallstep <> multi_R thm
R40328:40344 sf.Smallstep <> ST_PlusConstConst constr
R40328:40344 sf.Smallstep <> ST_PlusConstConst constr
R40383:40398 sf.Smallstep <> nf_same_as_value thm
R40383:40398 sf.Smallstep <> nf_same_as_value thm
R40383:40398 sf.Smallstep <> nf_same_as_value thm
R40407:40413 sf.Smallstep <> v_const constr
R40407:40413 sf.Smallstep <> v_const constr
prf 40940:40954 <> eval__multistep
R40978:40981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40983:40988 sf.Smallstep <> ::x_'==>*'_x not
R40982:40982 sf.Smallstep <> t var
R40989:40989 sf.Smallstep <> C constr
R40991:40991 sf.Smallstep <> n var
R40973:40976 sf.Smallstep <> ::x_'\\'_x not
R40972:40972 sf.Smallstep <> t var
R40977:40977 sf.Smallstep <> n var
R42314:42323 sf.Smallstep <> multi_refl constr
R42314:42323 sf.Smallstep <> multi_refl constr
R42336:42346 sf.Smallstep <> multi_trans thm
R42336:42346 sf.Smallstep <> multi_trans thm
R42364:42368 sf.Smallstep <> ::x_'==>*'_x not
R42357:42357 sf.Smallstep <> P constr
R42369:42369 sf.Smallstep <> P constr
R42372:42372 sf.Smallstep <> C constr
R42364:42368 sf.Smallstep <> ::x_'==>*'_x not
R42357:42357 sf.Smallstep <> P constr
R42369:42369 sf.Smallstep <> P constr
R42372:42372 sf.Smallstep <> C constr
R42392:42408 sf.Smallstep <> multistep_congr_1 thm
R42392:42408 sf.Smallstep <> multistep_congr_1 thm
R42455:42458 sf.Smallstep <> ::x_'==>*'_x not
R42444:42444 sf.Smallstep <> P constr
R42447:42447 sf.Smallstep <> C constr
R42459:42459 sf.Smallstep <> P constr
R42469:42469 sf.Smallstep <> C constr
R42462:42462 sf.Smallstep <> C constr
R42455:42458 sf.Smallstep <> ::x_'==>*'_x not
R42444:42444 sf.Smallstep <> P constr
R42447:42447 sf.Smallstep <> C constr
R42459:42459 sf.Smallstep <> P constr
R42469:42469 sf.Smallstep <> C constr
R42462:42462 sf.Smallstep <> C constr
R42483:42499 sf.Smallstep <> multistep_congr_2 thm
R42483:42499 sf.Smallstep <> multistep_congr_2 thm
R42511:42517 sf.Smallstep <> v_const constr
R42511:42517 sf.Smallstep <> v_const constr
R42539:42549 sf.Smallstep <> multi_trans thm
R42539:42549 sf.Smallstep <> multi_trans thm
R42572:42581 sf.Smallstep <> multi_step constr
R42572:42581 sf.Smallstep <> multi_step constr
R42591:42607 sf.Smallstep <> ST_PlusConstConst constr
R42591:42607 sf.Smallstep <> ST_PlusConstConst constr
R42616:42625 sf.Smallstep <> multi_refl constr
R42616:42625 sf.Smallstep <> multi_refl constr
prf 43019:43028 <> step__eval
R43060:43068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43076:43084 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43086:43089 sf.Smallstep <> ::x_'\\'_x not
R43085:43085 sf.Smallstep <> t var
R43090:43090 sf.Smallstep <> n var
R43071:43074 sf.Smallstep <> ::x_'\\'_x not
R43069:43070 sf.Smallstep <> t' var
R43075:43075 sf.Smallstep <> n var
R43053:43057 sf.Smallstep <> ::x_'==>'_x not
R43052:43052 sf.Smallstep <> t var
R43058:43059 sf.Smallstep <> t' var
R43198:43203 sf.Smallstep <> E_Plus constr
R43198:43203 sf.Smallstep <> E_Plus constr
R43212:43218 sf.Smallstep <> E_Const constr
R43212:43218 sf.Smallstep <> E_Const constr
R43231:43237 sf.Smallstep <> E_Const constr
R43231:43237 sf.Smallstep <> E_Const constr
R43279:43284 sf.Smallstep <> E_Plus constr
R43279:43284 sf.Smallstep <> E_Plus constr
R43367:43372 sf.Smallstep <> E_Plus constr
R43367:43372 sf.Smallstep <> E_Plus constr
prf 43868:43882 <> multistep__eval
R43920:43923 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43924:43930 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43932:43933 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43942:43945 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43936:43938 Coq.Init.Logic <> :type_scope:x_'='_x not
R43934:43935 sf.Smallstep <> t' var
R43939:43939 sf.Smallstep <> C constr
R43941:43941 sf.Smallstep <> n var
R43947:43950 sf.Smallstep <> ::x_'\\'_x not
R43946:43946 sf.Smallstep <> t var
R43951:43951 sf.Smallstep <> n var
R43901:43914 sf.Smallstep <> normal_form_of def
R43918:43919 sf.Smallstep <> t' var
R43916:43916 sf.Smallstep <> t var
R43968:43981 sf.Smallstep <> normal_form_of def
R43991:44006 sf.Smallstep <> step_normal_form def
R44065:44069 sf.Smallstep <> value ind
R44065:44069 sf.Smallstep <> value ind
R44081:44091 sf.Smallstep <> nf_is_value thm
R44081:44091 sf.Smallstep <> nf_is_value thm
R44160:44166 sf.Smallstep <> E_Const constr
R44160:44166 sf.Smallstep <> E_Const constr
R44278:44281 sf.Smallstep <> eval ind
R44283:44286 sf.Smallstep <> step ind
R44297:44306 sf.Smallstep <> step__eval thm
R44297:44306 sf.Smallstep <> step__eval thm
prf 44850:44859 <> evalF_eval
R44888:44892 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44884:44886 Coq.Init.Logic <> :type_scope:x_'='_x not
R44877:44881 sf.Smallstep <> evalF def
R44883:44883 sf.Smallstep <> t var
R44887:44887 sf.Smallstep <> n var
R44894:44897 sf.Smallstep <> ::x_'\\'_x not
R44893:44893 sf.Smallstep <> t var
R44898:44898 sf.Smallstep <> n var
R44983:44989 sf.Smallstep <> E_Const constr
R44983:44989 sf.Smallstep <> E_Const constr
R45094:45096 sf.Smallstep <> ::x_'\\'_x not
R45105:45105 sf.Smallstep <> ::x_'\\'_x not
R45097:45101 sf.Smallstep <> evalF def
R45094:45096 sf.Smallstep <> ::x_'\\'_x not
R45105:45105 sf.Smallstep <> ::x_'\\'_x not
R45097:45101 sf.Smallstep <> evalF def
R45149:45151 sf.Smallstep <> ::x_'\\'_x not
R45160:45160 sf.Smallstep <> ::x_'\\'_x not
R45152:45156 sf.Smallstep <> evalF def
R45149:45151 sf.Smallstep <> ::x_'\\'_x not
R45160:45160 sf.Smallstep <> ::x_'\\'_x not
R45152:45156 sf.Smallstep <> evalF def
R45201:45206 sf.Smallstep <> E_Plus constr
R45201:45206 sf.Smallstep <> E_Plus constr
mod 45579:45586 <> Combined
ind 45600:45601 Combined tm
constr 45617:45617 Combined C
constr 45635:45635 Combined P
constr 45658:45662 Combined ttrue
constr 45673:45678 Combined tfalse
constr 45689:45691 Combined tif
R45624:45627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45628:45629 sf.Smallstep <> tm ind
R45621:45623 Coq.Init.Datatypes <> nat ind
R45641:45644 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45647:45650 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45651:45652 sf.Smallstep <> tm ind
R45645:45646 sf.Smallstep <> tm ind
R45639:45640 sf.Smallstep <> tm ind
R45666:45667 sf.Smallstep <> tm ind
R45682:45683 sf.Smallstep <> tm ind
R45697:45700 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45703:45706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45709:45712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45713:45714 sf.Smallstep <> tm ind
R45707:45708 sf.Smallstep <> tm ind
R45701:45702 sf.Smallstep <> tm ind
R45695:45696 sf.Smallstep <> tm ind
ind 45728:45732 Combined value
constr 45754:45760 Combined v_const
constr 45790:45795 Combined v_true
constr 45815:45821 Combined v_false
R45738:45741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45736:45737 sf.Smallstep Combined tm ind
R45774:45778 sf.Smallstep <> value ind
R45781:45781 sf.Smallstep Combined C constr
R45783:45783 sf.Smallstep <> n var
R45799:45803 sf.Smallstep <> value ind
R45805:45809 sf.Smallstep Combined ttrue constr
R45825:45829 sf.Smallstep <> value ind
R45831:45836 sf.Smallstep Combined tfalse constr
ind 45899:45902 Combined step
constr 45930:45946 Combined ST_PlusConstConst
constr 46006:46013 Combined ST_Plus1
constr 46086:46093 Combined ST_Plus2
constr 46184:46192 Combined ST_IfTrue
constr 46243:46252 Combined ST_IfFalse
constr 46304:46308 Combined ST_If
R45908:45911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45914:45917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45912:45913 sf.Smallstep Combined tm ind
R45906:45907 sf.Smallstep Combined tm ind
R46418:46421 sf.Smallstep <> step ind
R45985:45989 sf.Smallstep Combined ::x_'==>'_x not
R45970:45970 sf.Smallstep Combined P constr
R45980:45980 sf.Smallstep Combined C constr
R45982:45983 sf.Smallstep <> n2 var
R45973:45973 sf.Smallstep Combined C constr
R45975:45976 sf.Smallstep <> n1 var
R45990:45990 sf.Smallstep Combined C constr
R45995:45997 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45993:45994 sf.Smallstep <> n1 var
R45998:45999 sf.Smallstep <> n2 var
R46051:46060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46068:46072 sf.Smallstep Combined ::x_'==>'_x not
R46061:46061 sf.Smallstep Combined P constr
R46066:46067 sf.Smallstep <> t2 var
R46063:46064 sf.Smallstep <> t1 var
R46073:46073 sf.Smallstep Combined P constr
R46079:46080 sf.Smallstep <> t2 var
R46075:46077 sf.Smallstep <> t1' var
R46043:46047 sf.Smallstep Combined ::x_'==>'_x not
R46041:46042 sf.Smallstep <> t1 var
R46048:46050 sf.Smallstep <> t1' var
R46129:46138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46149:46158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46166:46170 sf.Smallstep Combined ::x_'==>'_x not
R46159:46159 sf.Smallstep Combined P constr
R46164:46165 sf.Smallstep <> t2 var
R46161:46162 sf.Smallstep <> v1 var
R46171:46171 sf.Smallstep Combined P constr
R46176:46178 sf.Smallstep <> t2' var
R46173:46174 sf.Smallstep <> v1 var
R46141:46145 sf.Smallstep Combined ::x_'==>'_x not
R46139:46140 sf.Smallstep <> t2 var
R46146:46148 sf.Smallstep <> t2' var
R46121:46125 sf.Smallstep Combined value ind
R46127:46128 sf.Smallstep <> v1 var
R46231:46235 sf.Smallstep Combined ::x_'==>'_x not
R46216:46218 sf.Smallstep Combined tif constr
R46229:46230 sf.Smallstep <> t2 var
R46226:46227 sf.Smallstep <> t1 var
R46220:46224 sf.Smallstep Combined ttrue constr
R46236:46237 sf.Smallstep <> t1 var
R46292:46296 sf.Smallstep Combined ::x_'==>'_x not
R46276:46278 sf.Smallstep Combined tif constr
R46290:46291 sf.Smallstep <> t2 var
R46287:46288 sf.Smallstep <> t1 var
R46280:46285 sf.Smallstep Combined tfalse constr
R46297:46298 sf.Smallstep <> t2 var
R46349:46358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46371:46375 sf.Smallstep Combined ::x_'==>'_x not
R46359:46361 sf.Smallstep Combined tif constr
R46369:46370 sf.Smallstep <> t3 var
R46366:46367 sf.Smallstep <> t2 var
R46363:46364 sf.Smallstep <> t1 var
R46376:46378 sf.Smallstep Combined tif constr
R46387:46388 sf.Smallstep <> t3 var
R46384:46385 sf.Smallstep <> t2 var
R46380:46382 sf.Smallstep <> t1' var
R46341:46345 sf.Smallstep Combined ::x_'==>'_x not
R46339:46340 sf.Smallstep <> t1 var
R46346:46348 sf.Smallstep <> t1' var
R46418:46421 sf.Smallstep Combined step ind
not 46399:46399 Combined ::x_'==>'_x
R46764:46771 sf.Smallstep Combined <> mod
ind 47293:47296 <> aval
constr 47318:47323 <> av_num
R47304:47307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47300:47303 sf.Imp <> aexp ind
R47337:47340 sf.Smallstep <> aval ind
R47343:47346 sf.Imp <> ANum constr
R47348:47348 sf.Smallstep <> n var
ind 47648:47652 <> astep
constr 47693:47697 <> AS_Id
constr 47752:47758 <> AS_Plus
constr 47840:47847 <> AS_Plus1
constr 47947:47954 <> AS_Plus2
constr 48071:48078 <> AS_Minus
constr 48169:48177 <> AS_Minus1
constr 48279:48287 <> AS_Minus2
constr 48406:48412 <> AS_Mult
constr 48501:48508 <> AS_Mult1
constr 48616:48623 <> AS_Mult2
R47661:47664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47669:47672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47677:47680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47673:47676 sf.Imp <> aexp ind
R47665:47668 sf.Imp <> aexp ind
R47656:47660 sf.Imp <> state def
R48774:48778 sf.Smallstep <> astep ind
R47725:47727 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47730:47735 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47728:47729 sf.Smallstep <> st var
R47720:47722 sf.Imp <> AId constr
R47724:47724 sf.Smallstep <> i var
R47736:47739 sf.Imp <> ANum constr
R47742:47743 sf.Smallstep <> st var
R47745:47745 sf.Smallstep <> i var
R47810:47812 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47815:47820 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47813:47814 sf.Smallstep <> st var
R47785:47789 sf.Imp <> APlus constr
R47802:47805 sf.Imp <> ANum constr
R47807:47808 sf.Smallstep <> n2 var
R47792:47795 sf.Imp <> ANum constr
R47797:47798 sf.Smallstep <> n1 var
R47821:47824 sf.Imp <> ANum constr
R47829:47831 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R47827:47828 sf.Smallstep <> n1 var
R47832:47833 sf.Smallstep <> n2 var
R47894:47903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47904:47904 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47916:47919 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47922:47928 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47941:47941 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47920:47921 sf.Smallstep <> st var
R47905:47909 sf.Imp <> APlus constr
R47914:47915 sf.Smallstep <> a2 var
R47911:47912 sf.Smallstep <> a1 var
R47929:47933 sf.Imp <> APlus constr
R47939:47940 sf.Smallstep <> a2 var
R47935:47937 sf.Smallstep <> a1' var
R47880:47882 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47885:47890 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R47883:47884 sf.Smallstep <> st var
R47878:47879 sf.Smallstep <> a1 var
R47891:47893 sf.Smallstep <> a1' var
R47992:48001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48018:48027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48028:48028 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48040:48043 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48046:48052 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48065:48065 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48044:48045 sf.Smallstep <> st var
R48029:48033 sf.Imp <> APlus constr
R48038:48039 sf.Smallstep <> a2 var
R48035:48036 sf.Smallstep <> v1 var
R48053:48057 sf.Imp <> APlus constr
R48062:48064 sf.Smallstep <> a2' var
R48059:48060 sf.Smallstep <> v1 var
R48004:48006 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48009:48014 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48007:48008 sf.Smallstep <> st var
R48002:48003 sf.Smallstep <> a2 var
R48015:48017 sf.Smallstep <> a2' var
R47985:47988 sf.Smallstep <> aval ind
R47990:47991 sf.Smallstep <> v1 var
R48105:48105 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48132:48135 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48138:48144 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48163:48163 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48136:48137 sf.Smallstep <> st var
R48106:48111 sf.Imp <> AMinus constr
R48124:48127 sf.Imp <> ANum constr
R48129:48130 sf.Smallstep <> n2 var
R48114:48117 sf.Imp <> ANum constr
R48119:48120 sf.Smallstep <> n1 var
R48145:48148 sf.Imp <> ANum constr
R48151:48155 Coq.Init.Peano <> minus syndef
R48160:48161 sf.Smallstep <> n2 var
R48157:48158 sf.Smallstep <> n1 var
R48224:48233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48234:48234 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48247:48250 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48253:48259 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48273:48273 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48251:48252 sf.Smallstep <> st var
R48235:48240 sf.Imp <> AMinus constr
R48245:48246 sf.Smallstep <> a2 var
R48242:48243 sf.Smallstep <> a1 var
R48260:48265 sf.Imp <> AMinus constr
R48271:48272 sf.Smallstep <> a2 var
R48267:48269 sf.Smallstep <> a1' var
R48210:48212 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48215:48220 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48213:48214 sf.Smallstep <> st var
R48208:48209 sf.Smallstep <> a1 var
R48221:48223 sf.Smallstep <> a1' var
R48325:48334 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48351:48360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48361:48361 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48374:48377 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48380:48386 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48400:48400 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48378:48379 sf.Smallstep <> st var
R48362:48367 sf.Imp <> AMinus constr
R48372:48373 sf.Smallstep <> a2 var
R48369:48370 sf.Smallstep <> v1 var
R48387:48392 sf.Imp <> AMinus constr
R48397:48399 sf.Smallstep <> a2' var
R48394:48395 sf.Smallstep <> v1 var
R48337:48339 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48342:48347 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48340:48341 sf.Smallstep <> st var
R48335:48336 sf.Smallstep <> a2 var
R48348:48350 sf.Smallstep <> a2' var
R48318:48321 sf.Smallstep <> aval ind
R48323:48324 sf.Smallstep <> v1 var
R48439:48439 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48465:48468 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48471:48477 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48495:48495 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48469:48470 sf.Smallstep <> st var
R48440:48444 sf.Imp <> AMult constr
R48457:48460 sf.Imp <> ANum constr
R48462:48463 sf.Smallstep <> n2 var
R48447:48450 sf.Imp <> ANum constr
R48452:48453 sf.Smallstep <> n1 var
R48478:48481 sf.Imp <> ANum constr
R48484:48487 Coq.Init.Peano <> mult syndef
R48492:48493 sf.Smallstep <> n2 var
R48489:48490 sf.Smallstep <> n1 var
R48555:48564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48565:48565 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48581:48584 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48587:48593 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48610:48610 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48585:48586 sf.Smallstep <> st var
R48566:48570 sf.Imp <> AMult constr
R48578:48579 sf.Smallstep <> a2 var
R48573:48574 sf.Smallstep <> a1 var
R48594:48598 sf.Imp <> AMult constr
R48607:48608 sf.Smallstep <> a2 var
R48601:48603 sf.Smallstep <> a1' var
R48541:48543 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48546:48551 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48544:48545 sf.Smallstep <> st var
R48539:48540 sf.Smallstep <> a1 var
R48552:48554 sf.Smallstep <> a1' var
R48661:48670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48687:48696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48697:48697 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48709:48712 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48715:48721 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48734:48734 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48713:48714 sf.Smallstep <> st var
R48698:48702 sf.Imp <> AMult constr
R48707:48708 sf.Smallstep <> a2 var
R48704:48705 sf.Smallstep <> v1 var
R48722:48726 sf.Imp <> AMult constr
R48731:48733 sf.Smallstep <> a2' var
R48728:48729 sf.Smallstep <> v1 var
R48673:48675 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48678:48683 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R48676:48677 sf.Smallstep <> st var
R48671:48672 sf.Smallstep <> a2 var
R48684:48686 sf.Smallstep <> a2' var
R48654:48657 sf.Smallstep <> aval ind
R48659:48660 sf.Smallstep <> v1 var
R48774:48778 sf.Smallstep <> astep ind
not 48747:48747 <> ::x_'/'_x_'==>a'_x
ind 48878:48882 <> bstep
constr 48923:48927 <> BS_Eq
constr 49044:49049 <> BS_Eq1
constr 49145:49150 <> BS_Eq2
constr 49263:49269 <> BS_LtEq
constr 49391:49398 <> BS_LtEq1
constr 49494:49501 <> BS_LtEq2
constr 49616:49625 <> BS_NotTrue
constr 49680:49690 <> BS_NotFalse
constr 49745:49754 <> BS_NotStep
constr 49843:49856 <> BS_AndTrueTrue
constr 49916:49930 <> BS_AndTrueFalse
constr 49992:50002 <> BS_AndFalse
constr 50064:50077 <> BS_AndTrueStep
constr 50178:50187 <> BS_AndStep
R48891:48894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48899:48902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48907:48910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48903:48906 sf.Imp <> bexp ind
R48895:48898 sf.Imp <> bexp ind
R48886:48890 sf.Imp <> state def
R50317:50321 sf.Smallstep <> bstep ind
R48954:48954 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R48978:48981 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R48984:48996 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49038:49038 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R48982:48983 sf.Smallstep <> st var
R48955:48957 sf.Imp <> BEq constr
R48970:48973 sf.Imp <> ANum constr
R48975:48976 sf.Smallstep <> n2 var
R48960:48963 sf.Imp <> ANum constr
R48965:48966 sf.Smallstep <> n1 var
R49001:49007 Coq.Arith.EqNat <> beq_nat syndef
R49012:49013 sf.Smallstep <> n2 var
R49009:49010 sf.Smallstep <> n1 var
R49032:49037 sf.Imp <> BFalse constr
R49021:49025 sf.Imp <> BTrue constr
R49096:49105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49106:49106 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49116:49119 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49122:49128 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49139:49139 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49120:49121 sf.Smallstep <> st var
R49107:49109 sf.Imp <> BEq constr
R49114:49115 sf.Smallstep <> a2 var
R49111:49112 sf.Smallstep <> a1 var
R49129:49131 sf.Imp <> BEq constr
R49137:49138 sf.Smallstep <> a2 var
R49133:49135 sf.Smallstep <> a1' var
R49082:49084 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49087:49092 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49085:49086 sf.Smallstep <> st var
R49080:49081 sf.Smallstep <> a1 var
R49093:49095 sf.Smallstep <> a1' var
R49188:49197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49214:49223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49224:49224 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49234:49237 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49240:49246 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49257:49257 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49238:49239 sf.Smallstep <> st var
R49225:49227 sf.Imp <> BEq constr
R49232:49233 sf.Smallstep <> a2 var
R49229:49230 sf.Smallstep <> v1 var
R49247:49249 sf.Imp <> BEq constr
R49254:49256 sf.Smallstep <> a2' var
R49251:49252 sf.Smallstep <> v1 var
R49200:49202 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49205:49210 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49203:49204 sf.Smallstep <> st var
R49198:49199 sf.Smallstep <> a2 var
R49211:49213 sf.Smallstep <> a2' var
R49181:49184 sf.Smallstep <> aval ind
R49186:49187 sf.Smallstep <> v1 var
R49296:49296 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49320:49323 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49326:49347 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49385:49385 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49324:49325 sf.Smallstep <> st var
R49297:49299 sf.Imp <> BLe constr
R49312:49315 sf.Imp <> ANum constr
R49317:49318 sf.Smallstep <> n2 var
R49302:49305 sf.Imp <> ANum constr
R49307:49308 sf.Smallstep <> n1 var
R49352:49354 Coq.Arith.Compare_dec <> leb syndef
R49359:49360 sf.Smallstep <> n2 var
R49356:49357 sf.Smallstep <> n1 var
R49379:49384 sf.Imp <> BFalse constr
R49368:49372 sf.Imp <> BTrue constr
R49445:49454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49455:49455 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49465:49468 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49471:49477 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49488:49488 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49469:49470 sf.Smallstep <> st var
R49456:49458 sf.Imp <> BLe constr
R49463:49464 sf.Smallstep <> a2 var
R49460:49461 sf.Smallstep <> a1 var
R49478:49480 sf.Imp <> BLe constr
R49486:49487 sf.Smallstep <> a2 var
R49482:49484 sf.Smallstep <> a1' var
R49431:49433 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49436:49441 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49434:49435 sf.Smallstep <> st var
R49429:49430 sf.Smallstep <> a1 var
R49442:49444 sf.Smallstep <> a1' var
R49539:49548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49565:49574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49575:49575 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49585:49588 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49591:49597 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49610:49610 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49589:49590 sf.Smallstep <> st var
R49576:49578 sf.Imp <> BLe constr
R49583:49584 sf.Smallstep <> a2 var
R49580:49581 sf.Smallstep <> v1 var
R49598:49600 sf.Imp <> BLe constr
R49606:49608 sf.Smallstep <> a2' var
R49602:49603 sf.Smallstep <> v1 var
R49551:49553 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49556:49561 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R49554:49555 sf.Smallstep <> st var
R49549:49550 sf.Smallstep <> a2 var
R49562:49564 sf.Smallstep <> a2' var
R49532:49535 sf.Smallstep <> aval ind
R49537:49538 sf.Smallstep <> v1 var
R49646:49646 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49657:49660 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49663:49668 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49661:49662 sf.Smallstep <> st var
R49647:49650 sf.Imp <> BNot constr
R49652:49656 sf.Imp <> BTrue constr
R49669:49674 sf.Imp <> BFalse constr
R49711:49711 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49723:49726 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49729:49734 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49727:49728 sf.Smallstep <> st var
R49712:49715 sf.Imp <> BNot constr
R49717:49722 sf.Imp <> BFalse constr
R49735:49739 sf.Imp <> BTrue constr
R49798:49807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49808:49808 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49816:49819 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49822:49828 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49837:49837 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49820:49821 sf.Smallstep <> st var
R49809:49812 sf.Imp <> BNot constr
R49814:49815 sf.Smallstep <> b1 var
R49829:49832 sf.Imp <> BNot constr
R49834:49836 sf.Smallstep <> b1' var
R49784:49786 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49789:49794 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49787:49788 sf.Smallstep <> st var
R49782:49783 sf.Smallstep <> b1 var
R49795:49797 sf.Smallstep <> b1' var
R49877:49877 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49894:49897 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49900:49905 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49898:49899 sf.Smallstep <> st var
R49878:49881 sf.Imp <> BAnd constr
R49889:49893 sf.Imp <> BTrue constr
R49883:49887 sf.Imp <> BTrue constr
R49906:49910 sf.Imp <> BTrue constr
R49951:49951 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49969:49972 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49975:49980 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R49973:49974 sf.Smallstep <> st var
R49952:49955 sf.Imp <> BAnd constr
R49963:49968 sf.Imp <> BFalse constr
R49957:49961 sf.Imp <> BTrue constr
R49981:49986 sf.Imp <> BFalse constr
R50026:50026 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50041:50044 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50047:50052 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50045:50046 sf.Smallstep <> st var
R50027:50030 sf.Imp <> BAnd constr
R50039:50040 sf.Smallstep <> b2 var
R50032:50037 sf.Imp <> BFalse constr
R50053:50058 sf.Imp <> BFalse constr
R50121:50130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50131:50131 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50145:50148 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50151:50157 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50172:50172 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50149:50150 sf.Smallstep <> st var
R50132:50135 sf.Imp <> BAnd constr
R50143:50144 sf.Smallstep <> b2 var
R50137:50141 sf.Imp <> BTrue constr
R50158:50161 sf.Imp <> BAnd constr
R50169:50171 sf.Smallstep <> b2' var
R50163:50167 sf.Imp <> BTrue constr
R50107:50109 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50112:50117 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50110:50111 sf.Smallstep <> st var
R50105:50106 sf.Smallstep <> b2 var
R50118:50120 sf.Smallstep <> b2' var
R50234:50243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50244:50244 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50255:50258 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50261:50267 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50279:50279 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50259:50260 sf.Smallstep <> st var
R50245:50248 sf.Imp <> BAnd constr
R50253:50254 sf.Smallstep <> b2 var
R50250:50251 sf.Smallstep <> b1 var
R50268:50271 sf.Imp <> BAnd constr
R50277:50278 sf.Smallstep <> b2 var
R50273:50275 sf.Smallstep <> b1' var
R50220:50222 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50225:50230 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R50223:50224 sf.Smallstep <> st var
R50218:50219 sf.Smallstep <> b1 var
R50231:50233 sf.Smallstep <> b1' var
R50317:50321 sf.Smallstep <> bstep ind
not 50290:50290 <> ::x_'/'_x_'==>b'_x
ind 51333:51337 <> cstep
constr 51387:51396 <> CS_AssStep
constr 51487:51492 <> CS_Ass
constr 51572:51581 <> CS_SeqStep
constr 51689:51700 <> CS_SeqFinish
constr 51758:51766 <> CS_IfTrue
constr 51843:51852 <> CS_IfFalse
constr 51930:51938 <> CS_IfStep
constr 52076:52083 <> CS_While
R51341:51341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51353:51357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51358:51358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51370:51374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51362:51364 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R51359:51361 sf.Imp <> com ind
R51365:51369 sf.Imp <> state def
R51345:51347 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R51342:51344 sf.Imp <> com ind
R51348:51352 sf.Imp <> state def
R52249:52253 sf.Smallstep <> cstep ind
R52262:52262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52265:52265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52269:52269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52255:52255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52257:52257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52260:52260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51438:51447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51448:51448 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51456:51459 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51462:51467 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51476:51479 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51450:51454 sf.Imp <> ::x_'::='_x not
R51449:51449 sf.Smallstep <> i var
R51455:51455 sf.Smallstep <> a var
R51460:51461 sf.Smallstep <> st var
R51469:51473 sf.Imp <> ::x_'::='_x not
R51468:51468 sf.Smallstep <> i var
R51474:51475 sf.Smallstep <> a' var
R51480:51481 sf.Smallstep <> st var
R51425:51427 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R51430:51435 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R51428:51429 sf.Smallstep <> st var
R51424:51424 sf.Smallstep <> a var
R51436:51437 sf.Smallstep <> a' var
R51517:51517 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51532:51535 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51538:51542 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51547:51550 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51566:51566 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51519:51524 sf.Imp <> ::x_'::='_x not
R51531:51531 sf.Imp <> ::x_'::='_x not
R51518:51518 sf.Smallstep <> i var
R51525:51528 sf.Imp <> ANum constr
R51530:51530 sf.Smallstep <> n var
R51536:51537 sf.Smallstep <> st var
R51543:51546 sf.Imp <> ::'SKIP' not
R51551:51558 sf.Maps <> t_update def
R51565:51565 sf.Smallstep <> n var
R51563:51563 sf.Smallstep <> i var
R51560:51561 sf.Smallstep <> st var
R51637:51646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51647:51647 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51656:51659 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51662:51667 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51677:51680 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51650:51653 sf.Imp <> ::x_';;'_x not
R51648:51649 sf.Smallstep <> c1 var
R51654:51655 sf.Smallstep <> c2 var
R51660:51661 sf.Smallstep <> st var
R51671:51674 sf.Imp <> ::x_';;'_x not
R51668:51670 sf.Smallstep <> c1' var
R51675:51676 sf.Smallstep <> c2 var
R51681:51683 sf.Smallstep <> st' var
R51618:51620 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51623:51627 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51631:51633 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51616:51617 sf.Smallstep <> c1 var
R51621:51622 sf.Smallstep <> st var
R51628:51630 sf.Smallstep <> c1' var
R51634:51636 sf.Smallstep <> st' var
R51724:51724 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51735:51738 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51741:51745 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51748:51750 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51729:51732 sf.Imp <> ::x_';;'_x not
R51725:51728 sf.Imp <> ::'SKIP' not
R51733:51734 sf.Smallstep <> c2 var
R51739:51740 sf.Smallstep <> st var
R51746:51747 sf.Smallstep <> c2 var
R51751:51752 sf.Smallstep <> st var
R51821:51823 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51826:51830 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51833:51835 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51793:51796 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51802:51807 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51810:51815 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51818:51820 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51797:51801 sf.Imp <> BTrue constr
R51808:51809 sf.Smallstep <> c1 var
R51816:51817 sf.Smallstep <> c2 var
R51824:51825 sf.Smallstep <> st var
R51831:51832 sf.Smallstep <> c1 var
R51836:51837 sf.Smallstep <> st var
R51908:51910 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51913:51917 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51920:51922 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51879:51882 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51889:51894 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51897:51902 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51905:51907 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51883:51888 sf.Imp <> BFalse constr
R51895:51896 sf.Smallstep <> c1 var
R51903:51904 sf.Smallstep <> c2 var
R51911:51912 sf.Smallstep <> st var
R51918:51919 sf.Smallstep <> c2 var
R51923:51924 sf.Smallstep <> st var
R51984:51997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52022:52024 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52027:52039 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52065:52068 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R51998:52001 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52003:52008 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52011:52016 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52019:52021 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52002:52002 sf.Smallstep <> b var
R52009:52010 sf.Smallstep <> c1 var
R52017:52018 sf.Smallstep <> c2 var
R52025:52026 sf.Smallstep <> st var
R52040:52043 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52046:52051 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52054:52059 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52062:52064 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52044:52045 sf.Smallstep <> b' var
R52052:52053 sf.Smallstep <> c1 var
R52060:52061 sf.Smallstep <> c2 var
R52069:52070 sf.Smallstep <> st var
R51971:51973 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R51976:51981 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R51974:51975 sf.Smallstep <> st var
R51970:51970 sf.Smallstep <> b var
R51982:51983 sf.Smallstep <> b' var
R52113:52113 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52131:52134 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52137:52148 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52199:52202 sf.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R52114:52119 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52121:52124 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52127:52130 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52120:52120 sf.Smallstep <> b var
R52125:52126 sf.Smallstep <> c1 var
R52135:52136 sf.Smallstep <> st var
R52149:52152 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52154:52160 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52185:52191 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52196:52198 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52153:52153 sf.Smallstep <> b var
R52163:52166 sf.Imp <> ::x_';;'_x not
R52184:52184 sf.Imp <> ::x_';;'_x not
R52161:52162 sf.Smallstep <> c1 var
R52167:52172 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52174:52177 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52180:52183 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52173:52173 sf.Smallstep <> b var
R52178:52179 sf.Smallstep <> c1 var
R52192:52195 sf.Imp <> ::'SKIP' not
R52203:52204 sf.Smallstep <> st var
R52249:52253 sf.Smallstep <> cstep ind
R52262:52262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52265:52265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52269:52269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52255:52255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52257:52257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52260:52260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 52215:52215 <> ::x_'/'_x_'==>'_x_'/'_x
mod 52792:52795 <> CImp
ind 52809:52811 CImp com
constr 52827:52831 CImp CSkip
constr 52843:52846 CImp CAss
constr 52872:52875 CImp CSeq
constr 52901:52903 CImp CIf
constr 52937:52942 CImp CWhile
constr 52982:52985 CImp CPar
R52835:52837 sf.Smallstep <> com ind
R52852:52855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52860:52863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52864:52866 sf.Smallstep <> com ind
R52856:52859 sf.Imp <> aexp ind
R52850:52851 sf.Maps <> id ind
R52882:52885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52889:52892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52893:52895 sf.Smallstep <> com ind
R52886:52888 sf.Smallstep <> com ind
R52879:52881 sf.Smallstep <> com ind
R52911:52914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52918:52921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52925:52928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52929:52931 sf.Smallstep <> com ind
R52922:52924 sf.Smallstep <> com ind
R52915:52917 sf.Smallstep <> com ind
R52907:52910 sf.Imp <> bexp ind
R52950:52953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52957:52960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52961:52963 sf.Smallstep <> com ind
R52954:52956 sf.Smallstep <> com ind
R52946:52949 sf.Imp <> bexp ind
R52992:52995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52999:53002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53003:53005 sf.Smallstep <> com ind
R52996:52998 sf.Smallstep <> com ind
R52989:52991 sf.Smallstep <> com ind
R53032:53036 sf.Smallstep CImp CSkip constr
not 53018:53018 CImp ::'SKIP'
R53066:53069 sf.Smallstep CImp CAss constr
not 53048:53048 CImp ::x_'::='_x
R53117:53120 sf.Smallstep CImp CSeq constr
not 53100:53100 CImp ::x_';;'_x
R53205:53210 sf.Smallstep CImp CWhile constr
not 53174:53174 CImp ::'WHILE'_x_'DO'_x_'END'
R53303:53305 sf.Smallstep CImp CIf constr
not 53262:53262 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R53394:53397 sf.Smallstep CImp CPar constr
not 53361:53361 CImp ::'PAR'_x_'WITH'_x_'END'
ind 53453:53457 CImp cstep
constr 53527:53536 CImp CS_AssStep
constr 53627:53632 CImp CS_Ass
constr 53712:53721 CImp CS_SeqStep
constr 53829:53840 CImp CS_SeqFinish
constr 53898:53906 CImp CS_IfTrue
constr 53985:53994 CImp CS_IfFalse
constr 54074:54082 CImp CS_IfStep
constr 54221:54228 CImp CS_While
constr 54376:54382 CImp CS_Par1
constr 54510:54516 CImp CS_Par2
constr 54644:54653 CImp CS_ParDone
R53461:53461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53473:53478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53479:53479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53491:53495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53483:53485 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53480:53482 sf.Smallstep CImp com ind
R53486:53490 sf.Imp <> state def
R53465:53467 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R53462:53464 sf.Smallstep CImp com ind
R53468:53472 sf.Imp <> state def
R54760:54764 sf.Smallstep <> cstep ind
R54773:54773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54776:54776 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54780:54780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54766:54766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54768:54768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54771:54771 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53578:53587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53588:53588 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53596:53599 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53602:53607 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53616:53619 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53590:53594 sf.Smallstep CImp ::x_'::='_x not
R53589:53589 sf.Smallstep <> i var
R53595:53595 sf.Smallstep <> a var
R53600:53601 sf.Smallstep <> st var
R53609:53613 sf.Smallstep CImp ::x_'::='_x not
R53608:53608 sf.Smallstep <> i var
R53614:53615 sf.Smallstep <> a' var
R53620:53621 sf.Smallstep <> st var
R53565:53567 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R53570:53575 sf.Smallstep <> ::x_'/'_x_'==>a'_x not
R53568:53569 sf.Smallstep <> st var
R53564:53564 sf.Smallstep <> a var
R53576:53577 sf.Smallstep <> a' var
R53657:53657 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53672:53675 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53678:53682 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53687:53690 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53706:53706 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53659:53664 sf.Smallstep CImp ::x_'::='_x not
R53671:53671 sf.Smallstep CImp ::x_'::='_x not
R53658:53658 sf.Smallstep <> i var
R53665:53668 sf.Imp <> ANum constr
R53670:53670 sf.Smallstep <> n var
R53676:53677 sf.Smallstep <> st var
R53683:53686 sf.Smallstep CImp ::'SKIP' not
R53691:53698 sf.Maps <> t_update def
R53705:53705 sf.Smallstep <> n var
R53703:53703 sf.Smallstep <> i var
R53700:53701 sf.Smallstep <> st var
R53777:53786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53787:53787 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53796:53799 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53802:53807 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53817:53820 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53790:53793 sf.Smallstep CImp ::x_';;'_x not
R53788:53789 sf.Smallstep <> c1 var
R53794:53795 sf.Smallstep <> c2 var
R53800:53801 sf.Smallstep <> st var
R53811:53814 sf.Smallstep CImp ::x_';;'_x not
R53808:53810 sf.Smallstep <> c1' var
R53815:53816 sf.Smallstep <> c2 var
R53821:53823 sf.Smallstep <> st' var
R53758:53760 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53763:53767 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53771:53773 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53756:53757 sf.Smallstep <> c1 var
R53761:53762 sf.Smallstep <> st var
R53768:53770 sf.Smallstep <> c1' var
R53774:53776 sf.Smallstep <> st' var
R53864:53864 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53875:53878 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53881:53885 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53888:53890 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53869:53872 sf.Smallstep CImp ::x_';;'_x not
R53865:53868 sf.Smallstep CImp ::'SKIP' not
R53873:53874 sf.Smallstep <> c2 var
R53879:53880 sf.Smallstep <> st var
R53886:53887 sf.Smallstep <> c2 var
R53891:53892 sf.Smallstep <> st var
R53933:53933 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53962:53965 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53968:53972 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53975:53977 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R53934:53937 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53943:53948 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53951:53956 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53959:53961 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53938:53942 sf.Imp <> BTrue constr
R53949:53950 sf.Smallstep <> c1 var
R53957:53958 sf.Smallstep <> c2 var
R53966:53967 sf.Smallstep <> st var
R53973:53974 sf.Smallstep <> c1 var
R53978:53979 sf.Smallstep <> st var
R54021:54021 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54051:54054 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54057:54061 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54064:54066 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54022:54025 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54032:54037 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54040:54045 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54048:54050 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54026:54031 sf.Imp <> BFalse constr
R54038:54039 sf.Smallstep <> c1 var
R54046:54047 sf.Smallstep <> c2 var
R54055:54056 sf.Smallstep <> st var
R54062:54063 sf.Smallstep <> c2 var
R54067:54068 sf.Smallstep <> st var
R54127:54140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54141:54141 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54166:54169 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54172:54184 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54210:54213 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54142:54145 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54147:54152 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54155:54160 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54163:54165 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54146:54146 sf.Smallstep <> b var
R54153:54154 sf.Smallstep <> c1 var
R54161:54162 sf.Smallstep <> c2 var
R54170:54171 sf.Smallstep <> st var
R54185:54188 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54191:54196 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54199:54204 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54207:54209 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54189:54190 sf.Smallstep <> b' var
R54197:54198 sf.Smallstep <> c1 var
R54205:54206 sf.Smallstep <> c2 var
R54214:54215 sf.Smallstep <> st var
R54115:54116 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R54119:54124 sf.Smallstep <> ::x_'/'_x_'==>b'_x not
R54117:54118 sf.Smallstep <> st var
R54114:54114 sf.Smallstep <> b var
R54125:54126 sf.Smallstep <> b' var
R54258:54258 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54276:54279 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54282:54294 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54345:54348 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54259:54264 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54266:54269 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54272:54275 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54265:54265 sf.Smallstep <> b var
R54270:54271 sf.Smallstep <> c1 var
R54280:54281 sf.Smallstep <> st var
R54295:54298 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54300:54306 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54331:54337 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54342:54344 sf.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54299:54299 sf.Smallstep <> b var
R54309:54312 sf.Smallstep CImp ::x_';;'_x not
R54330:54330 sf.Smallstep CImp ::x_';;'_x not
R54307:54308 sf.Smallstep <> c1 var
R54313:54318 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54320:54323 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54326:54329 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R54319:54319 sf.Smallstep <> b var
R54324:54325 sf.Smallstep <> c1 var
R54338:54341 sf.Smallstep CImp ::'SKIP' not
R54349:54350 sf.Smallstep <> st var
R54438:54447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54448:54448 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54467:54470 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54473:54478 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54498:54501 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54449:54452 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54455:54460 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54463:54466 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54453:54454 sf.Smallstep <> c1 var
R54461:54462 sf.Smallstep <> c2 var
R54471:54472 sf.Smallstep <> st var
R54479:54482 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54486:54491 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54494:54497 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54483:54485 sf.Smallstep <> c1' var
R54492:54493 sf.Smallstep <> c2 var
R54502:54504 sf.Smallstep <> st' var
R54419:54421 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54424:54428 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54432:54434 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54417:54418 sf.Smallstep <> c1 var
R54422:54423 sf.Smallstep <> st var
R54429:54431 sf.Smallstep <> c1' var
R54435:54437 sf.Smallstep <> st' var
R54572:54581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54582:54582 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54601:54604 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54607:54612 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54632:54635 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54583:54586 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54589:54594 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54597:54600 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54587:54588 sf.Smallstep <> c1 var
R54595:54596 sf.Smallstep <> c2 var
R54605:54606 sf.Smallstep <> st var
R54613:54616 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54619:54624 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54628:54631 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54617:54618 sf.Smallstep <> c1 var
R54625:54627 sf.Smallstep <> c2' var
R54636:54638 sf.Smallstep <> st' var
R54553:54555 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54558:54562 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54566:54568 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54551:54552 sf.Smallstep <> c2 var
R54556:54557 sf.Smallstep <> st var
R54563:54565 sf.Smallstep <> c2' var
R54569:54571 sf.Smallstep <> st' var
R54674:54674 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54697:54700 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54703:54707 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54712:54714 sf.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R54675:54678 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54683:54688 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54693:54696 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R54679:54682 sf.Smallstep CImp ::'SKIP' not
R54689:54692 sf.Smallstep CImp ::'SKIP' not
R54701:54702 sf.Smallstep <> st var
R54708:54711 sf.Smallstep CImp ::'SKIP' not
R54715:54716 sf.Smallstep <> st var
R54760:54764 sf.Smallstep CImp cstep ind
R54773:54773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54776:54776 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54780:54780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54766:54766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54768:54768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54771:54771 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 54726:54726 CImp ::x_'/'_x_'==>'_x_'/'_x
def 54796:54805 CImp cmultistep
R54810:54814 sf.Smallstep CImp multi ind
R54816:54820 sf.Smallstep CImp cstep ind
R54871:54875 sf.Smallstep CImp multi ind
R54891:54891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54894:54894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54898:54898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54884:54884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54886:54886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54889:54889 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54877:54881 sf.Smallstep CImp cstep ind
not 54833:54833 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 55127:55134 CImp par_loop
R55138:55140 sf.Smallstep CImp com ind
R55147:55154 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55167:55178 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55251:55256 sf.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R55156:55160 sf.Smallstep CImp ::x_'::='_x not
R55155:55155 sf.Imp <> Y def
R55161:55164 sf.Imp <> ANum constr
R55179:55184 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R55205:55214 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R55243:55250 sf.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R55185:55187 sf.Imp <> BEq constr
R55198:55201 sf.Imp <> ANum constr
R55190:55192 sf.Imp <> AId constr
R55194:55194 sf.Imp <> Y def
R55216:55220 sf.Smallstep CImp ::x_'::='_x not
R55215:55215 sf.Imp <> X def
R55221:55225 sf.Imp <> APlus constr
R55236:55239 sf.Imp <> ANum constr
R55228:55230 sf.Imp <> AId constr
R55232:55232 sf.Imp <> X def
def 55329:55346 CImp par_loop_example_0
R55351:55357 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55361:55369 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55409:55416 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55378:55380 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55392:55398 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55403:55405 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55370:55377 sf.Smallstep CImp par_loop def
R55381:55391 sf.Imp <> empty_state def
R55399:55402 sf.Smallstep CImp ::'SKIP' not
R55406:55408 sf.Smallstep <> st' var
R55422:55424 Coq.Init.Logic <> :type_scope:x_'='_x not
R55417:55419 sf.Smallstep <> st' var
R55421:55421 sf.Imp <> X def
R55444:55451 Coq.Init.Logic <> ex_intro constr
R55444:55451 Coq.Init.Logic <> ex_intro constr
R55470:55477 sf.Smallstep CImp par_loop def
R55489:55498 sf.Smallstep CImp multi_step constr
R55489:55498 sf.Smallstep CImp multi_step constr
R55507:55513 sf.Smallstep CImp CS_Par1 constr
R55507:55513 sf.Smallstep CImp CS_Par1 constr
R55526:55531 sf.Smallstep CImp CS_Ass constr
R55526:55531 sf.Smallstep CImp CS_Ass constr
R55543:55552 sf.Smallstep CImp multi_step constr
R55543:55552 sf.Smallstep CImp multi_step constr
R55561:55567 sf.Smallstep CImp CS_Par2 constr
R55561:55567 sf.Smallstep CImp CS_Par2 constr
R55576:55583 sf.Smallstep CImp CS_While constr
R55576:55583 sf.Smallstep CImp CS_While constr
R55595:55604 sf.Smallstep CImp multi_step constr
R55595:55604 sf.Smallstep CImp multi_step constr
R55613:55619 sf.Smallstep CImp CS_Par2 constr
R55613:55619 sf.Smallstep CImp CS_Par2 constr
R55628:55636 sf.Smallstep CImp CS_IfStep constr
R55628:55636 sf.Smallstep CImp CS_IfStep constr
R55649:55654 sf.Smallstep CImp BS_Eq1 constr
R55649:55654 sf.Smallstep CImp BS_Eq1 constr
R55663:55667 sf.Smallstep CImp AS_Id constr
R55663:55667 sf.Smallstep CImp AS_Id constr
R55679:55688 sf.Smallstep CImp multi_step constr
R55679:55688 sf.Smallstep CImp multi_step constr
R55697:55703 sf.Smallstep CImp CS_Par2 constr
R55697:55703 sf.Smallstep CImp CS_Par2 constr
R55712:55720 sf.Smallstep CImp CS_IfStep constr
R55712:55720 sf.Smallstep CImp CS_IfStep constr
R55733:55737 sf.Smallstep CImp BS_Eq constr
R55733:55737 sf.Smallstep CImp BS_Eq constr
R55756:55765 sf.Smallstep CImp multi_step constr
R55756:55765 sf.Smallstep CImp multi_step constr
R55774:55780 sf.Smallstep CImp CS_Par2 constr
R55774:55780 sf.Smallstep CImp CS_Par2 constr
R55789:55798 sf.Smallstep CImp CS_IfFalse constr
R55789:55798 sf.Smallstep CImp CS_IfFalse constr
R55810:55819 sf.Smallstep CImp multi_step constr
R55810:55819 sf.Smallstep CImp multi_step constr
R55828:55837 sf.Smallstep CImp CS_ParDone constr
R55828:55837 sf.Smallstep CImp CS_ParDone constr
R55849:55858 sf.Smallstep CImp multi_refl constr
R55849:55858 sf.Smallstep CImp multi_refl constr
def 55941:55958 CImp par_loop_example_2
R55963:55969 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55973:55981 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56020:56027 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55990:55992 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R56004:56009 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R56014:56016 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R55982:55989 sf.Smallstep CImp par_loop def
R55993:56003 sf.Imp <> empty_state def
R56010:56013 sf.Smallstep CImp ::'SKIP' not
R56017:56019 sf.Smallstep <> st' var
R56033:56035 Coq.Init.Logic <> :type_scope:x_'='_x not
R56028:56030 sf.Smallstep <> st' var
R56032:56032 sf.Imp <> X def
R56055:56062 Coq.Init.Logic <> ex_intro constr
R56055:56062 Coq.Init.Logic <> ex_intro constr
R56081:56090 sf.Smallstep CImp multi_step constr
R56081:56090 sf.Smallstep CImp multi_step constr
R56099:56105 sf.Smallstep CImp CS_Par2 constr
R56099:56105 sf.Smallstep CImp CS_Par2 constr
R56114:56121 sf.Smallstep CImp CS_While constr
R56114:56121 sf.Smallstep CImp CS_While constr
R56133:56142 sf.Smallstep CImp multi_step constr
R56133:56142 sf.Smallstep CImp multi_step constr
R56151:56157 sf.Smallstep CImp CS_Par2 constr
R56151:56157 sf.Smallstep CImp CS_Par2 constr
R56166:56174 sf.Smallstep CImp CS_IfStep constr
R56166:56174 sf.Smallstep CImp CS_IfStep constr
R56187:56192 sf.Smallstep CImp BS_Eq1 constr
R56187:56192 sf.Smallstep CImp BS_Eq1 constr
R56201:56205 sf.Smallstep CImp AS_Id constr
R56201:56205 sf.Smallstep CImp AS_Id constr
R56217:56226 sf.Smallstep CImp multi_step constr
R56217:56226 sf.Smallstep CImp multi_step constr
R56235:56241 sf.Smallstep CImp CS_Par2 constr
R56235:56241 sf.Smallstep CImp CS_Par2 constr
R56250:56258 sf.Smallstep CImp CS_IfStep constr
R56250:56258 sf.Smallstep CImp CS_IfStep constr
R56271:56275 sf.Smallstep CImp BS_Eq constr
R56271:56275 sf.Smallstep CImp BS_Eq constr
R56294:56303 sf.Smallstep CImp multi_step constr
R56294:56303 sf.Smallstep CImp multi_step constr
R56312:56318 sf.Smallstep CImp CS_Par2 constr
R56312:56318 sf.Smallstep CImp CS_Par2 constr
R56327:56335 sf.Smallstep CImp CS_IfTrue constr
R56327:56335 sf.Smallstep CImp CS_IfTrue constr
R56347:56356 sf.Smallstep CImp multi_step constr
R56347:56356 sf.Smallstep CImp multi_step constr
R56365:56371 sf.Smallstep CImp CS_Par2 constr
R56365:56371 sf.Smallstep CImp CS_Par2 constr
R56380:56389 sf.Smallstep CImp CS_SeqStep constr
R56380:56389 sf.Smallstep CImp CS_SeqStep constr
R56402:56411 sf.Smallstep CImp CS_AssStep constr
R56402:56411 sf.Smallstep CImp CS_AssStep constr
R56420:56427 sf.Smallstep CImp AS_Plus1 constr
R56420:56427 sf.Smallstep CImp AS_Plus1 constr
R56436:56440 sf.Smallstep CImp AS_Id constr
R56436:56440 sf.Smallstep CImp AS_Id constr
R56452:56461 sf.Smallstep CImp multi_step constr
R56452:56461 sf.Smallstep CImp multi_step constr
R56470:56476 sf.Smallstep CImp CS_Par2 constr
R56470:56476 sf.Smallstep CImp CS_Par2 constr
R56485:56494 sf.Smallstep CImp CS_SeqStep constr
R56485:56494 sf.Smallstep CImp CS_SeqStep constr
R56507:56516 sf.Smallstep CImp CS_AssStep constr
R56507:56516 sf.Smallstep CImp CS_AssStep constr
R56525:56531 sf.Smallstep CImp AS_Plus constr
R56525:56531 sf.Smallstep CImp AS_Plus constr
R56543:56552 sf.Smallstep CImp multi_step constr
R56543:56552 sf.Smallstep CImp multi_step constr
R56561:56567 sf.Smallstep CImp CS_Par2 constr
R56561:56567 sf.Smallstep CImp CS_Par2 constr
R56576:56585 sf.Smallstep CImp CS_SeqStep constr
R56576:56585 sf.Smallstep CImp CS_SeqStep constr
R56598:56603 sf.Smallstep CImp CS_Ass constr
R56598:56603 sf.Smallstep CImp CS_Ass constr
R56615:56624 sf.Smallstep CImp multi_step constr
R56615:56624 sf.Smallstep CImp multi_step constr
R56633:56639 sf.Smallstep CImp CS_Par2 constr
R56633:56639 sf.Smallstep CImp CS_Par2 constr
R56648:56659 sf.Smallstep CImp CS_SeqFinish constr
R56648:56659 sf.Smallstep CImp CS_SeqFinish constr
R56672:56681 sf.Smallstep CImp multi_step constr
R56672:56681 sf.Smallstep CImp multi_step constr
R56690:56696 sf.Smallstep CImp CS_Par2 constr
R56690:56696 sf.Smallstep CImp CS_Par2 constr
R56705:56712 sf.Smallstep CImp CS_While constr
R56705:56712 sf.Smallstep CImp CS_While constr
R56724:56733 sf.Smallstep CImp multi_step constr
R56724:56733 sf.Smallstep CImp multi_step constr
R56742:56748 sf.Smallstep CImp CS_Par2 constr
R56742:56748 sf.Smallstep CImp CS_Par2 constr
R56757:56765 sf.Smallstep CImp CS_IfStep constr
R56757:56765 sf.Smallstep CImp CS_IfStep constr
R56778:56783 sf.Smallstep CImp BS_Eq1 constr
R56778:56783 sf.Smallstep CImp BS_Eq1 constr
R56792:56796 sf.Smallstep CImp AS_Id constr
R56792:56796 sf.Smallstep CImp AS_Id constr
R56808:56817 sf.Smallstep CImp multi_step constr
R56808:56817 sf.Smallstep CImp multi_step constr
R56826:56832 sf.Smallstep CImp CS_Par2 constr
R56826:56832 sf.Smallstep CImp CS_Par2 constr
R56841:56849 sf.Smallstep CImp CS_IfStep constr
R56841:56849 sf.Smallstep CImp CS_IfStep constr
R56862:56866 sf.Smallstep CImp BS_Eq constr
R56862:56866 sf.Smallstep CImp BS_Eq constr
R56885:56894 sf.Smallstep CImp multi_step constr
R56885:56894 sf.Smallstep CImp multi_step constr
R56903:56909 sf.Smallstep CImp CS_Par2 constr
R56903:56909 sf.Smallstep CImp CS_Par2 constr
R56918:56926 sf.Smallstep CImp CS_IfTrue constr
R56918:56926 sf.Smallstep CImp CS_IfTrue constr
R56938:56947 sf.Smallstep CImp multi_step constr
R56938:56947 sf.Smallstep CImp multi_step constr
R56956:56962 sf.Smallstep CImp CS_Par2 constr
R56956:56962 sf.Smallstep CImp CS_Par2 constr
R56971:56980 sf.Smallstep CImp CS_SeqStep constr
R56971:56980 sf.Smallstep CImp CS_SeqStep constr
R56993:57002 sf.Smallstep CImp CS_AssStep constr
R56993:57002 sf.Smallstep CImp CS_AssStep constr
R57011:57018 sf.Smallstep CImp AS_Plus1 constr
R57011:57018 sf.Smallstep CImp AS_Plus1 constr
R57027:57031 sf.Smallstep CImp AS_Id constr
R57027:57031 sf.Smallstep CImp AS_Id constr
R57043:57052 sf.Smallstep CImp multi_step constr
R57043:57052 sf.Smallstep CImp multi_step constr
R57061:57067 sf.Smallstep CImp CS_Par2 constr
R57061:57067 sf.Smallstep CImp CS_Par2 constr
R57076:57085 sf.Smallstep CImp CS_SeqStep constr
R57076:57085 sf.Smallstep CImp CS_SeqStep constr
R57098:57107 sf.Smallstep CImp CS_AssStep constr
R57098:57107 sf.Smallstep CImp CS_AssStep constr
R57116:57122 sf.Smallstep CImp AS_Plus constr
R57116:57122 sf.Smallstep CImp AS_Plus constr
R57134:57143 sf.Smallstep CImp multi_step constr
R57134:57143 sf.Smallstep CImp multi_step constr
R57152:57158 sf.Smallstep CImp CS_Par2 constr
R57152:57158 sf.Smallstep CImp CS_Par2 constr
R57167:57176 sf.Smallstep CImp CS_SeqStep constr
R57167:57176 sf.Smallstep CImp CS_SeqStep constr
R57189:57194 sf.Smallstep CImp CS_Ass constr
R57189:57194 sf.Smallstep CImp CS_Ass constr
R57207:57216 sf.Smallstep CImp multi_step constr
R57207:57216 sf.Smallstep CImp multi_step constr
R57225:57231 sf.Smallstep CImp CS_Par1 constr
R57225:57231 sf.Smallstep CImp CS_Par1 constr
R57240:57245 sf.Smallstep CImp CS_Ass constr
R57240:57245 sf.Smallstep CImp CS_Ass constr
R57257:57266 sf.Smallstep CImp multi_step constr
R57257:57266 sf.Smallstep CImp multi_step constr
R57275:57281 sf.Smallstep CImp CS_Par2 constr
R57275:57281 sf.Smallstep CImp CS_Par2 constr
R57290:57301 sf.Smallstep CImp CS_SeqFinish constr
R57290:57301 sf.Smallstep CImp CS_SeqFinish constr
R57313:57322 sf.Smallstep CImp multi_step constr
R57313:57322 sf.Smallstep CImp multi_step constr
R57331:57337 sf.Smallstep CImp CS_Par2 constr
R57331:57337 sf.Smallstep CImp CS_Par2 constr
R57346:57353 sf.Smallstep CImp CS_While constr
R57346:57353 sf.Smallstep CImp CS_While constr
R57365:57374 sf.Smallstep CImp multi_step constr
R57365:57374 sf.Smallstep CImp multi_step constr
R57383:57389 sf.Smallstep CImp CS_Par2 constr
R57383:57389 sf.Smallstep CImp CS_Par2 constr
R57398:57406 sf.Smallstep CImp CS_IfStep constr
R57398:57406 sf.Smallstep CImp CS_IfStep constr
R57419:57424 sf.Smallstep CImp BS_Eq1 constr
R57419:57424 sf.Smallstep CImp BS_Eq1 constr
R57433:57437 sf.Smallstep CImp AS_Id constr
R57433:57437 sf.Smallstep CImp AS_Id constr
R57449:57458 sf.Smallstep CImp multi_step constr
R57449:57458 sf.Smallstep CImp multi_step constr
R57467:57473 sf.Smallstep CImp CS_Par2 constr
R57467:57473 sf.Smallstep CImp CS_Par2 constr
R57482:57490 sf.Smallstep CImp CS_IfStep constr
R57482:57490 sf.Smallstep CImp CS_IfStep constr
R57503:57507 sf.Smallstep CImp BS_Eq constr
R57503:57507 sf.Smallstep CImp BS_Eq constr
R57526:57535 sf.Smallstep CImp multi_step constr
R57526:57535 sf.Smallstep CImp multi_step constr
R57544:57550 sf.Smallstep CImp CS_Par2 constr
R57544:57550 sf.Smallstep CImp CS_Par2 constr
R57559:57568 sf.Smallstep CImp CS_IfFalse constr
R57559:57568 sf.Smallstep CImp CS_IfFalse constr
R57580:57589 sf.Smallstep CImp multi_step constr
R57580:57589 sf.Smallstep CImp multi_step constr
R57598:57607 sf.Smallstep CImp CS_ParDone constr
R57598:57607 sf.Smallstep CImp CS_ParDone constr
R57619:57628 sf.Smallstep CImp multi_refl constr
R57619:57628 sf.Smallstep CImp multi_refl constr
R57734:57739 Coq.Numbers.Natural.Peano.NPeano <> <> lib
prf 57748:57761 CImp par_body_n__Sn
R57800:57805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57814:57816 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R57819:57824 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R57833:57836 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R57856:57856 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R57806:57813 sf.Smallstep CImp par_loop def
R57817:57818 sf.Smallstep <> st var
R57825:57832 sf.Smallstep CImp par_loop def
R57837:57844 sf.Maps <> t_update def
R57852:57852 Coq.Init.Datatypes <> S constr
R57854:57854 sf.Smallstep <> n var
R57849:57849 sf.Imp <> X def
R57846:57847 sf.Smallstep <> st var
R57788:57791 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57784:57786 Coq.Init.Logic <> :type_scope:x_'='_x not
R57780:57781 sf.Smallstep <> st var
R57783:57783 sf.Imp <> X def
R57787:57787 sf.Smallstep <> n var
R57796:57798 Coq.Init.Logic <> :type_scope:x_'='_x not
R57792:57793 sf.Smallstep <> st var
R57795:57795 sf.Imp <> Y def
R57893:57900 sf.Smallstep CImp par_loop def
R57913:57920 sf.Smallstep CImp par_loop def
R57930:57939 sf.Smallstep CImp multi_step constr
R57930:57939 sf.Smallstep CImp multi_step constr
R57951:57957 sf.Smallstep CImp CS_Par2 constr
R57951:57957 sf.Smallstep CImp CS_Par2 constr
R57967:57974 sf.Smallstep CImp CS_While constr
R57967:57974 sf.Smallstep CImp CS_While constr
R57984:57993 sf.Smallstep CImp multi_step constr
R57984:57993 sf.Smallstep CImp multi_step constr
R58005:58011 sf.Smallstep CImp CS_Par2 constr
R58005:58011 sf.Smallstep CImp CS_Par2 constr
R58020:58028 sf.Smallstep CImp CS_IfStep constr
R58020:58028 sf.Smallstep CImp CS_IfStep constr
R58038:58043 sf.Smallstep CImp BS_Eq1 constr
R58038:58043 sf.Smallstep CImp BS_Eq1 constr
R58052:58056 sf.Smallstep CImp AS_Id constr
R58052:58056 sf.Smallstep CImp AS_Id constr
R58069:58078 sf.Smallstep CImp multi_step constr
R58069:58078 sf.Smallstep CImp multi_step constr
R58087:58093 sf.Smallstep CImp CS_Par2 constr
R58087:58093 sf.Smallstep CImp CS_Par2 constr
R58102:58110 sf.Smallstep CImp CS_IfStep constr
R58102:58110 sf.Smallstep CImp CS_IfStep constr
R58122:58126 sf.Smallstep CImp BS_Eq constr
R58122:58126 sf.Smallstep CImp BS_Eq constr
R58155:58164 sf.Smallstep CImp multi_step constr
R58155:58164 sf.Smallstep CImp multi_step constr
R58174:58180 sf.Smallstep CImp CS_Par2 constr
R58174:58180 sf.Smallstep CImp CS_Par2 constr
R58192:58200 sf.Smallstep CImp CS_IfTrue constr
R58192:58200 sf.Smallstep CImp CS_IfTrue constr
R58210:58219 sf.Smallstep CImp multi_step constr
R58210:58219 sf.Smallstep CImp multi_step constr
R58228:58234 sf.Smallstep CImp CS_Par2 constr
R58228:58234 sf.Smallstep CImp CS_Par2 constr
R58248:58257 sf.Smallstep CImp CS_SeqStep constr
R58248:58257 sf.Smallstep CImp CS_SeqStep constr
R58266:58275 sf.Smallstep CImp CS_AssStep constr
R58266:58275 sf.Smallstep CImp CS_AssStep constr
R58284:58291 sf.Smallstep CImp AS_Plus1 constr
R58284:58291 sf.Smallstep CImp AS_Plus1 constr
R58300:58304 sf.Smallstep CImp AS_Id constr
R58300:58304 sf.Smallstep CImp AS_Id constr
R58314:58323 sf.Smallstep CImp multi_step constr
R58314:58323 sf.Smallstep CImp multi_step constr
R58332:58338 sf.Smallstep CImp CS_Par2 constr
R58332:58338 sf.Smallstep CImp CS_Par2 constr
R58347:58356 sf.Smallstep CImp CS_SeqStep constr
R58347:58356 sf.Smallstep CImp CS_SeqStep constr
R58369:58378 sf.Smallstep CImp CS_AssStep constr
R58369:58378 sf.Smallstep CImp CS_AssStep constr
R58387:58393 sf.Smallstep CImp AS_Plus constr
R58387:58393 sf.Smallstep CImp AS_Plus constr
R58414:58423 sf.Smallstep CImp multi_step constr
R58414:58423 sf.Smallstep CImp multi_step constr
R58435:58441 sf.Smallstep CImp CS_Par2 constr
R58435:58441 sf.Smallstep CImp CS_Par2 constr
R58450:58459 sf.Smallstep CImp CS_SeqStep constr
R58450:58459 sf.Smallstep CImp CS_SeqStep constr
R58468:58473 sf.Smallstep CImp CS_Ass constr
R58468:58473 sf.Smallstep CImp CS_Ass constr
R58486:58495 sf.Smallstep CImp multi_step constr
R58486:58495 sf.Smallstep CImp multi_step constr
R58504:58510 sf.Smallstep CImp CS_Par2 constr
R58504:58510 sf.Smallstep CImp CS_Par2 constr
R58519:58530 sf.Smallstep CImp CS_SeqFinish constr
R58519:58530 sf.Smallstep CImp CS_SeqFinish constr
R58549:58549 Coq.Init.Datatypes <> S constr
R58551:58554 Coq.Init.Peano <> plus syndef
R58567:58584 Coq.Numbers.Natural.Peano.NPeano Nat add_1_r thm
R58567:58584 Coq.Numbers.Natural.Peano.NPeano Nat add_1_r thm
R58567:58584 Coq.Numbers.Natural.Peano.NPeano Nat add_1_r thm
R58599:58608 sf.Smallstep CImp multi_refl constr
R58599:58608 sf.Smallstep CImp multi_refl constr
prf 58693:58702 CImp par_body_n
R58741:58746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58747:58753 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58757:58762 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58797:58800 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58771:58773 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58776:58782 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58791:58793 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R58763:58770 sf.Smallstep CImp par_loop def
R58774:58775 sf.Smallstep <> st var
R58783:58790 sf.Smallstep CImp par_loop def
R58794:58796 sf.Smallstep <> st' var
R58810:58813 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58806:58808 Coq.Init.Logic <> :type_scope:x_'='_x not
R58801:58803 sf.Smallstep <> st' var
R58805:58805 sf.Imp <> X def
R58809:58809 sf.Smallstep <> n var
R58819:58821 Coq.Init.Logic <> :type_scope:x_'='_x not
R58814:58816 sf.Smallstep <> st' var
R58818:58818 sf.Imp <> Y def
R58729:58732 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58725:58727 Coq.Init.Logic <> :type_scope:x_'='_x not
R58721:58722 sf.Smallstep <> st var
R58724:58724 sf.Imp <> X def
R58737:58739 Coq.Init.Logic <> :type_scope:x_'='_x not
R58733:58734 sf.Smallstep <> st var
R58736:58736 sf.Imp <> Y def
R58839:58846 sf.Smallstep CImp par_loop def
R58909:58918 sf.Smallstep CImp multi_refl constr
R58909:58918 sf.Smallstep CImp multi_refl constr
R58975:58982 sf.Maps <> t_update def
R58990:58990 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R58986:58986 sf.Imp <> X def
R58975:58982 sf.Maps <> t_update def
R58990:58990 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R58986:58986 sf.Imp <> X def
R59040:59050 sf.Smallstep CImp multi_trans thm
R59040:59050 sf.Smallstep CImp multi_trans thm
R59075:59084 sf.Smallstep CImp multi_step constr
R59075:59084 sf.Smallstep CImp multi_step constr
R59093:59099 sf.Smallstep CImp CS_Par2 constr
R59093:59099 sf.Smallstep CImp CS_Par2 constr
R59108:59115 sf.Smallstep CImp CS_While constr
R59108:59115 sf.Smallstep CImp CS_While constr
R59130:59139 sf.Smallstep CImp multi_step constr
R59130:59139 sf.Smallstep CImp multi_step constr
R59148:59154 sf.Smallstep CImp CS_Par2 constr
R59148:59154 sf.Smallstep CImp CS_Par2 constr
R59163:59171 sf.Smallstep CImp CS_IfStep constr
R59163:59171 sf.Smallstep CImp CS_IfStep constr
R59185:59190 sf.Smallstep CImp BS_Eq1 constr
R59185:59190 sf.Smallstep CImp BS_Eq1 constr
R59199:59203 sf.Smallstep CImp AS_Id constr
R59199:59203 sf.Smallstep CImp AS_Id constr
R59213:59222 sf.Smallstep CImp multi_step constr
R59213:59222 sf.Smallstep CImp multi_step constr
R59236:59242 sf.Smallstep CImp CS_Par2 constr
R59236:59242 sf.Smallstep CImp CS_Par2 constr
R59251:59259 sf.Smallstep CImp CS_IfStep constr
R59251:59259 sf.Smallstep CImp CS_IfStep constr
R59268:59272 sf.Smallstep CImp BS_Eq constr
R59268:59272 sf.Smallstep CImp BS_Eq constr
R59319:59328 sf.Smallstep CImp multi_step constr
R59319:59328 sf.Smallstep CImp multi_step constr
R59342:59348 sf.Smallstep CImp CS_Par2 constr
R59342:59348 sf.Smallstep CImp CS_Par2 constr
R59357:59365 sf.Smallstep CImp CS_IfTrue constr
R59357:59365 sf.Smallstep CImp CS_IfTrue constr
R59375:59384 sf.Smallstep CImp multi_step constr
R59375:59384 sf.Smallstep CImp multi_step constr
R59398:59404 sf.Smallstep CImp CS_Par2 constr
R59398:59404 sf.Smallstep CImp CS_Par2 constr
R59413:59422 sf.Smallstep CImp CS_SeqStep constr
R59413:59422 sf.Smallstep CImp CS_SeqStep constr
R59431:59440 sf.Smallstep CImp CS_AssStep constr
R59431:59440 sf.Smallstep CImp CS_AssStep constr
R59454:59461 sf.Smallstep CImp AS_Plus1 constr
R59454:59461 sf.Smallstep CImp AS_Plus1 constr
R59470:59474 sf.Smallstep CImp AS_Id constr
R59470:59474 sf.Smallstep CImp AS_Id constr
R59484:59493 sf.Smallstep CImp multi_step constr
R59484:59493 sf.Smallstep CImp multi_step constr
R59507:59513 sf.Smallstep CImp CS_Par2 constr
R59507:59513 sf.Smallstep CImp CS_Par2 constr
R59522:59531 sf.Smallstep CImp CS_SeqStep constr
R59522:59531 sf.Smallstep CImp CS_SeqStep constr
R59540:59549 sf.Smallstep CImp CS_AssStep constr
R59540:59549 sf.Smallstep CImp CS_AssStep constr
R59563:59569 sf.Smallstep CImp AS_Plus constr
R59563:59569 sf.Smallstep CImp AS_Plus constr
R59579:59588 sf.Smallstep CImp multi_step constr
R59579:59588 sf.Smallstep CImp multi_step constr
R59597:59603 sf.Smallstep CImp CS_Par2 constr
R59597:59603 sf.Smallstep CImp CS_Par2 constr
R59617:59626 sf.Smallstep CImp CS_SeqStep constr
R59617:59626 sf.Smallstep CImp CS_SeqStep constr
R59647:59652 sf.Smallstep CImp CS_Ass constr
R59647:59652 sf.Smallstep CImp CS_Ass constr
R59662:59671 sf.Smallstep CImp multi_step constr
R59662:59671 sf.Smallstep CImp multi_step constr
R59685:59691 sf.Smallstep CImp CS_Par2 constr
R59685:59691 sf.Smallstep CImp CS_Par2 constr
R59700:59711 sf.Smallstep CImp CS_SeqFinish constr
R59700:59711 sf.Smallstep CImp CS_SeqFinish constr
R59720:59729 sf.Smallstep CImp multi_refl constr
R59720:59729 sf.Smallstep CImp multi_refl constr
R59751:59758 sf.Maps <> t_update def
R59774:59791 Coq.Numbers.Natural.Peano.NPeano Nat add_1_r thm
R59774:59791 Coq.Numbers.Natural.Peano.NPeano Nat add_1_r thm
R59806:59813 sf.Maps <> t_update def
prf 59984:59997 CImp par_loop_any_X
R60012:60018 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60022:60027 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60067:60074 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60036:60038 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60050:60056 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60061:60063 sf.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60028:60035 sf.Smallstep CImp par_loop def
R60039:60049 sf.Imp <> empty_state def
R60057:60060 sf.Smallstep CImp ::'SKIP' not
R60064:60066 sf.Smallstep <> st' var
R60080:60082 Coq.Init.Logic <> :type_scope:x_'='_x not
R60075:60077 sf.Smallstep <> st' var
R60079:60079 sf.Imp <> X def
R60083:60083 sf.Smallstep <> n var
R60117:60126 sf.Smallstep CImp par_body_n thm
R60130:60140 sf.Imp <> empty_state def
R60117:60126 sf.Smallstep CImp par_body_n thm
R60130:60140 sf.Imp <> empty_state def
R60162:60169 sf.Maps <> t_update def
R60256:60263 sf.Maps <> t_update def
R60268:60268 sf.Imp <> Y def
R60256:60263 sf.Maps <> t_update def
R60268:60268 sf.Imp <> Y def
R60307:60307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60316:60316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60319:60319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60308:60315 sf.Smallstep CImp par_loop def
R60290:60300 sf.Smallstep CImp multi_trans thm
R60307:60307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60316:60316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60319:60319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60308:60315 sf.Smallstep CImp par_loop def
R60290:60300 sf.Smallstep CImp multi_trans thm
R60341:60350 sf.Smallstep CImp multi_step constr
R60341:60350 sf.Smallstep CImp multi_step constr
R60359:60365 sf.Smallstep CImp CS_Par1 constr
R60359:60365 sf.Smallstep CImp CS_Par1 constr
R60374:60379 sf.Smallstep CImp CS_Ass constr
R60374:60379 sf.Smallstep CImp CS_Ass constr
R60391:60400 sf.Smallstep CImp multi_step constr
R60391:60400 sf.Smallstep CImp multi_step constr
R60409:60415 sf.Smallstep CImp CS_Par2 constr
R60409:60415 sf.Smallstep CImp CS_Par2 constr
R60424:60431 sf.Smallstep CImp CS_While constr
R60424:60431 sf.Smallstep CImp CS_While constr
R60443:60452 sf.Smallstep CImp multi_step constr
R60443:60452 sf.Smallstep CImp multi_step constr
R60461:60467 sf.Smallstep CImp CS_Par2 constr
R60461:60467 sf.Smallstep CImp CS_Par2 constr
R60476:60484 sf.Smallstep CImp CS_IfStep constr
R60476:60484 sf.Smallstep CImp CS_IfStep constr
R60497:60502 sf.Smallstep CImp BS_Eq1 constr
R60497:60502 sf.Smallstep CImp BS_Eq1 constr
R60511:60515 sf.Smallstep CImp AS_Id constr
R60511:60515 sf.Smallstep CImp AS_Id constr
R60526:60536 sf.Maps <> t_update_eq thm
R60526:60536 sf.Maps <> t_update_eq thm
R60526:60536 sf.Maps <> t_update_eq thm
R60548:60557 sf.Smallstep CImp multi_step constr
R60548:60557 sf.Smallstep CImp multi_step constr
R60566:60572 sf.Smallstep CImp CS_Par2 constr
R60566:60572 sf.Smallstep CImp CS_Par2 constr
R60581:60589 sf.Smallstep CImp CS_IfStep constr
R60581:60589 sf.Smallstep CImp CS_IfStep constr
R60602:60606 sf.Smallstep CImp BS_Eq constr
R60602:60606 sf.Smallstep CImp BS_Eq constr
R60625:60634 sf.Smallstep CImp multi_step constr
R60625:60634 sf.Smallstep CImp multi_step constr
R60643:60649 sf.Smallstep CImp CS_Par2 constr
R60643:60649 sf.Smallstep CImp CS_Par2 constr
R60658:60667 sf.Smallstep CImp CS_IfFalse constr
R60658:60667 sf.Smallstep CImp CS_IfFalse constr
R60679:60688 sf.Smallstep CImp multi_step constr
R60679:60688 sf.Smallstep CImp multi_step constr
R60697:60706 sf.Smallstep CImp CS_ParDone constr
R60697:60706 sf.Smallstep CImp CS_ParDone constr
R60717:60726 sf.Smallstep CImp multi_refl constr
R60717:60726 sf.Smallstep CImp multi_refl constr
R60740:60751 sf.Maps <> t_update_neq thm
R60740:60751 sf.Maps <> t_update_neq thm
R60740:60751 sf.Maps <> t_update_neq thm
R60740:60751 sf.Maps <> t_update_neq thm
R60798:60801 sf.Smallstep CImp <> mod
def 61034:61038 <> stack
R61043:61046 Coq.Init.Datatypes <> list ind
R61048:61050 Coq.Init.Datatypes <> nat ind
def 61064:61067 <> prog
R61073:61076 Coq.Init.Datatypes <> list ind
R61078:61083 sf.Imp <> sinstr ind
ind 61097:61106 <> stack_step
constr 61163:61169 <> SS_Push
constr 61256:61262 <> SS_Load
constr 61352:61358 <> SS_Plus
constr 61449:61456 <> SS_Minus
constr 61547:61553 <> SS_Mult
R61115:61118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61131:61134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61147:61150 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61139:61141 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R61135:61138 sf.Smallstep <> prog def
R61142:61146 sf.Smallstep <> stack def
R61123:61125 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R61119:61122 sf.Smallstep <> prog def
R61126:61130 sf.Smallstep <> stack def
R61110:61114 sf.Imp <> state def
R61197:61206 sf.Smallstep <> stack_step ind
R61237:61237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61240:61241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61250:61250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61238:61239 sf.Smallstep <> p' var
R61243:61246 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61242:61242 sf.Smallstep <> n var
R61247:61249 sf.Smallstep <> stk var
R61211:61211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61225:61226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61230:61230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61219:61222 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61212:61216 sf.Imp <> SPush constr
R61218:61218 sf.Smallstep <> n var
R61223:61224 sf.Smallstep <> p' var
R61227:61229 sf.Smallstep <> stk var
R61208:61209 sf.Smallstep <> st var
R61290:61299 sf.Smallstep <> stack_step ind
R61330:61330 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61333:61334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61346:61346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61331:61332 sf.Smallstep <> p' var
R61339:61342 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61335:61336 sf.Smallstep <> st var
R61338:61338 sf.Smallstep <> i var
R61343:61345 sf.Smallstep <> stk var
R61304:61304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61318:61319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61323:61323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61312:61315 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61305:61309 sf.Imp <> SLoad constr
R61311:61311 sf.Smallstep <> i var
R61316:61317 sf.Smallstep <> p' var
R61320:61322 sf.Smallstep <> stk var
R61301:61302 sf.Smallstep <> st var
R61388:61397 sf.Smallstep <> stack_step ind
R61428:61428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61431:61432 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61443:61443 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61429:61430 sf.Smallstep <> p' var
R61433:61433 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61437:61439 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61435:61435 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R61434:61434 sf.Smallstep <> m var
R61436:61436 sf.Smallstep <> n var
R61440:61442 sf.Smallstep <> stk var
R61402:61402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61414:61415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61425:61425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61408:61411 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61403:61407 sf.Imp <> SPlus constr
R61412:61413 sf.Smallstep <> p' var
R61417:61418 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61416:61416 sf.Smallstep <> n var
R61420:61421 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61419:61419 sf.Smallstep <> m var
R61422:61424 sf.Smallstep <> stk var
R61399:61400 sf.Smallstep <> st var
R61486:61495 sf.Smallstep <> stack_step ind
R61526:61526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61529:61530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61541:61541 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61527:61528 sf.Smallstep <> p' var
R61531:61531 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61535:61537 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61533:61533 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R61532:61532 sf.Smallstep <> m var
R61534:61534 sf.Smallstep <> n var
R61538:61540 sf.Smallstep <> stk var
R61500:61500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61513:61514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61524:61524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61507:61510 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61501:61506 sf.Imp <> SMinus constr
R61511:61512 sf.Smallstep <> p' var
R61516:61517 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61515:61515 sf.Smallstep <> n var
R61519:61520 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61518:61518 sf.Smallstep <> m var
R61521:61523 sf.Smallstep <> stk var
R61497:61498 sf.Smallstep <> st var
R61583:61592 sf.Smallstep <> stack_step ind
R61623:61623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61626:61627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61638:61638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61624:61625 sf.Smallstep <> p' var
R61628:61628 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61632:61634 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61630:61630 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R61629:61629 sf.Smallstep <> m var
R61631:61631 sf.Smallstep <> n var
R61635:61637 sf.Smallstep <> stk var
R61597:61597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61609:61610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61620:61620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61603:61606 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61598:61602 sf.Imp <> SMult constr
R61607:61608 sf.Smallstep <> p' var
R61612:61613 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61611:61611 sf.Smallstep <> n var
R61615:61616 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R61614:61614 sf.Smallstep <> m var
R61617:61619 sf.Smallstep <> stk var
R61594:61595 sf.Smallstep <> st var
prf 61650:61673 <> stack_step_deterministic
R61690:61702 sf.Smallstep <> deterministic def
R61705:61714 sf.Smallstep <> stack_step ind
R61716:61717 sf.Smallstep <> st var
R61737:61749 sf.Smallstep <> deterministic def
def 61837:61851 <> stack_multistep
R61859:61863 sf.Smallstep <> multi ind
R61866:61875 sf.Smallstep <> stack_step ind
R61877:61878 sf.Smallstep <> st var
def 62254:62282 <> compiler_is_correct_statement
prf 62370:62388 <> compiler_is_correct
R62392:62420 sf.Smallstep <> compiler_is_correct_statement prfax
