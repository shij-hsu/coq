DIGEST e53575a800a1fa410bcba3221cc89cfe
Fsf.Sub
R40:43 sf.Maps <> <> lib
R61:65 sf.Types <> <> lib
R83:91 sf.Smallstep <> <> lib
ind 24156:24157 <> ty
constr 24173:24176 <> TTop
constr 24189:24193 <> TBool
constr 24205:24209 <> TBase
constr 24227:24232 <> TArrow
constr 24255:24259 <> TUnit
R24182:24183 sf.Sub <> ty ind
R24198:24199 sf.Sub <> ty ind
R24216:24219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24220:24221 sf.Sub <> ty ind
R24214:24215 sf.Maps <> id ind
R24238:24241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24244:24247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24248:24249 sf.Sub <> ty ind
R24242:24243 sf.Sub <> ty ind
R24236:24237 sf.Sub <> ty ind
R24264:24265 sf.Sub <> ty ind
ind 24280:24281 <> tm
constr 24297:24300 <> tvar
constr 24317:24320 <> tapp
constr 24343:24346 <> tabs
constr 24375:24379 <> ttrue
constr 24390:24395 <> tfalse
constr 24406:24408 <> tif
constr 24437:24441 <> tunit
R24306:24309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24310:24311 sf.Sub <> tm ind
R24304:24305 sf.Maps <> id ind
R24326:24329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24332:24335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24336:24337 sf.Sub <> tm ind
R24330:24331 sf.Sub <> tm ind
R24324:24325 sf.Sub <> tm ind
R24352:24355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24358:24361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24364:24367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24368:24369 sf.Sub <> tm ind
R24362:24363 sf.Sub <> tm ind
R24356:24357 sf.Sub <> ty ind
R24350:24351 sf.Maps <> id ind
R24383:24384 sf.Sub <> tm ind
R24399:24400 sf.Sub <> tm ind
R24414:24417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24420:24423 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24426:24429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24430:24431 sf.Sub <> tm ind
R24424:24425 sf.Sub <> tm ind
R24418:24419 sf.Sub <> tm ind
R24412:24413 sf.Sub <> tm ind
R24445:24446 sf.Sub <> tm ind
def 24647:24651 <> subst
R24656:24657 sf.Maps <> id ind
R24663:24664 sf.Sub <> tm ind
R24671:24672 sf.Sub <> tm ind
R24677:24678 sf.Sub <> tm ind
R24691:24691 sf.Sub <> t var
R24702:24705 sf.Sub <> tvar constr
R24721:24726 sf.Maps <> beq_id def
R24728:24728 sf.Sub <> x var
R24744:24744 sf.Sub <> t var
R24737:24737 sf.Sub <> s var
R24750:24753 sf.Sub <> tabs constr
R24771:24774 sf.Sub <> tabs constr
R24784:24789 sf.Maps <> beq_id def
R24791:24791 sf.Sub <> x var
R24809:24813 sf.Sub <> subst def
R24817:24817 sf.Sub <> s var
R24815:24815 sf.Sub <> x var
R24828:24831 sf.Sub <> tapp constr
R24848:24851 sf.Sub <> tapp constr
R24869:24873 sf.Sub <> subst def
R24877:24877 sf.Sub <> s var
R24875:24875 sf.Sub <> x var
R24854:24858 sf.Sub <> subst def
R24862:24862 sf.Sub <> s var
R24860:24860 sf.Sub <> x var
R24887:24891 sf.Sub <> ttrue constr
R24902:24906 sf.Sub <> ttrue constr
R24912:24917 sf.Sub <> tfalse constr
R24928:24933 sf.Sub <> tfalse constr
R24939:24941 sf.Sub <> tif constr
R24961:24963 sf.Sub <> tif constr
R24996:25000 sf.Sub <> subst def
R25004:25004 sf.Sub <> s var
R25002:25002 sf.Sub <> x var
R24981:24985 sf.Sub <> subst def
R24989:24989 sf.Sub <> s var
R24987:24987 sf.Sub <> x var
R24966:24970 sf.Sub <> subst def
R24974:24974 sf.Sub <> s var
R24972:24972 sf.Sub <> x var
R25014:25018 sf.Sub <> tunit constr
R25023:25027 sf.Sub <> tunit constr
R25071:25075 sf.Sub <> subst def
not 25046:25046 <> ::'['_x_':='_x_']'_x
ind 25290:25294 <> value
constr 25316:25320 <> v_abs
constr 25367:25372 <> v_true
constr 25398:25404 <> v_false
constr 25431:25436 <> v_unit
R25300:25303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25298:25299 sf.Sub <> tm ind
R25344:25348 sf.Sub <> value ind
R25351:25354 sf.Sub <> tabs constr
R25360:25360 sf.Sub <> t var
R25358:25358 sf.Sub <> T var
R25356:25356 sf.Sub <> x var
R25382:25386 sf.Sub <> value ind
R25388:25392 sf.Sub <> ttrue constr
R25414:25418 sf.Sub <> value ind
R25420:25425 sf.Sub <> tfalse constr
R25446:25450 sf.Sub <> value ind
R25452:25456 sf.Sub <> tunit constr
R25479:25483 sf.Sub <> value ind
ind 25545:25548 <> step
constr 25576:25584 <> ST_AppAbs
constr 25681:25687 <> ST_App1
constr 25776:25782 <> ST_App2
constr 25893:25901 <> ST_IfTrue
constr 25954:25963 <> ST_IfFalse
constr 26017:26021 <> ST_If
R25554:25557 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25560:25563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25558:25559 sf.Sub <> tm ind
R25552:25553 sf.Sub <> tm ind
R26131:26134 sf.Sub <> step ind
R25624:25636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25637:25637 sf.Sub <> ::x_'==>'_x not
R25660:25665 sf.Sub <> ::x_'==>'_x not
R25638:25641 sf.Sub <> tapp constr
R25658:25659 sf.Sub <> v2 var
R25644:25647 sf.Sub <> tabs constr
R25653:25655 sf.Sub <> t12 var
R25651:25651 sf.Sub <> T var
R25649:25649 sf.Sub <> x var
R25666:25666 sf.Sub <> ::'['_x_':='_x_']'_x not
R25668:25669 sf.Sub <> ::'['_x_':='_x_']'_x not
R25672:25672 sf.Sub <> ::'['_x_':='_x_']'_x not
R25667:25667 sf.Sub <> x var
R25670:25671 sf.Sub <> v2 var
R25673:25675 sf.Sub <> t12 var
R25616:25620 sf.Sub <> value ind
R25622:25623 sf.Sub <> v2 var
R25728:25740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25741:25741 sf.Sub <> ::x_'==>'_x not
R25752:25758 sf.Sub <> ::x_'==>'_x not
R25770:25770 sf.Sub <> ::x_'==>'_x not
R25742:25745 sf.Sub <> tapp constr
R25750:25751 sf.Sub <> t2 var
R25747:25748 sf.Sub <> t1 var
R25759:25762 sf.Sub <> tapp constr
R25768:25769 sf.Sub <> t2 var
R25764:25766 sf.Sub <> t1' var
R25720:25724 sf.Sub <> ::x_'==>'_x not
R25718:25719 sf.Sub <> t1 var
R25725:25727 sf.Sub <> t1' var
R25821:25833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25844:25856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25857:25857 sf.Sub <> ::x_'==>'_x not
R25868:25874 sf.Sub <> ::x_'==>'_x not
R25887:25887 sf.Sub <> ::x_'==>'_x not
R25858:25861 sf.Sub <> tapp constr
R25866:25867 sf.Sub <> t2 var
R25863:25864 sf.Sub <> v1 var
R25875:25878 sf.Sub <> tapp constr
R25884:25886 sf.Sub <> t2' var
R25880:25881 sf.Sub <> v1 var
R25836:25840 sf.Sub <> ::x_'==>'_x not
R25834:25835 sf.Sub <> t2 var
R25841:25843 sf.Sub <> t2' var
R25813:25817 sf.Sub <> value ind
R25819:25820 sf.Sub <> v1 var
R25925:25925 sf.Sub <> ::x_'==>'_x not
R25941:25946 sf.Sub <> ::x_'==>'_x not
R25926:25928 sf.Sub <> tif constr
R25939:25940 sf.Sub <> t2 var
R25936:25937 sf.Sub <> t1 var
R25930:25934 sf.Sub <> ttrue constr
R25947:25948 sf.Sub <> t1 var
R25987:25987 sf.Sub <> ::x_'==>'_x not
R26004:26009 sf.Sub <> ::x_'==>'_x not
R25988:25990 sf.Sub <> tif constr
R26002:26003 sf.Sub <> t2 var
R25999:26000 sf.Sub <> t1 var
R25992:25997 sf.Sub <> tfalse constr
R26010:26011 sf.Sub <> t2 var
R26062:26071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26072:26072 sf.Sub <> ::x_'==>'_x not
R26085:26091 sf.Sub <> ::x_'==>'_x not
R26105:26105 sf.Sub <> ::x_'==>'_x not
R26073:26075 sf.Sub <> tif constr
R26083:26084 sf.Sub <> t3 var
R26080:26081 sf.Sub <> t2 var
R26077:26078 sf.Sub <> t1 var
R26092:26094 sf.Sub <> tif constr
R26103:26104 sf.Sub <> t3 var
R26100:26101 sf.Sub <> t2 var
R26096:26098 sf.Sub <> t1' var
R26054:26058 sf.Sub <> ::x_'==>'_x not
R26052:26053 sf.Sub <> t1 var
R26059:26061 sf.Sub <> t1' var
R26131:26134 sf.Sub <> step ind
not 26113:26113 <> ::x_'==>'_x
R26163:26166 sf.Sub <> step ind
ind 26570:26576 <> subtype
constr 26604:26609 <> S_Refl
constr 26640:26646 <> S_Trans
constr 26713:26717 <> S_Top
constr 26751:26757 <> S_Arrow
R26582:26585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26588:26591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26586:26587 sf.Sub <> ty ind
R26580:26581 sf.Sub <> ty ind
R26920:26926 sf.Sub <> subtype ind
R26630:26633 sf.Sub <> ::x_'<:'_x not
R26629:26629 sf.Sub <> T var
R26634:26634 sf.Sub <> T var
R26676:26685 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26692:26701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26703:26706 sf.Sub <> ::x_'<:'_x not
R26702:26702 sf.Sub <> S var
R26707:26707 sf.Sub <> T var
R26687:26690 sf.Sub <> ::x_'<:'_x not
R26686:26686 sf.Sub <> U var
R26691:26691 sf.Sub <> T var
R26671:26674 sf.Sub <> ::x_'<:'_x not
R26670:26670 sf.Sub <> S var
R26675:26675 sf.Sub <> U var
R26738:26741 sf.Sub <> ::x_'<:'_x not
R26737:26737 sf.Sub <> S var
R26742:26745 sf.Sub <> TTop constr
R26795:26804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26813:26828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26829:26829 sf.Sub <> ::x_'<:'_x not
R26842:26847 sf.Sub <> ::x_'<:'_x not
R26860:26860 sf.Sub <> ::x_'<:'_x not
R26830:26835 sf.Sub <> TArrow constr
R26840:26841 sf.Sub <> S2 var
R26837:26838 sf.Sub <> S1 var
R26848:26853 sf.Sub <> TArrow constr
R26858:26859 sf.Sub <> T2 var
R26855:26856 sf.Sub <> T1 var
R26807:26810 sf.Sub <> ::x_'<:'_x not
R26805:26806 sf.Sub <> S2 var
R26811:26812 sf.Sub <> T2 var
R26789:26792 sf.Sub <> ::x_'<:'_x not
R26787:26788 sf.Sub <> T1 var
R26793:26794 sf.Sub <> S1 var
R26920:26926 sf.Sub <> subtype ind
not 26905:26905 <> ::x_'<:'_x
R27135:27141 sf.Sub <> subtype ind
mod 27152:27159 <> Examples
syndef 27172:27172 Examples x
R27178:27179 sf.Maps <> Id constr
syndef 27194:27194 Examples y
R27200:27201 sf.Maps <> Id constr
syndef 27216:27216 Examples z
R27222:27223 sf.Maps <> Id constr
syndef 27239:27239 Examples A
R27245:27249 sf.Sub Examples TBase constr
R27252:27253 sf.Maps <> Id constr
syndef 27269:27269 Examples B
R27275:27279 sf.Sub Examples TBase constr
R27282:27283 sf.Maps <> Id constr
syndef 27299:27299 Examples C
R27305:27309 sf.Sub Examples TBase constr
R27312:27313 sf.Maps <> Id constr
syndef 27330:27335 Examples String
R27341:27345 sf.Sub Examples TBase constr
R27348:27349 sf.Maps <> Id constr
syndef 27365:27369 Examples Float
R27375:27379 sf.Sub Examples TBase constr
R27382:27383 sf.Maps <> Id constr
syndef 27400:27406 Examples Integer
R27412:27416 sf.Sub Examples TBase constr
R27419:27420 sf.Maps <> Id constr
def 27437:27455 Examples subtyping_example_0
R27461:27461 sf.Sub <> ::x_'<:'_x not
R27476:27481 sf.Sub <> ::x_'<:'_x not
R27495:27495 sf.Sub <> ::x_'<:'_x not
R27462:27467 sf.Sub Examples TArrow constr
R27471:27475 sf.Sub Examples TBool constr
R27469:27469 sf.Sub Examples C syndef
R27482:27487 sf.Sub Examples TArrow constr
R27491:27494 sf.Sub Examples TTop constr
R27489:27489 sf.Sub Examples C syndef
def 28174:28179 Examples Person
R28183:28184 sf.Sub Examples ty ind
R28191:28196 sf.Sub Examples TArrow constr
R28205:28208 sf.Sub Examples TTop constr
R28198:28203 sf.Sub Examples String syndef
def 28279:28285 Examples Student
R28289:28290 sf.Sub Examples ty ind
R28297:28302 sf.Sub Examples TArrow constr
R28311:28315 sf.Sub Examples Float syndef
R28304:28309 sf.Sub Examples String syndef
def 28386:28393 Examples Employee
R28397:28398 sf.Sub Examples ty ind
R28405:28410 sf.Sub Examples TArrow constr
R28419:28425 sf.Sub Examples Integer syndef
R28412:28417 sf.Sub Examples String syndef
def 28573:28590 Examples sub_student_person
R28603:28606 sf.Sub <> ::x_'<:'_x not
R28596:28602 sf.Sub Examples Student def
R28607:28612 sf.Sub Examples Person def
R28629:28634 sf.Sub Examples Person def
R28637:28643 sf.Sub Examples Student def
R28655:28661 sf.Sub Examples S_Arrow constr
R28655:28661 sf.Sub Examples S_Arrow constr
R28670:28675 sf.Sub Examples S_Refl constr
R28670:28675 sf.Sub Examples S_Refl constr
R28684:28688 sf.Sub Examples S_Top constr
R28684:28688 sf.Sub Examples S_Top constr
def 28724:28742 Examples sub_employee_person
R28756:28759 sf.Sub <> ::x_'<:'_x not
R28748:28755 sf.Sub Examples Employee def
R28760:28765 sf.Sub Examples Person def
R28782:28789 sf.Sub Examples Employee def
R28792:28797 sf.Sub Examples Person def
R28806:28812 sf.Sub Examples S_Arrow constr
R28806:28812 sf.Sub Examples S_Arrow constr
R28824:28829 sf.Sub Examples S_Refl constr
R28824:28829 sf.Sub Examples S_Refl constr
R28838:28842 sf.Sub Examples S_Top constr
R28838:28842 sf.Sub Examples S_Top constr
def 29119:29137 Examples subtyping_example_1
R29143:29143 sf.Sub <> ::x_'<:'_x not
R29163:29168 sf.Sub <> ::x_'<:'_x not
R29195:29195 sf.Sub <> ::x_'<:'_x not
R29144:29149 sf.Sub Examples TArrow constr
R29156:29162 sf.Sub Examples Student def
R29151:29154 sf.Sub Examples TTop constr
R29169:29174 sf.Sub Examples TArrow constr
R29189:29194 sf.Sub Examples Person def
R29177:29182 sf.Sub Examples TArrow constr
R29186:29186 sf.Sub Examples C syndef
R29184:29184 sf.Sub Examples C syndef
R29263:29269 sf.Sub Examples S_Arrow constr
R29263:29269 sf.Sub Examples S_Arrow constr
R29279:29285 sf.Sub Examples S_Trans constr
R29279:29285 sf.Sub Examples S_Trans constr
R29294:29298 sf.Sub Examples S_Top constr
R29294:29298 sf.Sub Examples S_Top constr
R29307:29311 sf.Sub Examples S_Top constr
R29307:29311 sf.Sub Examples S_Top constr
R29322:29339 sf.Sub Examples sub_student_person def
R29322:29339 sf.Sub Examples sub_student_person def
def 29450:29468 Examples subtyping_example_2
R29474:29474 sf.Sub <> ::x_'<:'_x not
R29493:29498 sf.Sub <> ::x_'<:'_x not
R29517:29517 sf.Sub <> ::x_'<:'_x not
R29475:29480 sf.Sub Examples TArrow constr
R29487:29492 sf.Sub Examples Person def
R29482:29485 sf.Sub Examples TTop constr
R29499:29504 sf.Sub Examples TArrow constr
R29513:29516 sf.Sub Examples TTop constr
R29506:29511 sf.Sub Examples Person def
R29581:29587 sf.Sub Examples S_Arrow constr
R29581:29587 sf.Sub Examples S_Arrow constr
R29596:29600 sf.Sub Examples S_Top constr
R29596:29600 sf.Sub Examples S_Top constr
R29609:29613 sf.Sub Examples S_Top constr
R29609:29613 sf.Sub Examples S_Top constr
R29658:29665 sf.Sub Examples <> mod
def 29874:29880 <> context
R29885:29895 sf.Maps <> partial_map def
R29897:29898 sf.Sub <> ty ind
ind 29969:29976 <> has_type
constr 30038:30042 <> T_Var
constr 30124:30128 <> T_Abs
constr 30262:30266 <> T_App
constr 30403:30408 <> T_True
constr 30462:30468 <> T_False
constr 30523:30526 <> T_If
constr 30684:30689 <> T_Unit
constr 30774:30778 <> T_Sub
R29987:29990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29993:29996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29999:30002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29997:29998 sf.Sub <> ty ind
R29991:29992 sf.Sub <> tm ind
R29980:29986 sf.Sub <> context def
R30901:30908 sf.Sub <> has_type ind
R30086:30095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30101:30105 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30112:30117 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30096:30100 sf.Sub <> Gamma var
R30106:30109 sf.Sub <> tvar constr
R30111:30111 sf.Sub <> x var
R30118:30118 sf.Sub <> T var
R30077:30079 Coq.Init.Logic <> :type_scope:x_'='_x not
R30070:30074 sf.Sub <> Gamma var
R30076:30076 sf.Sub <> x var
R30080:30083 Coq.Init.Datatypes <> Some constr
R30085:30085 sf.Sub <> T var
R30201:30210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30216:30220 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30235:30241 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30256:30256 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30211:30215 sf.Sub <> Gamma var
R30221:30224 sf.Sub <> tabs constr
R30232:30234 sf.Sub <> t12 var
R30228:30230 sf.Sub <> T11 var
R30226:30226 sf.Sub <> x var
R30242:30247 sf.Sub <> TArrow constr
R30253:30255 sf.Sub <> T12 var
R30249:30251 sf.Sub <> T11 var
R30166:30166 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30185:30189 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30193:30197 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30167:30172 sf.Maps <> update def
R30182:30184 sf.Sub <> T11 var
R30180:30180 sf.Sub <> x var
R30174:30178 sf.Sub <> Gamma var
R30190:30192 sf.Sub <> t12 var
R30198:30200 sf.Sub <> T12 var
R30332:30341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30360:30369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30375:30379 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30390:30395 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30370:30374 sf.Sub <> Gamma var
R30380:30383 sf.Sub <> tapp constr
R30388:30389 sf.Sub <> t2 var
R30385:30386 sf.Sub <> t1 var
R30396:30397 sf.Sub <> T2 var
R30347:30350 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30353:30357 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30342:30346 sf.Sub <> Gamma var
R30351:30352 sf.Sub <> t2 var
R30358:30359 sf.Sub <> T1 var
R30307:30310 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30313:30318 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30331:30331 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30302:30306 sf.Sub <> Gamma var
R30311:30312 sf.Sub <> t1 var
R30319:30324 sf.Sub <> TArrow constr
R30329:30330 sf.Sub <> T2 var
R30326:30327 sf.Sub <> T1 var
R30438:30441 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30447:30451 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30433:30437 sf.Sub <> Gamma var
R30442:30446 sf.Sub <> ttrue constr
R30452:30456 sf.Sub <> TBool constr
R30498:30501 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30508:30512 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30493:30497 sf.Sub <> Gamma var
R30502:30507 sf.Sub <> tfalse constr
R30513:30517 sf.Sub <> TBool constr
R30583:30593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30611:30621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30639:30649 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30655:30659 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30672:30677 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30650:30654 sf.Sub <> Gamma var
R30660:30662 sf.Sub <> tif constr
R30670:30671 sf.Sub <> t3 var
R30667:30668 sf.Sub <> t2 var
R30664:30665 sf.Sub <> t1 var
R30678:30678 sf.Sub <> T var
R30627:30630 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30633:30637 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30622:30626 sf.Sub <> Gamma var
R30631:30632 sf.Sub <> t3 var
R30638:30638 sf.Sub <> T var
R30599:30602 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30605:30609 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30594:30598 sf.Sub <> Gamma var
R30603:30604 sf.Sub <> t2 var
R30610:30610 sf.Sub <> T var
R30567:30570 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30573:30577 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30562:30566 sf.Sub <> Gamma var
R30571:30572 sf.Sub <> t1 var
R30578:30582 sf.Sub <> TBool constr
R30718:30721 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30727:30731 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30713:30717 sf.Sub <> Gamma var
R30722:30726 sf.Sub <> tunit constr
R30732:30736 sf.Sub <> TUnit constr
R30824:30833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30840:30849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30855:30858 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30860:30864 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30850:30854 sf.Sub <> Gamma var
R30859:30859 sf.Sub <> t var
R30865:30865 sf.Sub <> T var
R30835:30838 sf.Sub <> ::x_'<:'_x not
R30834:30834 sf.Sub <> S var
R30839:30839 sf.Sub <> T var
R30813:30816 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30818:30822 sf.Sub <> ::x_'|-'_x_'\in'_x not
R30808:30812 sf.Sub <> Gamma var
R30817:30817 sf.Sub <> t var
R30823:30823 sf.Sub <> S var
R30901:30908 sf.Sub <> has_type ind
not 30874:30874 <> ::x_'|-'_x_'\in'_x
R30941:30948 sf.Sub <> has_type ind
R31097:31104 sf.Sub <> has_type ind
R31109:31112 sf.Sub <> tapp constr
R31134:31138 sf.Sub <> T_App constr
R31163:31165 Coq.Init.Logic <> :type_scope:x_'='_x not
mod 31202:31210 <> Examples2
R31950:31958 sf.Sub Examples2 <> mod
prf 33364:33381 <> sub_inversion_Bool
R33410:33420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33422:33424 Coq.Init.Logic <> :type_scope:x_'='_x not
R33421:33421 sf.Sub <> U var
R33425:33429 sf.Sub <> TBool constr
R33401:33404 sf.Sub <> ::x_'<:'_x not
R33400:33400 sf.Sub <> U var
R33405:33409 sf.Sub <> TBool constr
R33475:33479 sf.Sub <> TBool constr
R33475:33479 sf.Sub <> TBool constr
R33536:33543 Coq.Init.Logic <> trans_eq syndef
R33536:33543 Coq.Init.Logic <> trans_eq syndef
prf 33748:33766 <> sub_inversion_arrow
R33810:33818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33819:33825 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33828:33829 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33830:33836 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33839:33847 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33866:33869 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33849:33852 Coq.Init.Logic <> :type_scope:x_'='_x not
R33865:33865 Coq.Init.Logic <> :type_scope:x_'='_x not
R33848:33848 sf.Sub <> U var
R33853:33858 sf.Sub <> TArrow constr
R33863:33864 sf.Sub <> U2 var
R33860:33861 sf.Sub <> U1 var
R33870:33870 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33879:33884 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33893:33893 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33873:33876 sf.Sub <> ::x_'<:'_x not
R33871:33872 sf.Sub <> V1 var
R33877:33878 sf.Sub <> U1 var
R33887:33890 sf.Sub <> ::x_'<:'_x not
R33885:33886 sf.Sub <> U2 var
R33891:33892 sf.Sub <> V2 var
R33792:33796 sf.Sub <> ::x_'<:'_x not
R33809:33809 sf.Sub <> ::x_'<:'_x not
R33791:33791 sf.Sub <> U var
R33797:33802 sf.Sub <> TArrow constr
R33807:33808 sf.Sub <> V2 var
R33804:33805 sf.Sub <> V1 var
R33947:33952 sf.Sub <> TArrow constr
R33947:33952 sf.Sub <> TArrow constr
R34094:34099 sf.Sub <> S_Refl constr
R34094:34099 sf.Sub <> S_Refl constr
R34108:34113 sf.Sub <> S_Refl constr
R34108:34113 sf.Sub <> S_Refl constr
R34307:34313 sf.Sub <> S_Trans constr
R34307:34313 sf.Sub <> S_Trans constr
R34353:34359 sf.Sub <> S_Trans constr
R34353:34359 sf.Sub <> S_Trans constr
prf 36072:36101 <> canonical_forms_of_arrow_types
R36158:36163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36171:36176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36177:36183 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36185:36186 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36187:36193 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36196:36197 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36198:36204 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36207:36213 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36215:36217 Coq.Init.Logic <> :type_scope:x_'='_x not
R36214:36214 sf.Sub <> s var
R36218:36221 sf.Sub <> tabs constr
R36228:36229 sf.Sub <> s2 var
R36225:36226 sf.Sub <> S1 var
R36223:36223 sf.Sub <> x var
R36164:36168 sf.Sub <> value ind
R36170:36170 sf.Sub <> s var
R36134:36137 sf.Sub <> ::x_'|-'_x_'\in'_x not
R36139:36144 sf.Sub <> ::x_'|-'_x_'\in'_x not
R36157:36157 sf.Sub <> ::x_'|-'_x_'\in'_x not
R36129:36133 sf.Sub <> Gamma var
R36138:36138 sf.Sub <> s var
R36145:36150 sf.Sub <> TArrow constr
R36155:36156 sf.Sub <> T2 var
R36152:36153 sf.Sub <> T1 var
R36271:36276 sf.Sub <> TArrow constr
R36271:36276 sf.Sub <> TArrow constr
R36560:36578 sf.Sub <> sub_inversion_arrow thm
prf 36802:36824 <> canonical_forms_of_Bool
R36866:36871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36879:36885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36909:36909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36895:36898 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R36887:36889 Coq.Init.Logic <> :type_scope:x_'='_x not
R36886:36886 sf.Sub <> s var
R36890:36894 sf.Sub <> ttrue constr
R36900:36902 Coq.Init.Logic <> :type_scope:x_'='_x not
R36899:36899 sf.Sub <> s var
R36903:36908 sf.Sub <> tfalse constr
R36872:36876 sf.Sub <> value ind
R36878:36878 sf.Sub <> s var
R36851:36854 sf.Sub <> ::x_'|-'_x_'\in'_x not
R36856:36860 sf.Sub <> ::x_'|-'_x_'\in'_x not
R36846:36850 sf.Sub <> Gamma var
R36855:36855 sf.Sub <> s var
R36861:36865 sf.Sub <> TBool constr
R36966:36970 sf.Sub <> TBool constr
R36966:36970 sf.Sub <> TBool constr
R37051:37068 sf.Sub <> sub_inversion_Bool thm
R37051:37068 sf.Sub <> sub_inversion_Bool thm
prf 39641:39648 <> progress
R39685:39693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39701:39704 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R39694:39698 sf.Sub <> value ind
R39700:39700 sf.Sub <> t var
R39705:39711 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39714:39715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39717:39721 sf.Sub <> ::x_'==>'_x not
R39716:39716 sf.Sub <> t var
R39722:39723 sf.Sub <> t' var
R39674:39677 sf.Sub <> ::x_'|-'_x_'\in'_x not
R39679:39683 sf.Sub <> ::x_'|-'_x_'\in'_x not
R39669:39673 sf.Maps <> empty def
R39678:39678 sf.Sub <> t var
R39684:39684 sf.Sub <> T var
R39772:39776 sf.Maps <> empty def
R39772:39776 sf.Maps <> empty def
R40045:40074 sf.Sub <> canonical_forms_of_arrow_types thm
R40076:40080 sf.Maps <> empty def
R40045:40074 sf.Sub <> canonical_forms_of_arrow_types thm
R40076:40080 sf.Maps <> empty def
R40152:40152 sf.Sub <> ::'['_x_':='_x_']'_x not
R40154:40155 sf.Sub <> ::'['_x_':='_x_']'_x not
R40158:40158 sf.Sub <> ::'['_x_':='_x_']'_x not
R40152:40152 sf.Sub <> ::'['_x_':='_x_']'_x not
R40154:40155 sf.Sub <> ::'['_x_':='_x_']'_x not
R40158:40158 sf.Sub <> ::'['_x_':='_x_']'_x not
R40234:40237 sf.Sub <> tapp constr
R40234:40237 sf.Sub <> tapp constr
R40312:40315 sf.Sub <> tapp constr
R40312:40315 sf.Sub <> tapp constr
R40431:40434 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R40423:40425 Coq.Init.Logic <> :type_scope:x_'='_x not
R40426:40430 sf.Sub <> ttrue constr
R40437:40439 Coq.Init.Logic <> :type_scope:x_'='_x not
R40440:40445 sf.Sub <> tfalse constr
R40467:40489 sf.Sub <> canonical_forms_of_Bool thm
R40431:40434 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R40423:40425 Coq.Init.Logic <> :type_scope:x_'='_x not
R40426:40430 sf.Sub <> ttrue constr
R40437:40439 Coq.Init.Logic <> :type_scope:x_'='_x not
R40440:40445 sf.Sub <> tfalse constr
R40467:40489 sf.Sub <> canonical_forms_of_Bool thm
prf 42624:42643 <> typing_inversion_abs
R42705:42714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42795:42795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42715:42721 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42724:42725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42745:42762 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R42726:42726 sf.Sub <> ::x_'<:'_x not
R42739:42743 sf.Sub <> ::x_'<:'_x not
R42727:42732 sf.Sub <> TArrow constr
R42737:42738 sf.Sub <> S2 var
R42734:42735 sf.Sub <> S1 var
R42744:42744 sf.Sub <> T var
R42763:42763 sf.Sub <> ::x_'|-'_x_'\in'_x not
R42781:42785 sf.Sub <> ::x_'|-'_x_'\in'_x not
R42788:42792 sf.Sub <> ::x_'|-'_x_'\in'_x not
R42764:42769 sf.Maps <> update def
R42779:42780 sf.Sub <> S1 var
R42777:42777 sf.Sub <> x var
R42771:42775 sf.Sub <> Gamma var
R42786:42787 sf.Sub <> t2 var
R42793:42794 sf.Sub <> S2 var
R42681:42685 sf.Sub <> ::x_'|-'_x_'\in'_x not
R42698:42703 sf.Sub <> ::x_'|-'_x_'\in'_x not
R42676:42680 sf.Sub <> Gamma var
R42686:42689 sf.Sub <> tabs constr
R42696:42697 sf.Sub <> t2 var
R42693:42694 sf.Sub <> S1 var
R42691:42691 sf.Sub <> x var
R42704:42704 sf.Sub <> T var
R42856:42859 sf.Sub <> tabs constr
R42856:42859 sf.Sub <> tabs constr
prf 43078:43097 <> typing_inversion_var
R43144:43149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43150:43156 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43158:43163 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43180:43183 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43171:43173 Coq.Init.Logic <> :type_scope:x_'='_x not
R43164:43168 sf.Sub <> Gamma var
R43170:43170 sf.Sub <> x var
R43174:43177 Coq.Init.Datatypes <> Some constr
R43179:43179 sf.Sub <> S var
R43185:43188 sf.Sub <> ::x_'<:'_x not
R43184:43184 sf.Sub <> S var
R43189:43189 sf.Sub <> T var
R43126:43130 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43137:43142 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43121:43125 sf.Sub <> Gamma var
R43131:43134 sf.Sub <> tvar constr
R43136:43136 sf.Sub <> x var
R43143:43143 sf.Sub <> T var
R43246:43249 sf.Sub <> tvar constr
R43246:43249 sf.Sub <> tvar constr
prf 43435:43454 <> typing_inversion_app
R43511:43516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43517:43523 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43526:43531 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43562:43569 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43537:43540 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43543:43548 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43561:43561 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43532:43536 sf.Sub <> Gamma var
R43541:43542 sf.Sub <> t1 var
R43549:43554 sf.Sub <> TArrow constr
R43559:43560 sf.Sub <> T2 var
R43556:43557 sf.Sub <> T1 var
R43575:43578 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43581:43585 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43570:43574 sf.Sub <> Gamma var
R43579:43580 sf.Sub <> t2 var
R43586:43587 sf.Sub <> T1 var
R43488:43492 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43503:43508 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43483:43487 sf.Sub <> Gamma var
R43493:43496 sf.Sub <> tapp constr
R43501:43502 sf.Sub <> t2 var
R43498:43499 sf.Sub <> t1 var
R43509:43510 sf.Sub <> T2 var
R43649:43652 sf.Sub <> tapp constr
R43649:43652 sf.Sub <> tapp constr
prf 43843:43863 <> typing_inversion_true
R43905:43910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43916:43919 sf.Sub <> ::x_'<:'_x not
R43911:43915 sf.Sub <> TBool constr
R43920:43920 sf.Sub <> T var
R43890:43893 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43899:43903 sf.Sub <> ::x_'|-'_x_'\in'_x not
R43885:43889 sf.Sub <> Gamma var
R43894:43898 sf.Sub <> ttrue constr
R43904:43904 sf.Sub <> T var
R43973:43977 sf.Sub <> ttrue constr
R43973:43977 sf.Sub <> ttrue constr
prf 44054:44075 <> typing_inversion_false
R44118:44123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44129:44132 sf.Sub <> ::x_'<:'_x not
R44124:44128 sf.Sub <> TBool constr
R44133:44133 sf.Sub <> T var
R44102:44105 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44112:44116 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44097:44101 sf.Sub <> Gamma var
R44106:44111 sf.Sub <> tfalse constr
R44117:44117 sf.Sub <> T var
R44186:44191 sf.Sub <> tfalse constr
R44186:44191 sf.Sub <> tfalse constr
prf 44268:44286 <> typing_inversion_if
R44346:44351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44373:44378 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44357:44360 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44363:44367 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44352:44356 sf.Sub <> Gamma var
R44361:44362 sf.Sub <> t1 var
R44368:44372 sf.Sub <> TBool constr
R44396:44401 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44384:44387 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44390:44394 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44379:44383 sf.Sub <> Gamma var
R44388:44389 sf.Sub <> t2 var
R44395:44395 sf.Sub <> T var
R44407:44410 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44413:44417 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44402:44406 sf.Sub <> Gamma var
R44411:44412 sf.Sub <> t3 var
R44418:44418 sf.Sub <> T var
R44322:44326 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44339:44344 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44317:44321 sf.Sub <> Gamma var
R44327:44329 sf.Sub <> tif constr
R44337:44338 sf.Sub <> t3 var
R44334:44335 sf.Sub <> t2 var
R44331:44332 sf.Sub <> t1 var
R44345:44345 sf.Sub <> T var
R44482:44484 sf.Sub <> tif constr
R44482:44484 sf.Sub <> tif constr
prf 44671:44691 <> typing_inversion_unit
R44733:44740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44746:44749 sf.Sub <> ::x_'<:'_x not
R44741:44745 sf.Sub <> TUnit constr
R44750:44750 sf.Sub <> T var
R44718:44721 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44727:44731 sf.Sub <> ::x_'|-'_x_'\in'_x not
R44713:44717 sf.Sub <> Gamma var
R44722:44726 sf.Sub <> tunit constr
R44732:44732 sf.Sub <> T var
R44803:44807 sf.Sub <> tunit constr
R44803:44807 sf.Sub <> tunit constr
prf 45075:45083 <> abs_arrow
R45153:45161 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45170:45175 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45164:45167 sf.Sub <> ::x_'<:'_x not
R45162:45163 sf.Sub <> T1 var
R45168:45169 sf.Sub <> S1 var
R45176:45176 sf.Sub <> ::x_'|-'_x_'\in'_x not
R45194:45198 sf.Sub <> ::x_'|-'_x_'\in'_x not
R45201:45205 sf.Sub <> ::x_'|-'_x_'\in'_x not
R45177:45182 sf.Maps <> update def
R45192:45193 sf.Sub <> S1 var
R45190:45190 sf.Sub <> x var
R45184:45188 sf.Maps <> empty def
R45199:45200 sf.Sub <> s2 var
R45206:45207 sf.Sub <> T2 var
R45116:45120 sf.Sub <> ::x_'|-'_x_'\in'_x not
R45133:45139 sf.Sub <> ::x_'|-'_x_'\in'_x not
R45152:45152 sf.Sub <> ::x_'|-'_x_'\in'_x not
R45111:45115 sf.Maps <> empty def
R45121:45124 sf.Sub <> tabs constr
R45131:45132 sf.Sub <> s2 var
R45128:45129 sf.Sub <> S1 var
R45126:45126 sf.Sub <> x var
R45140:45145 sf.Sub <> TArrow constr
R45150:45151 sf.Sub <> T2 var
R45147:45148 sf.Sub <> T1 var
R45264:45283 sf.Sub <> typing_inversion_abs thm
R45264:45283 sf.Sub <> typing_inversion_abs thm
R45338:45356 sf.Sub <> sub_inversion_arrow thm
R45338:45356 sf.Sub <> sub_inversion_arrow thm
ind 45650:45664 <> appears_free_in
constr 45692:45698 <> afi_var
constr 45749:45756 <> afi_app1
constr 45841:45848 <> afi_app2
constr 45933:45939 <> afi_abs
constr 46062:46068 <> afi_if1
constr 46164:46170 <> afi_if2
constr 46266:46272 <> afi_if3
R45670:45673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45676:45679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45674:45675 sf.Sub <> tm ind
R45668:45669 sf.Maps <> id ind
R45718:45732 sf.Sub <> appears_free_in ind
R45737:45740 sf.Sub <> tvar constr
R45742:45742 sf.Sub <> x var
R45734:45734 sf.Sub <> x var
R45802:45805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45806:45820 sf.Sub <> appears_free_in ind
R45825:45828 sf.Sub <> tapp constr
R45833:45834 sf.Sub <> t2 var
R45830:45831 sf.Sub <> t1 var
R45822:45822 sf.Sub <> x var
R45782:45796 sf.Sub <> appears_free_in ind
R45800:45801 sf.Sub <> t1 var
R45798:45798 sf.Sub <> x var
R45894:45897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45898:45912 sf.Sub <> appears_free_in ind
R45917:45920 sf.Sub <> tapp constr
R45925:45926 sf.Sub <> t2 var
R45922:45923 sf.Sub <> t1 var
R45914:45914 sf.Sub <> x var
R45874:45888 sf.Sub <> appears_free_in ind
R45892:45893 sf.Sub <> t2 var
R45890:45890 sf.Sub <> x var
R45977:45989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46011:46022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46023:46037 sf.Sub <> appears_free_in ind
R46042:46045 sf.Sub <> tabs constr
R46053:46055 sf.Sub <> t12 var
R46049:46051 sf.Sub <> T11 var
R46047:46047 sf.Sub <> y var
R46039:46039 sf.Sub <> x var
R45990:46004 sf.Sub <> appears_free_in ind
R46008:46010 sf.Sub <> t12 var
R46006:46006 sf.Sub <> x var
R45972:45975 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R45971:45971 sf.Sub <> y var
R45976:45976 sf.Sub <> x var
R46117:46126 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46127:46141 sf.Sub <> appears_free_in ind
R46146:46148 sf.Sub <> tif constr
R46156:46157 sf.Sub <> t3 var
R46153:46154 sf.Sub <> t2 var
R46150:46151 sf.Sub <> t1 var
R46143:46143 sf.Sub <> x var
R46097:46111 sf.Sub <> appears_free_in ind
R46115:46116 sf.Sub <> t1 var
R46113:46113 sf.Sub <> x var
R46219:46228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46229:46243 sf.Sub <> appears_free_in ind
R46248:46250 sf.Sub <> tif constr
R46258:46259 sf.Sub <> t3 var
R46255:46256 sf.Sub <> t2 var
R46252:46253 sf.Sub <> t1 var
R46245:46245 sf.Sub <> x var
R46199:46213 sf.Sub <> appears_free_in ind
R46217:46218 sf.Sub <> t2 var
R46215:46215 sf.Sub <> x var
R46321:46330 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46331:46345 sf.Sub <> appears_free_in ind
R46350:46352 sf.Sub <> tif constr
R46360:46361 sf.Sub <> t3 var
R46357:46358 sf.Sub <> t2 var
R46354:46355 sf.Sub <> t1 var
R46347:46347 sf.Sub <> x var
R46301:46315 sf.Sub <> appears_free_in ind
R46319:46320 sf.Sub <> t3 var
R46317:46317 sf.Sub <> x var
R46385:46399 sf.Sub <> appears_free_in ind
prf 46409:46426 <> context_invariance
R46476:46485 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46486:46486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46538:46548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46555:46558 sf.Sub <> ::x_'|-'_x_'\in'_x not
R46560:46564 sf.Sub <> ::x_'|-'_x_'\in'_x not
R46549:46554 sf.Sub <> Gamma' var
R46559:46559 sf.Sub <> t var
R46565:46565 sf.Sub <> S var
R46516:46519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46527:46529 Coq.Init.Logic <> :type_scope:x_'='_x not
R46520:46524 sf.Sub <> Gamma var
R46526:46526 sf.Sub <> x var
R46530:46535 sf.Sub <> Gamma' var
R46537:46537 sf.Sub <> x var
R46497:46511 sf.Sub <> appears_free_in ind
R46515:46515 sf.Sub <> t var
R46513:46513 sf.Sub <> x var
R46465:46468 sf.Sub <> ::x_'|-'_x_'\in'_x not
R46470:46474 sf.Sub <> ::x_'|-'_x_'\in'_x not
R46460:46464 sf.Sub <> Gamma var
R46469:46469 sf.Sub <> t var
R46475:46475 sf.Sub <> S var
R46692:46696 sf.Sub <> T_Var constr
R46692:46696 sf.Sub <> T_Var constr
R46746:46750 sf.Sub <> T_Abs constr
R46746:46750 sf.Sub <> T_Abs constr
R46800:46805 sf.Maps <> update def
R46808:46815 sf.Maps <> t_update def
R46828:46834 sf.Maps <> beq_idP thm
R46828:46834 sf.Maps <> beq_idP thm
R46870:46873 sf.Sub <> T_If constr
R46870:46873 sf.Sub <> T_If constr
prf 46890:46904 <> free_in_context
R46950:46956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46973:46979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46980:46986 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46989:46990 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46998:47000 Coq.Init.Logic <> :type_scope:x_'='_x not
R46991:46995 sf.Sub <> Gamma var
R46997:46997 sf.Sub <> x var
R47001:47004 Coq.Init.Datatypes <> Some constr
R47006:47007 sf.Sub <> T' var
R46962:46965 sf.Sub <> ::x_'|-'_x_'\in'_x not
R46967:46971 sf.Sub <> ::x_'|-'_x_'\in'_x not
R46957:46961 sf.Sub <> Gamma var
R46966:46966 sf.Sub <> t var
R46972:46972 sf.Sub <> T var
R46931:46945 sf.Sub <> appears_free_in ind
R46949:46949 sf.Sub <> t var
R46947:46947 sf.Sub <> x var
R47191:47196 sf.Maps <> update def
R47199:47206 sf.Maps <> t_update def
R47232:47247 sf.Maps <> beq_id_false_iff thm
R47232:47247 sf.Maps <> beq_id_false_iff thm
R47232:47247 sf.Maps <> beq_id_false_iff thm
prf 47755:47783 <> substitution_preserves_typing
R47845:47854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47871:47881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47887:47891 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47899:47904 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47882:47886 sf.Sub <> Gamma var
R47892:47892 sf.Sub <> ::'['_x_':='_x_']'_x not
R47894:47895 sf.Sub <> ::'['_x_':='_x_']'_x not
R47897:47897 sf.Sub <> ::'['_x_':='_x_']'_x not
R47893:47893 sf.Sub <> x var
R47896:47896 sf.Sub <> v var
R47898:47898 sf.Sub <> t var
R47905:47905 sf.Sub <> S var
R47860:47863 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47865:47869 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47855:47859 sf.Maps <> empty def
R47864:47864 sf.Sub <> v var
R47870:47870 sf.Sub <> U var
R47816:47816 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47833:47837 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47839:47843 sf.Sub <> ::x_'|-'_x_'\in'_x not
R47817:47822 sf.Maps <> update def
R47832:47832 sf.Sub <> U var
R47830:47830 sf.Sub <> x var
R47824:47828 sf.Sub <> Gamma var
R47838:47838 sf.Sub <> t var
R47844:47844 sf.Sub <> S var
R48098:48117 sf.Sub <> typing_inversion_var thm
R48098:48117 sf.Sub <> typing_inversion_var thm
R48171:48176 sf.Maps <> update def
R48179:48186 sf.Maps <> t_update def
R48211:48217 sf.Maps <> beq_idP thm
R48211:48217 sf.Maps <> beq_idP thm
R48329:48333 sf.Maps <> empty def
R48305:48322 sf.Sub <> context_invariance thm
R48329:48333 sf.Maps <> empty def
R48305:48322 sf.Sub <> context_invariance thm
R48374:48388 sf.Sub <> free_in_context thm
R48396:48400 sf.Maps <> empty def
R48374:48388 sf.Sub <> free_in_context thm
R48396:48400 sf.Maps <> empty def
R48482:48501 sf.Sub <> typing_inversion_app thm
R48482:48501 sf.Sub <> typing_inversion_app thm
R48562:48566 sf.Sub <> T_App constr
R48562:48566 sf.Sub <> T_App constr
R48639:48658 sf.Sub <> typing_inversion_abs thm
R48639:48658 sf.Sub <> typing_inversion_abs thm
R48728:48733 sf.Sub <> TArrow constr
R48716:48720 sf.Sub <> T_Sub constr
R48728:48733 sf.Sub <> TArrow constr
R48716:48720 sf.Sub <> T_Sub constr
R48751:48755 sf.Sub <> T_Abs constr
R48751:48755 sf.Sub <> T_Abs constr
R48774:48780 sf.Maps <> beq_idP thm
R48774:48780 sf.Maps <> beq_idP thm
R48830:48847 sf.Sub <> context_invariance thm
R48830:48847 sf.Sub <> context_invariance thm
R48893:48898 sf.Maps <> update def
R48901:48908 sf.Maps <> t_update def
R48927:48932 sf.Maps <> beq_id def
R48927:48932 sf.Maps <> beq_id def
R48983:49000 sf.Sub <> context_invariance thm
R48983:49000 sf.Sub <> context_invariance thm
R49033:49038 sf.Maps <> update def
R49041:49048 sf.Maps <> t_update def
R49067:49073 sf.Maps <> beq_idP thm
R49067:49073 sf.Maps <> beq_idP thm
R49113:49128 sf.Maps <> beq_id_false_iff thm
R49113:49128 sf.Maps <> beq_id_false_iff thm
R49113:49128 sf.Maps <> beq_id_false_iff thm
R49188:49191 sf.Sub <> ::x_'<:'_x not
R49183:49187 sf.Sub <> TBool constr
R49213:49233 sf.Sub <> typing_inversion_true thm
R49188:49191 sf.Sub <> ::x_'<:'_x not
R49183:49187 sf.Sub <> TBool constr
R49213:49233 sf.Sub <> typing_inversion_true thm
R49286:49289 sf.Sub <> ::x_'<:'_x not
R49281:49285 sf.Sub <> TBool constr
R49311:49332 sf.Sub <> typing_inversion_false thm
R49286:49289 sf.Sub <> ::x_'<:'_x not
R49281:49285 sf.Sub <> TBool constr
R49311:49332 sf.Sub <> typing_inversion_false thm
R49409:49424 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49375:49375 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49392:49396 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49399:49403 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49376:49381 sf.Maps <> update def
R49404:49408 sf.Sub <> TBool constr
R49455:49470 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49425:49425 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49442:49446 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49449:49453 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49426:49431 sf.Maps <> update def
R49471:49471 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49488:49492 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49495:49499 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49472:49477 sf.Maps <> update def
R49519:49537 sf.Sub <> typing_inversion_if thm
R49409:49424 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49375:49375 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49392:49396 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49399:49403 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49376:49381 sf.Maps <> update def
R49404:49408 sf.Sub <> TBool constr
R49455:49470 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49425:49425 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49442:49446 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49449:49453 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49426:49431 sf.Maps <> update def
R49471:49471 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49488:49492 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49495:49499 sf.Sub <> ::x_'|-'_x_'\in'_x not
R49472:49477 sf.Maps <> update def
R49519:49537 sf.Sub <> typing_inversion_if thm
R49691:49694 sf.Sub <> ::x_'<:'_x not
R49686:49690 sf.Sub <> TUnit constr
R49714:49734 sf.Sub <> typing_inversion_unit thm
R49691:49694 sf.Sub <> ::x_'<:'_x not
R49686:49690 sf.Sub <> TUnit constr
R49714:49734 sf.Sub <> typing_inversion_unit thm
prf 52538:52549 <> preservation
R52589:52598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52607:52616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52622:52625 sf.Sub <> ::x_'|-'_x_'\in'_x not
R52628:52632 sf.Sub <> ::x_'|-'_x_'\in'_x not
R52617:52621 sf.Maps <> empty def
R52626:52627 sf.Sub <> t' var
R52633:52633 sf.Sub <> T var
R52600:52604 sf.Sub <> ::x_'==>'_x not
R52599:52599 sf.Sub <> t var
R52605:52606 sf.Sub <> t' var
R52578:52581 sf.Sub <> ::x_'|-'_x_'\in'_x not
R52583:52587 sf.Sub <> ::x_'|-'_x_'\in'_x not
R52573:52577 sf.Maps <> empty def
R52582:52582 sf.Sub <> t var
R52588:52588 sf.Sub <> T var
R52685:52689 sf.Maps <> empty def
R52685:52689 sf.Maps <> empty def
R52913:52921 sf.Sub <> abs_arrow thm
R52913:52921 sf.Sub <> abs_arrow thm
R52964:52992 sf.Sub <> substitution_preserves_typing thm
R52964:52992 sf.Sub <> substitution_preserves_typing thm
