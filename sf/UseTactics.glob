DIGEST 712fa7982887f9a710e6cb8b99ba1707
FUseTactics
R614:628 Coq.Arith.Arith <> <> lib
R647:650 Maps <> <> lib
R668:670 Imp <> <> lib
R688:692 Types <> <> lib
R710:718 Smallstep <> <> lib
R736:745 LibTactics <> <> lib
mod 2823:2836 <> IntrovExamples
R2856:2859 Stlc <> <> lib
prf 3375:3393 IntrovExamples ceval_deterministic
R3460:3462 Coq.Init.Logic <> :type_scope:x_'='_x not
R3457:3459 UseTactics <> st1 var
R3463:3465 UseTactics <> st2 var
R3439:3441 Imp <> ::x_'/'_x_'\\'_x not
R3444:3447 Imp <> ::x_'/'_x_'\\'_x not
R3438:3438 UseTactics <> c var
R3442:3443 UseTactics <> st var
R3448:3450 UseTactics <> st2 var
R3420:3422 Imp <> ::x_'/'_x_'\\'_x not
R3425:3428 Imp <> ::x_'/'_x_'\\'_x not
R3419:3419 UseTactics <> c var
R3423:3424 UseTactics <> st var
R3429:3431 UseTactics <> st1 var
prf 3642:3655 IntrovExamples dist_exists_or
R3682:3682 UseTactics <> X var
R3696:3696 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3717:3722 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3697:3703 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3705:3706 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3710:3713 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3707:3707 UseTactics <> P var
R3709:3709 UseTactics <> x var
R3714:3714 UseTactics <> Q var
R3716:3716 UseTactics <> x var
R3723:3723 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3737:3742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3756:3756 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3724:3730 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3732:3733 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3734:3734 UseTactics <> P var
R3736:3736 UseTactics <> x var
R3743:3749 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3751:3752 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3753:3753 UseTactics <> Q var
R3755:3755 UseTactics <> x var
prf 3920:3939 IntrovExamples ceval_deterministic'
R4014:4016 Coq.Init.Logic <> :type_scope:x_'='_x not
R4011:4013 UseTactics <> st1 var
R4017:4019 UseTactics <> st2 var
R3994:3996 Imp <> ::x_'/'_x_'\\'_x not
R3999:4002 Imp <> ::x_'/'_x_'\\'_x not
R3993:3993 UseTactics <> c var
R3997:3998 UseTactics <> st var
R4003:4005 UseTactics <> st2 var
R3963:3965 Imp <> ::x_'/'_x_'\\'_x not
R3968:3971 Imp <> ::x_'/'_x_'\\'_x not
R3962:3962 UseTactics <> c var
R3966:3967 UseTactics <> st var
R3972:3974 UseTactics <> st1 var
prf 4197:4207 IntrovExamples exists_impl
R4224:4224 UseTactics <> X var
R4314:4314 UseTactics <> Q var
R4296:4302 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4304:4305 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4306:4306 UseTactics <> P var
R4308:4308 UseTactics <> x var
R4282:4282 UseTactics <> Q var
R4275:4275 UseTactics <> P var
R4277:4277 UseTactics <> x var
R4601:4614 UseTactics <> <> mod
mod 4730:4744 <> InvertsExamples
R4764:4767 Stlc <> <> lib
R4769:4773 Equiv <> <> lib
R4775:4777 Imp <> <> lib
prf 5586:5594 InvertsExamples skip_left
R5609:5614 Equiv <> cequiv def
R5627:5627 UseTactics <> c var
R5621:5623 Imp <> ::x_';;'_x not
R5617:5620 Imp <> ::'SKIP' not
R5624:5624 UseTactics <> c var
prf 5911:5929 InvertsExamples ceval_deterministic
R5997:5999 Coq.Init.Logic <> :type_scope:x_'='_x not
R5994:5996 UseTactics <> st1 var
R6000:6002 UseTactics <> st2 var
R5976:5978 Imp <> ::x_'/'_x_'\\'_x not
R5981:5984 Imp <> ::x_'/'_x_'\\'_x not
R5975:5975 UseTactics <> c var
R5979:5980 UseTactics <> st var
R5985:5987 UseTactics <> st2 var
R5956:5958 Imp <> ::x_'/'_x_'\\'_x not
R5961:5964 Imp <> ::x_'/'_x_'\\'_x not
R5955:5955 UseTactics <> c var
R5959:5960 UseTactics <> st var
R5965:5967 UseTactics <> st1 var
prf 6562:6581 InvertsExamples ceval_deterministic'
R6649:6651 Coq.Init.Logic <> :type_scope:x_'='_x not
R6646:6648 UseTactics <> st1 var
R6652:6654 UseTactics <> st2 var
R6628:6630 Imp <> ::x_'/'_x_'\\'_x not
R6633:6636 Imp <> ::x_'/'_x_'\\'_x not
R6627:6627 UseTactics <> c var
R6631:6632 UseTactics <> st var
R6637:6639 UseTactics <> st2 var
R6608:6610 Imp <> ::x_'/'_x_'\\'_x not
R6613:6616 Imp <> ::x_'/'_x_'\\'_x not
R6607:6607 UseTactics <> c var
R6611:6612 UseTactics <> st var
R6617:6619 UseTactics <> st1 var
R7320:7322 Coq.Init.Logic <> :type_scope:x_'='_x not
R7320:7322 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 8159:8168 InvertsExamples skip_left'
R8183:8188 Equiv <> cequiv def
R8201:8201 UseTactics <> c var
R8195:8197 Imp <> ::x_';;'_x not
R8191:8194 Imp <> ::'SKIP' not
R8198:8198 UseTactics <> c var
def 8488:8506 InvertsExamples typing_nonexample_1
R8512:8513 Coq.Init.Logic <> :type_scope:'~'_x not
R8514:8520 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8522:8529 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8530:8537 Stlc STLC has_type ind
R8643:8643 UseTactics <> T var
R8554:8557 Stlc STLC tabs constr
R8580:8583 Stlc STLC tabs constr
R8609:8612 Stlc STLC tapp constr
R8624:8627 Stlc STLC tvar constr
R8629:8629 Stlc STLC y def
R8615:8618 Stlc STLC tvar constr
R8620:8620 Stlc STLC x def
R8587:8591 Stlc STLC TBool constr
R8585:8585 Stlc STLC y def
R8561:8565 Stlc STLC TBool constr
R8559:8559 Stlc STLC x def
R8539:8543 Maps <> empty def
R9192:9206 UseTactics <> <> mod
mod 10187:10198 <> NaryExamples
R10218:10227 References <> <> lib
R10229:10237 Smallstep <> <> lib
prf 10597:10607 NaryExamples demo_splits
R10630:10633 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10626:10628 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R10625:10625 UseTactics <> n var
R10639:10642 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10635:10637 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10634:10634 UseTactics <> n var
R10638:10638 UseTactics <> m var
R10651:10654 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10644:10646 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10643:10643 UseTactics <> m var
R10648:10648 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10647:10647 UseTactics <> n var
R10656:10659 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R10655:10655 UseTactics <> m var
prf 11070:11080 NaryExamples demo_branch
R11103:11106 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11099:11101 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R11098:11098 UseTactics <> n var
R11102:11102 UseTactics <> m var
R11112:11115 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11108:11110 Coq.Init.Logic <> :type_scope:x_'='_x not
R11107:11107 UseTactics <> n var
R11111:11111 UseTactics <> m var
R11117:11119 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R11116:11116 UseTactics <> m var
R11120:11120 UseTactics <> n var
R11152:11163 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
R11152:11163 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
prf 11795:11802 NaryExamples progress
R11888:11891 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11881:11885 References STLCRef value ind
R11887:11887 UseTactics <> t var
R11892:11898 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11905:11906 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11908:11910 References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R11913:11917 References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R11920:11922 References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R11907:11907 UseTactics <> t var
R11911:11912 UseTactics <> st var
R11918:11919 UseTactics <> t' var
R11923:11925 UseTactics <> st' var
R11853:11868 References STLCRef store_well_typed def
R11873:11874 UseTactics <> st var
R11870:11871 UseTactics <> ST var
R11826:11833 References STLCRef has_type ind
R11846:11846 UseTactics <> T var
R11844:11844 UseTactics <> t var
R11841:11842 UseTactics <> ST var
R11835:11839 Maps <> empty def
R12053:12057 Maps <> empty def
R12059:12060 References STLCRef ty ind
R12053:12057 Maps <> empty def
R12059:12060 References STLCRef ty ind
R12378:12381 References STLCRef tapp constr
R12384:12387 References STLCRef tabs constr
R12378:12381 References STLCRef tapp constr
R12384:12387 References STLCRef tabs constr
R12731:12742 UseTactics <> <> mod
mod 13559:13574 <> EqualityExamples
prf 13840:13850 EqualityExamples mult_0_plus
R13867:13869 Coq.Init.Datatypes <> nat ind
R13885:13887 Coq.Init.Logic <> :type_scope:x_'='_x not
R13874:13874 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13880:13883 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13876:13878 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13879:13879 UseTactics <> n var
R13884:13884 UseTactics <> m var
R13889:13891 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13888:13888 UseTactics <> n var
R13892:13892 UseTactics <> m var
R13964:13966 Coq.Init.Logic <> :type_scope:x_'='_x not
R13960:13962 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13964:13966 Coq.Init.Logic <> :type_scope:x_'='_x not
R13960:13962 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14075:14077 Coq.Init.Logic <> :type_scope:x_'='_x not
R14071:14073 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14075:14077 Coq.Init.Logic <> :type_scope:x_'='_x not
R14071:14073 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 14460:14471 EqualityExamples mult_0_plus'
R14488:14490 Coq.Init.Datatypes <> nat ind
R14506:14508 Coq.Init.Logic <> :type_scope:x_'='_x not
R14495:14495 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14501:14504 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14497:14499 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14500:14500 UseTactics <> n var
R14505:14505 UseTactics <> m var
R14510:14512 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14509:14509 UseTactics <> n var
R14513:14513 UseTactics <> m var
R14558:14560 Coq.Init.Logic <> :type_scope:x_'='_x not
R14554:14556 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14558:14560 Coq.Init.Logic <> :type_scope:x_'='_x not
R14554:14556 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 14975:14987 EqualityExamples mult_0_plus''
R15011:15013 Coq.Init.Datatypes <> nat ind
R15043:15045 Coq.Init.Logic <> :type_scope:x_'='_x not
R15018:15018 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15024:15028 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15042:15042 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15020:15022 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15019:15019 UseTactics <> u var
R15023:15023 UseTactics <> v var
R15029:15029 Coq.Init.Datatypes <> S constr
R15037:15039 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15033:15035 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15032:15032 UseTactics <> w var
R15036:15036 UseTactics <> x var
R15040:15040 UseTactics <> y var
R15046:15046 UseTactics <> z var
R15102:15104 Coq.Init.Logic <> :type_scope:x_'='_x not
R15096:15097 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15101:15101 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15095:15095 UseTactics <> a var
R15098:15098 Coq.Init.Datatypes <> S constr
R15100:15100 UseTactics <> b var
R15108:15108 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15106:15106 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15105:15105 UseTactics <> a var
R15107:15107 UseTactics <> b var
R15109:15109 UseTactics <> a var
R15102:15104 Coq.Init.Logic <> :type_scope:x_'='_x not
R15096:15097 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15101:15101 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15095:15095 UseTactics <> a var
R15098:15098 Coq.Init.Datatypes <> S constr
R15100:15100 UseTactics <> b var
R15108:15108 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15106:15106 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15105:15105 UseTactics <> a var
R15107:15107 UseTactics <> b var
R15109:15109 UseTactics <> a var
prf 15503:15513 EqualityExamples demo_substs
R15536:15538 Coq.Init.Datatypes <> nat ind
R15531:15533 Coq.Init.Datatypes <> nat ind
R15565:15567 Coq.Init.Logic <> :type_scope:x_'='_x not
R15564:15564 UseTactics <> y var
R15568:15568 UseTactics <> f var
R15570:15570 UseTactics <> x var
R15556:15558 Coq.Init.Logic <> :type_scope:x_'='_x not
R15555:15555 UseTactics <> y var
R15559:15559 UseTactics <> x var
R15545:15547 Coq.Init.Logic <> :type_scope:x_'='_x not
R15544:15544 UseTactics <> x var
R15548:15548 UseTactics <> f var
R15550:15550 UseTactics <> x var
prf 15997:16008 EqualityExamples demo_fequals
R16032:16034 Coq.Init.Datatypes <> nat ind
R16062:16064 Coq.Init.Datatypes <> nat ind
R16057:16059 Coq.Init.Datatypes <> nat ind
R16052:16054 Coq.Init.Datatypes <> nat ind
R16047:16049 Coq.Init.Datatypes <> nat ind
R16042:16044 Coq.Init.Datatypes <> nat ind
R16108:16110 Coq.Init.Logic <> :type_scope:x_'='_x not
R16099:16099 UseTactics <> f var
R16107:16107 UseTactics <> d var
R16105:16105 UseTactics <> c var
R16103:16103 UseTactics <> b var
R16101:16101 UseTactics <> a var
R16111:16111 UseTactics <> f var
R16117:16117 UseTactics <> c var
R16089:16091 Coq.Init.Logic <> :type_scope:x_'='_x not
R16088:16088 UseTactics <> e var
R16080:16082 Coq.Init.Logic <> :type_scope:x_'='_x not
R16079:16079 UseTactics <> b var
R16083:16083 UseTactics <> e var
R16071:16073 Coq.Init.Logic <> :type_scope:x_'='_x not
R16070:16070 UseTactics <> a var
ax 17251:17270 EqualityExamples big_expression_using
R17279:17281 Coq.Init.Datatypes <> nat ind
R17274:17276 Coq.Init.Datatypes <> nat ind
prf 17317:17332 EqualityExamples demo_applys_eq_1
R17351:17353 Coq.Init.Datatypes <> nat ind
R17346:17348 Coq.Init.Datatypes <> nat ind
R17405:17405 UseTactics <> P var
R17410:17429 UseTactics EqualityExamples big_expression_using prfax
R17431:17431 UseTactics <> y var
R17407:17407 UseTactics <> x var
R17371:17371 UseTactics <> P var
R17376:17395 UseTactics EqualityExamples big_expression_using prfax
R17397:17397 UseTactics <> z var
R17373:17373 UseTactics <> x var
R17519:17521 Coq.Init.Logic <> :type_scope:x_'='_x not
R17497:17516 UseTactics EqualityExamples big_expression_using prfax
R17522:17541 UseTactics EqualityExamples big_expression_using prfax
R17519:17521 Coq.Init.Logic <> :type_scope:x_'='_x not
R17497:17516 UseTactics EqualityExamples big_expression_using prfax
R17522:17541 UseTactics EqualityExamples big_expression_using prfax
prf 17927:17942 EqualityExamples demo_applys_eq_2
R17961:17963 Coq.Init.Datatypes <> nat ind
R17956:17958 Coq.Init.Datatypes <> nat ind
R18015:18015 UseTactics <> P var
R18042:18042 UseTactics <> x var
R18018:18037 UseTactics EqualityExamples big_expression_using prfax
R18039:18039 UseTactics <> y var
R17981:17981 UseTactics <> P var
R18008:18008 UseTactics <> x var
R17984:18003 UseTactics EqualityExamples big_expression_using prfax
R18005:18005 UseTactics <> z var
prf 18341:18356 EqualityExamples demo_applys_eq_3
R18375:18377 Coq.Init.Datatypes <> nat ind
R18370:18372 Coq.Init.Datatypes <> nat ind
R18460:18460 UseTactics <> P var
R18489:18508 UseTactics EqualityExamples big_expression_using prfax
R18510:18511 UseTactics <> y1 var
R18463:18482 UseTactics EqualityExamples big_expression_using prfax
R18484:18485 UseTactics <> x1 var
R18401:18401 UseTactics <> P var
R18430:18449 UseTactics EqualityExamples big_expression_using prfax
R18451:18452 UseTactics <> y2 var
R18404:18423 UseTactics EqualityExamples big_expression_using prfax
R18425:18426 UseTactics <> x2 var
R18708:18723 UseTactics <> <> mod
mod 19428:19441 <> UnfoldsExample
R19461:19465 Hoare <> <> lib
prf 19634:19647 UnfoldsExample bexp_eval_true
R19688:19692 Hoare <> bassn def
R19694:19694 UseTactics <> b var
R19697:19698 UseTactics <> st var
R19676:19678 Coq.Init.Logic <> :type_scope:x_'='_x not
R19666:19670 Imp <> beval def
R19675:19675 UseTactics <> b var
R19672:19673 UseTactics <> st var
R19679:19682 Coq.Init.Datatypes <> true constr
R19765:19769 Hoare <> bassn def
R20090:20103 UseTactics <> <> mod
prf 20546:20555 <> demo_false
R20583:20585 Coq.Init.Logic <> :type_scope:x_'='_x not
R20582:20582 UseTactics <> n var
R20574:20576 Coq.Init.Logic <> :type_scope:x_'='_x not
R20571:20571 Coq.Init.Datatypes <> S constr
R20573:20573 UseTactics <> n var
prf 20770:20783 <> demo_false_arg
R20831:20833 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20821:20823 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20809:20813 Coq.Init.Logic <> False ind
R20801:20803 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20800:20800 UseTactics <> n var
prf 21077:21089 <> demo_tryfalse
R21117:21119 Coq.Init.Logic <> :type_scope:x_'='_x not
R21116:21116 UseTactics <> n var
R21108:21110 Coq.Init.Logic <> :type_scope:x_'='_x not
R21105:21105 Coq.Init.Datatypes <> S constr
R21107:21107 UseTactics <> n var
mod 21460:21469 <> GenExample
R21489:21492 Stlc <> <> lib
prf 21517:21545 GenExample substitution_preserves_typing
R21645:21652 Stlc STLC has_type ind
R21670:21670 UseTactics <> S var
R21661:21661 Stlc STLC ::'['_x_':='_x_']'_x not
R21663:21664 Stlc STLC ::'['_x_':='_x_']'_x not
R21666:21666 Stlc STLC ::'['_x_':='_x_']'_x not
R21662:21662 UseTactics <> x var
R21665:21665 UseTactics <> v var
R21667:21667 UseTactics <> t var
R21654:21658 UseTactics <> Gamma var
R21618:21625 Stlc STLC has_type ind
R21635:21635 UseTactics <> U var
R21633:21633 UseTactics <> v var
R21627:21631 Maps <> empty def
R21578:21585 Stlc STLC has_type ind
R21608:21608 UseTactics <> S var
R21606:21606 UseTactics <> t var
R21588:21593 Maps <> update def
R21603:21603 UseTactics <> U var
R21601:21601 UseTactics <> x var
R21595:21599 UseTactics <> Gamma var
R22022:22031 UseTactics <> <> mod
mod 22620:22630 <> SkipExample
R22650:22653 Stlc <> <> lib
def 22680:22693 SkipExample astep_example1
R22699:22699 Types <> ::x_'/'_x_'==>a*'_x not
R22740:22743 Types <> ::x_'/'_x_'==>a*'_x not
R22755:22762 Types <> ::x_'/'_x_'==>a*'_x not
R22770:22770 Types <> ::x_'/'_x_'==>a*'_x not
R22744:22754 Imp <> empty_state def
R22700:22704 Imp <> APlus constr
R22716:22720 Imp <> AMult constr
R22732:22735 Imp <> ANum constr
R22723:22726 Imp <> ANum constr
R22707:22710 Imp <> ANum constr
R22763:22766 Imp <> ANum constr
R22789:22798 Smallstep <> multi_step constr
R22789:22798 Smallstep <> multi_step constr
R22861:22870 Smallstep <> multi_step constr
R22861:22870 Smallstep <> multi_step constr
prf 23332:23341 SkipExample demo_skipH
R23345:23348 Coq.Init.Logic <> True ind
R23382:23384 Coq.Init.Datatypes <> nat ind
R23398:23400 Coq.Init.Logic <> :type_scope:x_'='_x not
R23387:23387 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23393:23396 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23389:23391 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23392:23392 UseTactics <> n var
R23397:23397 UseTactics <> m var
R23402:23404 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23401:23401 UseTactics <> n var
R23405:23405 UseTactics <> m var
R23382:23384 Coq.Init.Datatypes <> nat ind
R23398:23400 Coq.Init.Logic <> :type_scope:x_'='_x not
R23387:23387 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23393:23396 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23389:23391 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23392:23392 UseTactics <> n var
R23397:23397 UseTactics <> m var
R23402:23404 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23401:23401 UseTactics <> n var
R23405:23405 UseTactics <> m var
prf 23564:23574 SkipExample mult_0_plus
R23591:23593 Coq.Init.Datatypes <> nat ind
R23609:23611 Coq.Init.Logic <> :type_scope:x_'='_x not
R23598:23598 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23604:23607 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23600:23602 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23603:23603 UseTactics <> n var
R23608:23608 UseTactics <> m var
R23613:23615 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23612:23612 UseTactics <> n var
R23616:23616 UseTactics <> m var
R23689:23691 Coq.Init.Logic <> :type_scope:x_'='_x not
R23685:23687 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23689:23691 Coq.Init.Logic <> :type_scope:x_'='_x not
R23685:23687 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23790:23792 Coq.Init.Logic <> :type_scope:x_'='_x not
R23786:23788 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23790:23792 Coq.Init.Logic <> :type_scope:x_'='_x not
R23786:23788 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 24470:24488 SkipExample ceval_deterministic
R24555:24557 Coq.Init.Logic <> :type_scope:x_'='_x not
R24552:24554 UseTactics <> st1 var
R24558:24560 UseTactics <> st2 var
R24534:24536 Imp <> ::x_'/'_x_'\\'_x not
R24539:24542 Imp <> ::x_'/'_x_'\\'_x not
R24533:24533 UseTactics <> c var
R24537:24538 UseTactics <> st var
R24543:24545 UseTactics <> st2 var
R24515:24517 Imp <> ::x_'/'_x_'\\'_x not
R24520:24523 Imp <> ::x_'/'_x_'\\'_x not
R24514:24514 UseTactics <> c var
R24518:24519 UseTactics <> st var
R24524:24526 UseTactics <> st1 var
R25116:25118 Coq.Init.Logic <> :type_scope:x_'='_x not
R25116:25118 Coq.Init.Logic <> :type_scope:x_'='_x not
R25423:25433 UseTactics <> <> mod
mod 25546:25557 <> SortExamples
R25577:25579 Imp <> <> lib
prf 25781:25799 SortExamples ceval_deterministic
R25866:25868 Coq.Init.Logic <> :type_scope:x_'='_x not
R25863:25865 UseTactics <> st1 var
R25869:25871 UseTactics <> st2 var
R25845:25847 Imp <> ::x_'/'_x_'\\'_x not
R25850:25853 Imp <> ::x_'/'_x_'\\'_x not
R25844:25844 UseTactics <> c var
R25848:25849 UseTactics <> st var
R25854:25856 UseTactics <> st2 var
R25826:25828 Imp <> ::x_'/'_x_'\\'_x not
R25831:25834 Imp <> ::x_'/'_x_'\\'_x not
R25825:25825 UseTactics <> c var
R25829:25830 UseTactics <> st var
R25835:25837 UseTactics <> st1 var
R26098:26109 UseTactics <> <> mod
mod 28454:28465 <> ExamplesLets
R28485:28487 Sub <> <> lib
ax 28596:28615 ExamplesLets typing_inversion_var
R28629:28635 Sub <> context def
R28641:28642 Maps <> id ind
R28648:28649 Sub <> ty ind
R28682:28688 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28690:28691 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28704:28707 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28695:28697 Coq.Init.Logic <> :type_scope:x_'='_x not
R28692:28692 UseTactics <> G var
R28694:28694 UseTactics <> x var
R28698:28701 Coq.Init.Datatypes <> Some constr
R28703:28703 UseTactics <> S var
R28708:28714 Sub <> subtype ind
R28718:28718 UseTactics <> T var
R28716:28716 UseTactics <> S var
R28655:28662 Sub <> has_type ind
R28675:28675 UseTactics <> T var
R28667:28670 Sub <> tvar constr
R28672:28672 UseTactics <> x var
R28664:28664 UseTactics <> G var
prf 28977:28987 ExamplesLets demo_lets_1
R29001:29007 Sub <> context def
R29013:29014 Maps <> id ind
R29020:29021 Sub <> ty ind
R29052:29055 Coq.Init.Logic <> True ind
R29027:29034 Sub <> has_type ind
R29047:29047 UseTactics <> T var
R29039:29042 Sub <> tvar constr
R29044:29044 UseTactics <> x var
R29036:29036 UseTactics <> G var
R29121:29140 UseTactics ExamplesLets typing_inversion_var prfax
R29121:29140 UseTactics ExamplesLets typing_inversion_var prfax
R29231:29250 UseTactics ExamplesLets typing_inversion_var prfax
R29231:29250 UseTactics ExamplesLets typing_inversion_var prfax
prf 29693:29703 ExamplesLets demo_lets_2
R29717:29723 Sub <> context def
R29729:29730 Maps <> id ind
R29736:29737 Sub <> ty ind
R29741:29744 Coq.Init.Logic <> True ind
R29793:29812 UseTactics ExamplesLets typing_inversion_var prfax
R29820:29822 LibTactics <> :ltac_scope:'___' not
R29793:29812 UseTactics ExamplesLets typing_inversion_var prfax
R29820:29822 LibTactics <> :ltac_scope:'___' not
prf 30199:30209 ExamplesLets demo_lets_3
R30223:30224 Maps <> id ind
R30228:30231 Coq.Init.Logic <> True ind
R30276:30295 UseTactics ExamplesLets typing_inversion_var prfax
R30299:30301 LibTactics <> :ltac_scope:'___' not
R30276:30295 UseTactics ExamplesLets typing_inversion_var prfax
R30299:30301 LibTactics <> :ltac_scope:'___' not
prf 30481:30491 ExamplesLets demo_lets_4
R30495:30498 Coq.Init.Logic <> True ind
R30531:30550 UseTactics ExamplesLets typing_inversion_var prfax
R30552:30554 LibTactics <> :ltac_scope:'___' not
R30531:30550 UseTactics ExamplesLets typing_inversion_var prfax
R30552:30554 LibTactics <> :ltac_scope:'___' not
prf 30759:30769 ExamplesLets demo_lets_5
R30773:30776 Coq.Init.Logic <> True ind
R30796:30815 UseTactics ExamplesLets typing_inversion_var prfax
R30796:30815 UseTactics ExamplesLets typing_inversion_var prfax
prf 31252:31271 ExamplesLets demo_lets_underscore
R31312:31315 Coq.Init.Logic <> True ind
R31301:31303 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R31300:31300 UseTactics <> n var
R31305:31305 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31304:31304 UseTactics <> m var
R31291:31294 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R31290:31290 UseTactics <> n var
R31295:31295 UseTactics <> m var
R31738:31739 LibTactics <> :ltac_scope:'__' not
R31738:31739 LibTactics <> :ltac_scope:'__' not
R32217:32228 UseTactics <> <> mod
mod 33516:33537 <> ExamplesInstantiations
R33557:33559 Sub <> <> lib
prf 33815:33843 ExamplesInstantiations substitution_preserves_typing
R33943:33950 Sub <> has_type ind
R33968:33968 UseTactics <> S var
R33959:33959 Sub <> ::'['_x_':='_x_']'_x not
R33961:33962 Sub <> ::'['_x_':='_x_']'_x not
R33964:33964 Sub <> ::'['_x_':='_x_']'_x not
R33960:33960 UseTactics <> x var
R33963:33963 UseTactics <> v var
R33965:33965 UseTactics <> t var
R33952:33956 UseTactics <> Gamma var
R33916:33923 Sub <> has_type ind
R33933:33933 UseTactics <> U var
R33931:33931 UseTactics <> v var
R33925:33929 Maps <> empty def
R33876:33883 Sub <> has_type ind
R33906:33906 UseTactics <> S var
R33904:33904 UseTactics <> t var
R33886:33891 Maps <> update def
R33901:33901 UseTactics <> U var
R33899:33899 UseTactics <> x var
R33893:33897 UseTactics <> Gamma var
R34326:34345 Sub <> typing_inversion_var thm
R34326:34345 Sub <> typing_inversion_var thm
R34365:34370 Maps <> update def
R34373:34380 Maps <> t_update def
R34405:34411 Maps <> beq_idP thm
R34405:34411 Maps <> beq_idP thm
R34527:34531 Maps <> empty def
R34503:34520 Sub <> context_invariance thm
R34527:34531 Maps <> empty def
R34503:34520 Sub <> context_invariance thm
R34737:34751 Sub <> free_in_context thm
R34757:34761 Maps <> empty def
R34763:34764 Sub <> ty ind
R34737:34751 Sub <> free_in_context thm
R34757:34761 Maps <> empty def
R34763:34764 Sub <> ty ind
R35240:35259 Sub <> typing_inversion_abs thm
R35240:35259 Sub <> typing_inversion_abs thm
R35415:35419 Sub <> T_Sub constr
R35422:35427 Sub <> TArrow constr
R35415:35419 Sub <> T_Sub constr
R35422:35427 Sub <> TArrow constr
R35450:35454 Sub <> T_Abs constr
R35450:35454 Sub <> T_Abs constr
R35473:35479 Maps <> beq_idP thm
R35473:35479 Maps <> beq_idP thm
R35516:35533 Sub <> context_invariance thm
R35516:35533 Sub <> context_invariance thm
R35579:35584 Maps <> update def
R35587:35594 Maps <> t_update def
R35613:35619 Maps <> beq_idP thm
R35613:35619 Maps <> beq_idP thm
R35670:35687 Sub <> context_invariance thm
R35670:35687 Sub <> context_invariance thm
R35720:35725 Maps <> update def
R35728:35735 Maps <> t_update def
R35754:35760 Maps <> beq_idP thm
R35754:35760 Maps <> beq_idP thm
R35791:35802 Maps <> false_beq_id thm
R35791:35802 Maps <> false_beq_id thm
R35833:35853 Sub <> typing_inversion_true thm
R35833:35853 Sub <> typing_inversion_true thm
R35891:35912 Sub <> typing_inversion_false thm
R35891:35912 Sub <> typing_inversion_false thm
R35967:35985 Sub <> typing_inversion_if thm
R35967:35985 Sub <> typing_inversion_if thm
R36197:36217 Sub <> typing_inversion_unit thm
R36197:36217 Sub <> typing_inversion_unit thm
R36238:36259 UseTactics <> <> mod
