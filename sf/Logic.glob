DIGEST 12f631a3dbd941b52dbba82ca6573dd9
Fsf.Logic
R45:51 sf.Tactics <> <> lib
R939:941 Coq.Init.Logic <> :type_scope:x_'='_x not
R981:983 Coq.Init.Datatypes <> nat ind
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R987:989 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R986:986 sf.Logic <> n var
R990:990 sf.Logic <> m var
R995:997 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R994:994 sf.Logic <> m var
R998:998 sf.Logic <> n var
R1238:1240 Coq.Init.Datatypes <> nat ind
R1244:1246 Coq.Init.Logic <> :type_scope:x_'='_x not
R1243:1243 sf.Logic <> n var
R1274:1276 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1606:1618 <> plus_2_2_is_4
R1629:1631 Coq.Init.Logic <> :type_scope:x_'='_x not
R1625:1627 Coq.Init.Peano <> :nat_scope:x_'+'_x not
def 1869:1877 <> plus_fact
R1896:1898 Coq.Init.Logic <> :type_scope:x_'='_x not
R1892:1894 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1908:1916 sf.Logic <> plus_fact def
prf 2101:2117 <> plus_fact_is_true
R2123:2131 sf.Logic <> plus_fact def
def 2448:2455 <> is_three
R2462:2464 Coq.Init.Datatypes <> nat ind
R2480:2482 Coq.Init.Logic <> :type_scope:x_'='_x not
R2479:2479 sf.Logic <> n var
R2492:2499 sf.Logic <> is_three def
def 2754:2762 <> injective
R2776:2779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2780:2780 sf.Logic <> B var
R2775:2775 sf.Logic <> A var
R2801:2801 sf.Logic <> A var
R2813:2816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2818:2820 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2817 sf.Logic <> x var
R2821:2821 sf.Logic <> y var
R2807:2809 Coq.Init.Logic <> :type_scope:x_'='_x not
R2804:2804 sf.Logic <> f var
R2806:2806 sf.Logic <> x var
R2810:2810 sf.Logic <> f var
R2812:2812 sf.Logic <> y var
prf 2831:2838 <> succ_inj
R2842:2850 sf.Logic <> injective def
R2852:2852 Coq.Init.Datatypes <> S constr
R3223:3224 Coq.Init.Logic <> eq ind
def 3816:3826 <> and_example
R3839:3842 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3835:3837 Coq.Init.Logic <> :type_scope:x_'='_x not
R3831:3833 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3848:3850 Coq.Init.Logic <> :type_scope:x_'='_x not
R3844:3846 Coq.Init.Peano <> :nat_scope:x_'*'_x not
prf 4182:4190 <> and_intro
R4214:4217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4219:4222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4224:4227 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4223:4223 sf.Logic <> A var
R4228:4228 sf.Logic <> B var
R4218:4218 sf.Logic <> B var
R4213:4213 sf.Logic <> A var
def 4793:4804 <> and_example'
R4817:4820 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4813:4815 Coq.Init.Logic <> :type_scope:x_'='_x not
R4809:4811 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4826:4828 Coq.Init.Logic <> :type_scope:x_'='_x not
R4822:4824 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4847:4855 sf.Logic <> and_intro thm
R4847:4855 sf.Logic <> and_intro thm
def 4984:4995 <> and_exercise
R5014:5016 Coq.Init.Datatypes <> nat ind
R5028:5031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5037:5040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5033:5035 Coq.Init.Logic <> :type_scope:x_'='_x not
R5032:5032 sf.Logic <> n var
R5042:5044 Coq.Init.Logic <> :type_scope:x_'='_x not
R5041:5041 sf.Logic <> m var
R5024:5026 Coq.Init.Logic <> :type_scope:x_'='_x not
R5020:5022 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5019:5019 sf.Logic <> n var
R5023:5023 sf.Logic <> m var
prf 5676:5687 <> and_example2
R5706:5708 Coq.Init.Datatypes <> nat ind
R5725:5728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5734:5736 Coq.Init.Logic <> :type_scope:x_'='_x not
R5730:5732 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5729:5729 sf.Logic <> n var
R5733:5733 sf.Logic <> m var
R5716:5719 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5712:5714 Coq.Init.Logic <> :type_scope:x_'='_x not
R5711:5711 sf.Logic <> n var
R5721:5723 Coq.Init.Logic <> :type_scope:x_'='_x not
R5720:5720 sf.Logic <> m var
prf 5957:5969 <> and_example2'
R5988:5990 Coq.Init.Datatypes <> nat ind
R6007:6010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6016:6018 Coq.Init.Logic <> :type_scope:x_'='_x not
R6012:6014 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6011:6011 sf.Logic <> n var
R6015:6015 sf.Logic <> m var
R5998:6001 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5994:5996 Coq.Init.Logic <> :type_scope:x_'='_x not
R5993:5993 sf.Logic <> n var
R6003:6005 Coq.Init.Logic <> :type_scope:x_'='_x not
R6002:6002 sf.Logic <> m var
prf 6297:6310 <> and_example2''
R6329:6331 Coq.Init.Datatypes <> nat ind
R6339:6342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6348:6351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6357:6359 Coq.Init.Logic <> :type_scope:x_'='_x not
R6353:6355 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6352:6352 sf.Logic <> n var
R6356:6356 sf.Logic <> m var
R6344:6346 Coq.Init.Logic <> :type_scope:x_'='_x not
R6343:6343 sf.Logic <> m var
R6335:6337 Coq.Init.Logic <> :type_scope:x_'='_x not
R6334:6334 sf.Logic <> n var
prf 6711:6722 <> and_example3
R6741:6743 Coq.Init.Datatypes <> nat ind
R6755:6758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6764:6766 Coq.Init.Logic <> :type_scope:x_'='_x not
R6760:6762 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6759:6759 sf.Logic <> n var
R6763:6763 sf.Logic <> m var
R6751:6753 Coq.Init.Logic <> :type_scope:x_'='_x not
R6747:6749 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6746:6746 sf.Logic <> n var
R6750:6750 sf.Logic <> m var
R6813:6816 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6809:6811 Coq.Init.Logic <> :type_scope:x_'='_x not
R6818:6820 Coq.Init.Logic <> :type_scope:x_'='_x not
R6813:6816 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6809:6811 Coq.Init.Logic <> :type_scope:x_'='_x not
R6818:6820 Coq.Init.Logic <> :type_scope:x_'='_x not
R6835:6846 sf.Logic <> and_exercise def
R6835:6846 sf.Logic <> and_exercise def
prf 7109:7113 <> proj1
R7144:7147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7148:7148 sf.Logic <> P var
R7139:7142 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7138:7138 sf.Logic <> P var
R7143:7143 sf.Logic <> Q var
prf 7253:7257 <> proj2
R7288:7291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7292:7292 sf.Logic <> Q var
R7283:7286 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7282:7282 sf.Logic <> P var
R7287:7287 sf.Logic <> Q var
prf 7598:7607 <> and_commut
R7638:7641 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7643:7646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7642:7642 sf.Logic <> Q var
R7647:7647 sf.Logic <> P var
R7633:7636 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7632:7632 sf.Logic <> P var
R7637:7637 sf.Logic <> Q var
prf 8044:8052 <> and_assoc
R8092:8095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8096:8096 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8103:8107 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8098:8101 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8097:8097 sf.Logic <> P var
R8102:8102 sf.Logic <> Q var
R8108:8108 sf.Logic <> R var
R8080:8084 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8091:8091 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8079:8079 sf.Logic <> P var
R8086:8089 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8085:8085 sf.Logic <> Q var
R8090:8090 sf.Logic <> R var
R8416:8418 Coq.Init.Logic <> and ind
prf 8978:8987 <> or_example
R9006:9008 Coq.Init.Datatypes <> nat ind
R9025:9028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9034:9036 Coq.Init.Logic <> :type_scope:x_'='_x not
R9030:9032 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R9029:9029 sf.Logic <> n var
R9033:9033 sf.Logic <> m var
R9016:9019 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9012:9014 Coq.Init.Logic <> :type_scope:x_'='_x not
R9011:9011 sf.Logic <> n var
R9021:9023 Coq.Init.Logic <> :type_scope:x_'='_x not
R9020:9020 sf.Logic <> m var
R9251:9258 Coq.Init.Peano <> mult_n_O thm
R9251:9258 Coq.Init.Peano <> mult_n_O thm
R9251:9258 Coq.Init.Peano <> mult_n_O thm
prf 10007:10014 <> or_intro
R10038:10041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10043:10046 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10042:10042 sf.Logic <> A var
R10047:10047 sf.Logic <> B var
R10037:10037 sf.Logic <> A var
prf 10208:10219 <> zero_or_succ
R10236:10238 Coq.Init.Datatypes <> nat ind
R10246:10249 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10242:10244 Coq.Init.Logic <> :type_scope:x_'='_x not
R10241:10241 sf.Logic <> n var
R10251:10253 Coq.Init.Logic <> :type_scope:x_'='_x not
R10250:10250 sf.Logic <> n var
R10254:10254 Coq.Init.Datatypes <> S constr
R10257:10260 Coq.Init.Peano <> pred syndef
R10262:10262 sf.Logic <> n var
prf 10389:10397 <> mult_eq_0
R10424:10427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10433:10436 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10429:10431 Coq.Init.Logic <> :type_scope:x_'='_x not
R10428:10428 sf.Logic <> n var
R10438:10440 Coq.Init.Logic <> :type_scope:x_'='_x not
R10437:10437 sf.Logic <> m var
R10420:10422 Coq.Init.Logic <> :type_scope:x_'='_x not
R10416:10418 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10415:10415 sf.Logic <> n var
R10419:10419 sf.Logic <> m var
prf 10679:10687 <> or_commut
R10718:10722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10724:10727 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10723:10723 sf.Logic <> Q var
R10728:10728 sf.Logic <> P var
R10713:10716 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10712:10712 sf.Logic <> P var
R10717:10717 sf.Logic <> Q var
mod 11791:11795 <> MyNot
def 11810:11812 MyNot not
R11827:11830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11831:11835 Coq.Init.Logic <> False ind
R11826:11826 sf.Logic <> P var
R11858:11860 sf.Logic MyNot not def
not 11848:11848 MyNot :type_scope:'~'_x
R11886:11888 sf.Logic MyNot not def
R11920:11924 sf.Logic MyNot <> mod
prf 12130:12147 <> ex_falso_quodlibet
R12175:12178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12179:12179 sf.Logic <> P var
R12170:12174 Coq.Init.Logic <> False ind
prf 12589:12607 <> not_implies_our_not
R12633:12637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12661:12661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12656:12659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12660:12660 sf.Logic <> Q var
R12655:12655 sf.Logic <> P var
R12630:12631 Coq.Init.Logic <> :type_scope:'~'_x not
R12632:12632 sf.Logic <> P var
prf 12821:12832 <> zero_not_one
R12836:12837 Coq.Init.Logic <> :type_scope:'~'_x not
R12843:12843 Coq.Init.Logic <> :type_scope:'~'_x not
R12839:12841 Coq.Init.Logic <> :type_scope:x_'='_x not
R13002:13005 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13035:13047 <> zero_not_one'
R13052:13055 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13461:13469 <> not_False
R13475:13476 Coq.Init.Logic <> :type_scope:'~'_x not
R13477:13481 Coq.Init.Logic <> False ind
R13500:13502 Coq.Init.Logic <> not def
prf 13541:13570 <> contradiction_implies_anything
R13595:13595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13603:13607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13608:13608 sf.Logic <> Q var
R13597:13600 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13596:13596 sf.Logic <> P var
R13601:13601 Coq.Init.Logic <> :type_scope:'~'_x not
R13602:13602 sf.Logic <> P var
R13672:13674 Coq.Init.Logic <> not def
prf 13731:13740 <> double_neg
R13764:13767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13768:13768 Coq.Init.Logic <> :type_scope:'~'_x not
R13769:13769 Coq.Init.Logic <> :type_scope:'~'_x not
R13770:13770 sf.Logic <> P var
R13763:13763 sf.Logic <> P var
R13825:13827 Coq.Init.Logic <> not def
prf 14151:14164 <> contrapositive
R14189:14189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14196:14201 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14210:14210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14204:14207 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14208:14208 Coq.Init.Logic <> :type_scope:'~'_x not
R14209:14209 sf.Logic <> P var
R14202:14202 Coq.Init.Logic <> :type_scope:'~'_x not
R14203:14203 sf.Logic <> Q var
R14191:14194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14195:14195 sf.Logic <> Q var
R14190:14190 sf.Logic <> P var
R14235:14237 Coq.Init.Logic <> not def
R14253:14255 Coq.Init.Logic <> not def
prf 14365:14387 <> not_both_true_and_false
R14410:14412 Coq.Init.Logic <> :type_scope:'~'_x not
R14420:14420 Coq.Init.Logic <> :type_scope:'~'_x not
R14414:14417 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14413:14413 sf.Logic <> P var
R14418:14418 Coq.Init.Logic <> :type_scope:'~'_x not
R14419:14419 sf.Logic <> P var
R14437:14439 Coq.Init.Logic <> not def
prf 15176:15192 <> not_true_is_false
R15207:15210 sf.Basics <> bool ind
R15224:15227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15229:15231 Coq.Init.Logic <> :type_scope:x_'='_x not
R15228:15228 sf.Logic <> b var
R15232:15236 sf.Basics <> false constr
R15216:15219 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15215:15215 sf.Logic <> b var
R15220:15223 sf.Basics <> true constr
R15291:15293 Coq.Init.Logic <> not def
R15311:15328 sf.Logic <> ex_falso_quodlibet thm
R15311:15328 sf.Logic <> ex_falso_quodlibet thm
prf 15539:15556 <> not_true_is_false'
R15571:15574 sf.Basics <> bool ind
R15588:15591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15593:15595 Coq.Init.Logic <> :type_scope:x_'='_x not
R15592:15592 sf.Logic <> b var
R15596:15600 sf.Basics <> false constr
R15580:15583 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15579:15579 sf.Logic <> b var
R15584:15587 sf.Basics <> true constr
R15656:15658 Coq.Init.Logic <> not def
prf 16035:16046 <> True_is_true
R16050:16053 Coq.Init.Logic <> True ind
R16069:16069 Coq.Init.Logic <> I constr
R16069:16069 Coq.Init.Logic <> I constr
mod 16751:16755 <> MyIff
def 16770:16772 MyIff iff
R16790:16790 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16797:16802 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16809:16809 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16792:16795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16796:16796 sf.Logic <> Q var
R16791:16791 sf.Logic <> P var
R16804:16807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16808:16808 sf.Logic <> P var
R16803:16803 sf.Logic <> Q var
R16836:16838 sf.Logic MyIff iff def
not 16822:16822 MyIff :type_scope:x_'<->'_x
R16940:16944 sf.Logic MyIff <> mod
prf 16956:16962 <> iff_sym
R16987:16987 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16995:17000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17008:17008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17002:17006 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17001:17001 sf.Logic <> Q var
R17007:17007 sf.Logic <> P var
R16989:16993 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16988:16988 sf.Logic <> P var
R16994:16994 sf.Logic <> Q var
prf 17136:17153 <> not_true_iff_false
R17178:17182 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17170:17173 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17169:17169 sf.Logic <> b var
R17174:17177 sf.Basics <> true constr
R17184:17186 Coq.Init.Logic <> :type_scope:x_'='_x not
R17183:17183 sf.Logic <> b var
R17187:17191 sf.Basics <> false constr
R17263:17279 sf.Logic <> not_true_is_false thm
R17263:17279 sf.Logic <> not_true_is_false thm
prf 17546:17553 <> iff_refl
R17577:17581 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17576:17576 sf.Logic <> P var
R17582:17582 sf.Logic <> P var
R17599:17601 Coq.Init.Logic <> iff def
prf 17685:17693 <> iff_trans
R17720:17720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17728:17732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17733:17733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17741:17746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17754:17754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17748:17752 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17747:17747 sf.Logic <> P var
R17753:17753 sf.Logic <> R var
R17735:17739 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17734:17734 sf.Logic <> Q var
R17740:17740 sf.Logic <> R var
R17722:17726 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17721:17721 sf.Logic <> P var
R17727:17727 sf.Logic <> Q var
R17771:17773 Coq.Init.Logic <> iff def
prf 17970:17992 <> or_distributes_over_and
R18032:18036 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18020:18024 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18031:18031 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18019:18019 sf.Logic <> P var
R18026:18029 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18025:18025 sf.Logic <> Q var
R18030:18030 sf.Logic <> R var
R18037:18037 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18044:18049 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18056:18056 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18039:18042 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18038:18038 sf.Logic <> P var
R18043:18043 sf.Logic <> Q var
R18051:18054 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18050:18050 sf.Logic <> P var
R18055:18055 sf.Logic <> R var
R18073:18075 Coq.Init.Logic <> iff def
R18880:18897 Coq.Setoids.Setoid <> <> lib
prf 19049:19054 <> mult_0
R19079:19083 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19075:19077 Coq.Init.Logic <> :type_scope:x_'='_x not
R19071:19073 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19070:19070 sf.Logic <> n var
R19074:19074 sf.Logic <> m var
R19089:19092 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19085:19087 Coq.Init.Logic <> :type_scope:x_'='_x not
R19084:19084 sf.Logic <> n var
R19094:19096 Coq.Init.Logic <> :type_scope:x_'='_x not
R19093:19093 sf.Logic <> m var
R19126:19134 sf.Logic <> mult_eq_0 thm
R19126:19134 sf.Logic <> mult_eq_0 thm
R19147:19156 sf.Logic <> or_example thm
R19147:19156 sf.Logic <> or_example thm
prf 19171:19178 <> or_assoc
R19218:19222 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19206:19210 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19217:19217 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19205:19205 sf.Logic <> P var
R19212:19215 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19211:19211 sf.Logic <> Q var
R19216:19216 sf.Logic <> R var
R19223:19223 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19230:19234 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19225:19228 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19224:19224 sf.Logic <> P var
R19229:19229 sf.Logic <> Q var
R19235:19235 sf.Logic <> R var
prf 19683:19690 <> mult_0_3
R19723:19727 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19719:19721 Coq.Init.Logic <> :type_scope:x_'='_x not
R19715:19717 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19711:19713 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19710:19710 sf.Logic <> n var
R19714:19714 sf.Logic <> m var
R19718:19718 sf.Logic <> p var
R19733:19736 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19729:19731 Coq.Init.Logic <> :type_scope:x_'='_x not
R19728:19728 sf.Logic <> n var
R19742:19745 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19738:19740 Coq.Init.Logic <> :type_scope:x_'='_x not
R19737:19737 sf.Logic <> m var
R19747:19749 Coq.Init.Logic <> :type_scope:x_'='_x not
R19746:19746 sf.Logic <> p var
R19786:19791 sf.Logic <> mult_0 thm
R19786:19791 sf.Logic <> mult_0 thm
R19786:19791 sf.Logic <> mult_0 thm
R19802:19807 sf.Logic <> mult_0 thm
R19802:19807 sf.Logic <> mult_0 thm
R19802:19807 sf.Logic <> mult_0 thm
R19818:19825 sf.Logic <> or_assoc thm
R19818:19825 sf.Logic <> or_assoc thm
R19818:19825 sf.Logic <> or_assoc thm
prf 20023:20039 <> apply_iff_example
R20058:20060 Coq.Init.Datatypes <> nat ind
R20072:20075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20081:20084 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20077:20079 Coq.Init.Logic <> :type_scope:x_'='_x not
R20076:20076 sf.Logic <> n var
R20086:20088 Coq.Init.Logic <> :type_scope:x_'='_x not
R20085:20085 sf.Logic <> m var
R20068:20070 Coq.Init.Logic <> :type_scope:x_'='_x not
R20064:20066 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R20063:20063 sf.Logic <> n var
R20067:20067 sf.Logic <> m var
R20121:20126 sf.Logic <> mult_0 thm
R20121:20126 sf.Logic <> mult_0 thm
prf 21017:21028 <> four_is_even
R21032:21038 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21046:21047 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21043:21045 Coq.Init.Datatypes <> nat ind
R21049:21051 Coq.Init.Logic <> :type_scope:x_'='_x not
R21053:21055 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21052:21052 sf.Logic <> n var
R21056:21056 sf.Logic <> n var
prf 21291:21306 <> exists_example_2
R21322:21322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21342:21349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21369:21369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21350:21356 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21358:21359 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21361:21363 Coq.Init.Logic <> :type_scope:x_'='_x not
R21360:21360 sf.Logic <> n var
R21365:21367 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21368:21368 sf.Logic <> o var
R21323:21329 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21331:21332 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21334:21336 Coq.Init.Logic <> :type_scope:x_'='_x not
R21333:21333 sf.Logic <> n var
R21338:21340 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21341:21341 sf.Logic <> m var
R21409:21411 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21409:21411 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 21593:21607 <> dist_not_exists
R21633:21636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21632:21632 sf.Logic <> X var
R21646:21646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21660:21664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21665:21667 Coq.Init.Logic <> :type_scope:'~'_x not
R21683:21683 Coq.Init.Logic <> :type_scope:'~'_x not
R21668:21674 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21676:21677 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21678:21679 Coq.Init.Logic <> :type_scope:'~'_x not
R21680:21680 sf.Logic <> P var
R21682:21682 sf.Logic <> x var
R21657:21657 sf.Logic <> P var
R21659:21659 sf.Logic <> x var
R21700:21702 Coq.Init.Logic <> not def
prf 21904:21917 <> dist_exists_or
R21945:21948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21944:21944 sf.Logic <> X var
R21958:21958 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21979:21984 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21959:21965 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21967:21968 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21972:21975 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21969:21969 sf.Logic <> P var
R21971:21971 sf.Logic <> x var
R21976:21976 sf.Logic <> Q var
R21978:21978 sf.Logic <> x var
R21985:21985 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21999:22004 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22018:22018 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21986:21992 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21994:21995 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21996:21996 sf.Logic <> P var
R21998:21998 sf.Logic <> x var
R22005:22011 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22013:22014 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22015:22015 sf.Logic <> Q var
R22017:22017 sf.Logic <> x var
def 23144:23145 <> In
R23163:23163 sf.Logic <> A var
R23171:23174 sf.Poly <> list ind
R23176:23176 sf.Logic <> A var
R23197:23197 sf.Logic <> l var
R23208:23209 sf.Poly <> ::'['_']' not
R23214:23218 Coq.Init.Logic <> False ind
R23226:23229 sf.Poly <> ::x_'::'_x not
R23242:23245 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23238:23240 Coq.Init.Logic <> :type_scope:x_'='_x not
R23241:23241 sf.Logic <> x var
R23246:23247 sf.Logic <> In def
R23249:23249 sf.Logic <> x var
def 23383:23394 <> In_example_1
R23398:23399 sf.Logic <> In def
R23403:23403 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23405:23406 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23408:23409 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23411:23411 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23470:23481 <> In_example_2
R23508:23513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23514:23520 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23523:23524 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23526:23528 Coq.Init.Logic <> :type_scope:x_'='_x not
R23525:23525 sf.Logic <> n var
R23530:23532 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23533:23534 sf.Logic <> n' var
R23497:23498 sf.Logic <> In def
R23502:23502 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23504:23505 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23507:23507 sf.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23500:23500 sf.Logic <> n var
prf 23972:23977 <> In_map
R24009:24012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24013:24013 sf.Logic <> B var
R24008:24008 sf.Logic <> A var
R24021:24024 sf.Poly <> list ind
R24026:24026 sf.Logic <> A var
R24034:24034 sf.Logic <> A var
R24048:24055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24056:24057 sf.Logic <> In def
R24066:24068 sf.Poly <> map def
R24072:24072 sf.Logic <> l var
R24070:24070 sf.Logic <> f var
R24060:24060 sf.Logic <> f var
R24062:24062 sf.Logic <> x var
R24042:24043 sf.Logic <> In def
R24047:24047 sf.Logic <> l var
R24045:24045 sf.Logic <> x var
prf 24803:24812 <> In_map_iff
R24844:24847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24848:24848 sf.Logic <> B var
R24843:24843 sf.Logic <> A var
R24856:24859 sf.Poly <> list ind
R24861:24861 sf.Logic <> A var
R24869:24869 sf.Logic <> B var
R24891:24899 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24877:24878 sf.Logic <> In def
R24883:24885 sf.Poly <> map def
R24889:24889 sf.Logic <> l var
R24887:24887 sf.Logic <> f var
R24880:24880 sf.Logic <> y var
R24900:24906 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24908:24909 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24917:24920 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24913:24915 Coq.Init.Logic <> :type_scope:x_'='_x not
R24910:24910 sf.Logic <> f var
R24912:24912 sf.Logic <> x var
R24916:24916 sf.Logic <> y var
R24921:24922 sf.Logic <> In def
R24926:24926 sf.Logic <> l var
R24924:24924 sf.Logic <> x var
prf 25549:25558 <> in_app_iff
R25579:25579 sf.Logic <> A var
R25597:25601 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25585:25586 sf.Logic <> In def
R25592:25593 sf.Poly <> ::x_'++'_x not
R25591:25591 sf.Logic <> l var
R25594:25595 sf.Logic <> l' var
R25588:25588 sf.Logic <> a var
R25608:25611 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25602:25603 sf.Logic <> In def
R25607:25607 sf.Logic <> l var
R25605:25605 sf.Logic <> a var
R25612:25613 sf.Logic <> In def
R25617:25618 sf.Logic <> l' var
R25615:25615 sf.Logic <> a var
def 26717:26719 <> All
R26731:26734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26730:26730 sf.Logic <> T var
R26746:26749 sf.Poly <> list ind
R26751:26751 sf.Logic <> T var
R26772:26772 sf.Logic <> l var
R26782:26784 sf.Poly <> nil constr
R26787:26790 Coq.Init.Logic <> True ind
R26796:26797 sf.Poly <> ::x_'::'_x not
R26805:26806 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26802:26802 sf.Logic <> P var
R26807:26809 sf.Logic <> All def
R26811:26811 sf.Logic <> P var
prf 26830:26835 <> All_In
R26856:26859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26855:26855 sf.Logic <> T var
R26871:26874 sf.Poly <> list ind
R26876:26876 sf.Logic <> T var
R26884:26884 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26908:26917 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26901:26904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26905:26905 sf.Logic <> P var
R26907:26907 sf.Logic <> x var
R26895:26896 sf.Logic <> In def
R26900:26900 sf.Logic <> l var
R26898:26898 sf.Logic <> x var
R26918:26920 sf.Logic <> All def
R26924:26924 sf.Logic <> l var
R26922:26922 sf.Logic <> P var
def 27719:27734 <> combine_odd_even
R27753:27756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27750:27752 Coq.Init.Datatypes <> nat ind
R27768:27771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27765:27767 Coq.Init.Datatypes <> nat ind
R27801:27804 sf.Basics <> oddb def
R27806:27806 sf.Logic <> n var
R27819:27822 sf.Basics <> true constr
R27825:27828 sf.Logic <> Podd var
R27830:27830 sf.Logic <> n var
R27837:27841 sf.Basics <> false constr
R27844:27848 sf.Logic <> Peven var
R27850:27850 sf.Logic <> n var
prf 27930:27951 <> combine_odd_even_intro
R27981:27984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27978:27980 Coq.Init.Datatypes <> nat ind
R27996:27998 Coq.Init.Datatypes <> nat ind
R28006:28006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28030:28038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28039:28039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28065:28073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28074:28089 sf.Logic <> combine_odd_even def
R28102:28102 sf.Logic <> n var
R28096:28100 sf.Logic <> Peven var
R28091:28094 sf.Logic <> Podd var
R28054:28057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28058:28062 sf.Logic <> Peven var
R28064:28064 sf.Logic <> n var
R28046:28048 Coq.Init.Logic <> :type_scope:x_'='_x not
R28040:28043 sf.Basics <> oddb def
R28045:28045 sf.Logic <> n var
R28049:28053 sf.Basics <> false constr
R28020:28023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28024:28027 sf.Logic <> Podd var
R28029:28029 sf.Logic <> n var
R28013:28015 Coq.Init.Logic <> :type_scope:x_'='_x not
R28007:28010 sf.Basics <> oddb def
R28012:28012 sf.Logic <> n var
R28016:28019 sf.Basics <> true constr
R28130:28133 sf.Basics <> oddb def
R28130:28133 sf.Basics <> oddb def
R28162:28177 sf.Logic <> combine_odd_even def
R28230:28245 sf.Logic <> combine_odd_even def
prf 28297:28321 <> combine_odd_even_elim_odd
R28351:28354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28348:28350 Coq.Init.Datatypes <> nat ind
R28366:28368 Coq.Init.Datatypes <> nat ind
R28405:28412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28426:28433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28434:28437 sf.Logic <> Podd var
R28439:28439 sf.Logic <> n var
R28419:28421 Coq.Init.Logic <> :type_scope:x_'='_x not
R28413:28416 sf.Basics <> oddb def
R28418:28418 sf.Logic <> n var
R28422:28425 sf.Basics <> true constr
R28376:28391 sf.Logic <> combine_odd_even def
R28404:28404 sf.Logic <> n var
R28398:28402 sf.Logic <> Peven var
R28393:28396 sf.Logic <> Podd var
R28464:28479 sf.Logic <> combine_odd_even def
prf 28527:28552 <> combine_odd_even_elim_even
R28582:28585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28579:28581 Coq.Init.Datatypes <> nat ind
R28597:28599 Coq.Init.Datatypes <> nat ind
R28636:28643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28658:28665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28666:28670 sf.Logic <> Peven var
R28672:28672 sf.Logic <> n var
R28650:28652 Coq.Init.Logic <> :type_scope:x_'='_x not
R28644:28647 sf.Basics <> oddb def
R28649:28649 sf.Logic <> n var
R28653:28657 sf.Basics <> false constr
R28607:28622 sf.Logic <> combine_odd_even def
R28635:28635 sf.Logic <> n var
R28629:28633 sf.Logic <> Peven var
R28624:28627 sf.Logic <> Podd var
R28697:28712 sf.Logic <> combine_odd_even def
R29483:29491 sf.Induction <> plus_comm thm
prf 30802:30811 <> plus_comm3
R30842:30844 Coq.Init.Logic <> :type_scope:x_'='_x not
R30832:30835 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30841:30841 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30831:30831 sf.Logic <> n var
R30837:30839 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30836:30836 sf.Logic <> m var
R30840:30840 sf.Logic <> p var
R30845:30845 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30851:30854 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30847:30849 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30846:30846 sf.Logic <> p var
R30850:30850 sf.Logic <> m var
R30855:30855 sf.Logic <> n var
R31128:31136 sf.Induction <> plus_comm thm
R31128:31136 sf.Induction <> plus_comm thm
R31128:31136 sf.Induction <> plus_comm thm
R31149:31157 sf.Induction <> plus_comm thm
R31149:31157 sf.Induction <> plus_comm thm
R31149:31157 sf.Induction <> plus_comm thm
R31426:31434 sf.Induction <> plus_comm thm
R31426:31434 sf.Induction <> plus_comm thm
R31426:31434 sf.Induction <> plus_comm thm
R31456:31458 Coq.Init.Logic <> :type_scope:x_'='_x not
R31452:31454 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31460:31462 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31456:31458 Coq.Init.Logic <> :type_scope:x_'='_x not
R31452:31454 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31460:31462 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31479:31487 sf.Induction <> plus_comm thm
R31479:31487 sf.Induction <> plus_comm thm
R31479:31487 sf.Induction <> plus_comm thm
prf 31746:31761 <> plus_comm3_take2
R31792:31794 Coq.Init.Logic <> :type_scope:x_'='_x not
R31782:31785 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31791:31791 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31781:31781 sf.Logic <> n var
R31787:31789 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31786:31786 sf.Logic <> m var
R31790:31790 sf.Logic <> p var
R31795:31795 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31801:31804 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31797:31799 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31796:31796 sf.Logic <> p var
R31800:31800 sf.Logic <> m var
R31805:31805 sf.Logic <> n var
R31841:31849 sf.Induction <> plus_comm thm
R31841:31849 sf.Induction <> plus_comm thm
R31841:31849 sf.Induction <> plus_comm thm
R31863:31871 sf.Induction <> plus_comm thm
R31863:31871 sf.Induction <> plus_comm thm
R31863:31871 sf.Induction <> plus_comm thm
def 32350:32369 <> lemma_application_ex
R32387:32389 Coq.Init.Datatypes <> nat ind
R32398:32401 sf.Poly <> list ind
R32403:32405 Coq.Init.Datatypes <> nat ind
R32443:32450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32452:32454 Coq.Init.Logic <> :type_scope:x_'='_x not
R32451:32451 sf.Logic <> n var
R32413:32414 sf.Logic <> In def
R32419:32421 sf.Poly <> map def
R32440:32441 sf.Logic <> ns var
R32434:32436 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32433:32433 sf.Logic <> m var
R32416:32416 sf.Logic <> n var
R32494:32498 sf.Logic <> proj1 thm
R32505:32514 sf.Logic <> In_map_iff thm
R32494:32498 sf.Logic <> proj1 thm
R32505:32514 sf.Logic <> In_map_iff thm
R32566:32573 sf.Induction <> mult_0_r thm
R32566:32573 sf.Induction <> mult_0_r thm
R32566:32573 sf.Induction <> mult_0_r thm
def 34426:34445 <> function_equality_ex
R34455:34457 Coq.Init.Logic <> :type_scope:x_'='_x not
R34449:34452 Coq.Init.Peano <> plus syndef
R34458:34461 Coq.Init.Peano <> plus syndef
R34464:34467 Coq.Init.Peano <> pred syndef
ax 35323:35347 <> functional_extensionality
R35414:35417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35418:35418 sf.Logic <> Y var
R35413:35413 sf.Logic <> X var
R35424:35424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35448:35452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35454:35456 Coq.Init.Logic <> :type_scope:x_'='_x not
R35453:35453 sf.Logic <> f var
R35457:35457 sf.Logic <> g var
R35435:35435 sf.Logic <> X var
R35442:35444 Coq.Init.Logic <> :type_scope:x_'='_x not
R35439:35439 sf.Logic <> f var
R35441:35441 sf.Logic <> x var
R35445:35445 sf.Logic <> g var
R35447:35447 sf.Logic <> x var
prf 35743:35755 <> plus_comm_ext
R35763:35765 Coq.Init.Logic <> :type_scope:x_'='_x not
R35759:35762 Coq.Init.Peano <> plus syndef
R35778:35780 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35777:35777 sf.Logic <> m var
R35781:35781 sf.Logic <> n var
R35799:35823 sf.Logic <> functional_extensionality prfax
R35799:35823 sf.Logic <> functional_extensionality prfax
R35844:35868 sf.Logic <> functional_extensionality prfax
R35844:35868 sf.Logic <> functional_extensionality prfax
R35889:35897 sf.Induction <> plus_comm thm
R35889:35897 sf.Induction <> plus_comm thm
R36668:36680 sf.Logic <> plus_comm_ext thm
def 37216:37225 <> rev_append
R37240:37243 sf.Poly <> list ind
R37245:37245 sf.Logic <> X var
R37250:37253 sf.Poly <> list ind
R37255:37255 sf.Logic <> X var
R37268:37269 sf.Logic <> l1 var
R37280:37281 sf.Poly <> ::'['_']' not
R37286:37287 sf.Logic <> l2 var
R37294:37297 sf.Poly <> ::x_'::'_x not
R37305:37314 sf.Logic <> rev_append def
R37322:37325 sf.Poly <> ::x_'::'_x not
R37326:37327 sf.Logic <> l2 var
def 37349:37354 <> tr_rev
R37365:37368 sf.Poly <> list ind
R37370:37370 sf.Logic <> X var
R37375:37378 sf.Poly <> list ind
R37380:37380 sf.Logic <> X var
R37387:37396 sf.Logic <> rev_append def
R37400:37401 sf.Poly <> ::'['_']' not
R37398:37398 sf.Logic <> l var
prf 37755:37768 <> tr_rev_correct
R37791:37793 Coq.Init.Logic <> :type_scope:x_'='_x not
R37783:37788 sf.Logic <> tr_rev def
R37790:37790 sf.Logic <> X var
R37795:37797 sf.Poly <> rev def
R37799:37799 sf.Logic <> X var
R37818:37842 sf.Logic <> functional_extensionality prfax
R37818:37842 sf.Logic <> functional_extensionality prfax
R37854:37859 sf.Logic <> tr_rev def
R37886:37889 sf.Poly <> list ind
R37909:37909 Coq.Init.Logic <> :type_scope:x_'='_x not
R37893:37902 sf.Logic <> rev_append def
R37907:37908 sf.Logic <> x2 var
R37904:37905 sf.Logic <> x1 var
R37916:37917 sf.Poly <> ::x_'++'_x not
R37910:37912 sf.Poly <> rev def
R37914:37915 sf.Logic <> x1 var
R37918:37919 sf.Logic <> x2 var
R37886:37889 sf.Poly <> list ind
R37909:37909 Coq.Init.Logic <> :type_scope:x_'='_x not
R37893:37902 sf.Logic <> rev_append def
R37907:37908 sf.Logic <> x2 var
R37904:37905 sf.Logic <> x1 var
R37916:37917 sf.Poly <> ::x_'++'_x not
R37910:37912 sf.Poly <> rev def
R37914:37915 sf.Logic <> x1 var
R37918:37919 sf.Logic <> x2 var
R37997:37998 sf.Poly <> ::x_'::'_x not
R37997:37998 sf.Poly <> ::x_'::'_x not
R37997:37998 sf.Poly <> ::x_'::'_x not
R38015:38023 sf.Poly <> app_assoc thm
R38015:38023 sf.Poly <> app_assoc thm
R38015:38023 sf.Poly <> app_assoc thm
R38072:38073 sf.Poly <> ::'['_']' not
R38072:38073 sf.Poly <> ::'['_']' not
R38072:38073 sf.Poly <> ::'['_']' not
R38083:38091 sf.Poly <> app_nil_r thm
R38083:38091 sf.Poly <> app_nil_r thm
prf 38824:38835 <> evenb_double
R38865:38867 Coq.Init.Logic <> :type_scope:x_'='_x not
R38849:38853 sf.Basics <> evenb def
R38856:38861 sf.Induction <> double def
R38863:38863 sf.Logic <> k var
R38868:38871 sf.Basics <> true constr
prf 39025:39041 <> evenb_double_conv
R39057:39063 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39065:39066 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39068:39070 Coq.Init.Logic <> :type_scope:x_'='_x not
R39067:39067 sf.Logic <> n var
R39074:39078 sf.Basics <> evenb def
R39080:39080 sf.Logic <> n var
R39117:39117 Coq.Init.Datatypes <> S constr
R39120:39125 sf.Induction <> double def
R39127:39127 sf.Logic <> k var
R39087:39092 sf.Induction <> double def
R39094:39094 sf.Logic <> k var
R39288:39292 sf.Basics <> evenb def
R39288:39292 sf.Basics <> evenb def
R39319:39325 sf.Induction <> evenb_S thm
R39319:39325 sf.Induction <> evenb_S thm
R39319:39325 sf.Induction <> evenb_S thm
R39409:39415 sf.Induction <> evenb_S thm
R39409:39415 sf.Induction <> evenb_S thm
R39409:39415 sf.Induction <> evenb_S thm
R39459:39459 Coq.Init.Datatypes <> S constr
R39459:39459 Coq.Init.Datatypes <> S constr
prf 39520:39533 <> even_bool_prop
R39563:39567 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R39556:39558 Coq.Init.Logic <> :type_scope:x_'='_x not
R39549:39553 sf.Basics <> evenb def
R39555:39555 sf.Logic <> n var
R39559:39562 sf.Basics <> true constr
R39568:39574 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39576:39577 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39579:39581 Coq.Init.Logic <> :type_scope:x_'='_x not
R39578:39578 sf.Logic <> n var
R39582:39587 sf.Induction <> double def
R39589:39589 sf.Logic <> k var
R39642:39658 sf.Logic <> evenb_double_conv thm
R39642:39658 sf.Logic <> evenb_double_conv thm
R39761:39772 sf.Logic <> evenb_double thm
R39761:39772 sf.Logic <> evenb_double thm
prf 39977:39992 <> beq_nat_true_iff
R40011:40013 Coq.Init.Datatypes <> nat ind
R40038:40042 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R40031:40033 Coq.Init.Logic <> :type_scope:x_'='_x not
R40018:40024 sf.Basics <> beq_nat def
R40029:40030 sf.Logic <> n2 var
R40026:40027 sf.Logic <> n1 var
R40034:40037 sf.Basics <> true constr
R40045:40047 Coq.Init.Logic <> :type_scope:x_'='_x not
R40043:40044 sf.Logic <> n1 var
R40048:40049 sf.Logic <> n2 var
R40092:40103 sf.Tactics <> beq_nat_true thm
R40092:40103 sf.Tactics <> beq_nat_true thm
R40142:40153 sf.Induction <> beq_nat_refl thm
R40142:40153 sf.Induction <> beq_nat_refl thm
R40142:40153 sf.Induction <> beq_nat_refl thm
def 41389:41401 <> is_even_prime
R41414:41416 Coq.Init.Logic <> :type_scope:x_'='_x not
R41413:41413 sf.Logic <> n var
R41436:41440 sf.Basics <> false constr
R41424:41427 sf.Basics <> true constr
def 42971:42979 <> even_1000
R42983:42989 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42991:42992 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42997:42999 Coq.Init.Logic <> :type_scope:x_'='_x not
R43000:43005 sf.Induction <> double def
R43007:43007 sf.Logic <> k var
def 43242:43251 <> even_1000'
R43265:43267 Coq.Init.Logic <> :type_scope:x_'='_x not
R43255:43259 sf.Basics <> evenb def
R43268:43271 sf.Basics <> true constr
def 43484:43494 <> even_1000''
R43498:43504 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43506:43507 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43512:43514 Coq.Init.Logic <> :type_scope:x_'='_x not
R43515:43520 sf.Induction <> double def
R43522:43522 sf.Logic <> k var
R43538:43551 sf.Logic <> even_bool_prop thm
R43538:43551 sf.Logic <> even_bool_prop thm
prf 44267:44279 <> andb_true_iff
R44296:44299 sf.Basics <> bool ind
R44319:44323 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44312:44314 Coq.Init.Logic <> :type_scope:x_'='_x not
R44306:44309 sf.Basics <> ::x_'&&'_x not
R44304:44305 sf.Logic <> b1 var
R44310:44311 sf.Logic <> b2 var
R44315:44318 sf.Basics <> true constr
R44333:44336 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44326:44328 Coq.Init.Logic <> :type_scope:x_'='_x not
R44324:44325 sf.Logic <> b1 var
R44329:44332 sf.Basics <> true constr
R44339:44341 Coq.Init.Logic <> :type_scope:x_'='_x not
R44337:44338 sf.Logic <> b2 var
R44342:44345 sf.Basics <> true constr
prf 44743:44754 <> orb_true_iff
R44789:44793 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44782:44784 Coq.Init.Logic <> :type_scope:x_'='_x not
R44776:44779 sf.Basics <> ::x_'||'_x not
R44774:44775 sf.Logic <> b1 var
R44780:44781 sf.Logic <> b2 var
R44785:44788 sf.Basics <> true constr
R44803:44806 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R44796:44798 Coq.Init.Logic <> :type_scope:x_'='_x not
R44794:44795 sf.Logic <> b1 var
R44799:44802 sf.Basics <> true constr
R44809:44811 Coq.Init.Logic <> :type_scope:x_'='_x not
R44807:44808 sf.Logic <> b2 var
R44812:44815 sf.Basics <> true constr
prf 45649:45665 <> beq_nat_false_iff
R45682:45684 Coq.Init.Datatypes <> nat ind
R45708:45712 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45700:45702 Coq.Init.Logic <> :type_scope:x_'='_x not
R45689:45695 sf.Basics <> beq_nat def
R45699:45699 sf.Logic <> y var
R45697:45697 sf.Logic <> x var
R45703:45707 sf.Basics <> false constr
R45714:45717 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R45713:45713 sf.Logic <> x var
R45718:45718 sf.Logic <> y var
def 46252:46259 <> beq_list
R46273:46276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46278:46281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46282:46285 sf.Basics <> bool ind
R46277:46277 sf.Logic <> A var
R46272:46272 sf.Logic <> A var
R46306:46309 sf.Poly <> list ind
R46311:46311 sf.Logic <> A var
R46316:46319 sf.Basics <> bool ind
R46332:46333 sf.Logic <> l1 var
R46343:46345 sf.Poly <> nil constr
R46354:46355 sf.Logic <> l2 var
R46371:46373 sf.Poly <> nil constr
R46376:46379 sf.Basics <> true constr
R46393:46397 sf.Basics <> false constr
R46415:46416 sf.Poly <> ::x_'::'_x not
R46428:46429 sf.Logic <> l2 var
R46448:46450 sf.Poly <> nil constr
R46453:46457 sf.Basics <> false constr
R46472:46473 sf.Poly <> ::x_'::'_x not
R46480:46480 sf.Basics <> ::x_'&&'_x not
R46488:46493 sf.Basics <> ::x_'&&'_x not
R46514:46514 sf.Basics <> ::x_'&&'_x not
R46481:46483 sf.Logic <> beq var
R46494:46501 sf.Logic <> beq_list def
R46503:46505 sf.Logic <> beq var
prf 46565:46581 <> beq_list_true_iff
R46604:46607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46609:46612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46613:46616 sf.Basics <> bool ind
R46608:46608 sf.Logic <> A var
R46603:46603 sf.Logic <> A var
R46624:46624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46667:46675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46715:46719 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46708:46710 Coq.Init.Logic <> :type_scope:x_'='_x not
R46690:46697 sf.Logic <> beq_list def
R46706:46707 sf.Logic <> l2 var
R46703:46704 sf.Logic <> l1 var
R46699:46701 sf.Logic <> beq var
R46711:46714 sf.Basics <> true constr
R46722:46724 Coq.Init.Logic <> :type_scope:x_'='_x not
R46720:46721 sf.Logic <> l1 var
R46725:46726 sf.Logic <> l2 var
R46655:46659 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46648:46650 Coq.Init.Logic <> :type_scope:x_'='_x not
R46639:46641 sf.Logic <> beq var
R46646:46647 sf.Logic <> a2 var
R46643:46644 sf.Logic <> a1 var
R46651:46654 sf.Basics <> true constr
R46662:46664 Coq.Init.Logic <> :type_scope:x_'='_x not
R46660:46661 sf.Logic <> a1 var
R46665:46666 sf.Logic <> a2 var
R47148:47151 sf.Basics <> andb def
R47393:47396 sf.Basics <> andb def
R47451:47451 Coq.Init.Logic <> :type_scope:x_'='_x not
R47451:47451 Coq.Init.Logic <> :type_scope:x_'='_x not
def 47765:47771 <> forallb
R47793:47796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47797:47800 sf.Basics <> bool ind
R47792:47792 sf.Logic <> X var
R47808:47811 sf.Poly <> list ind
R47813:47813 sf.Logic <> X var
R47818:47821 sf.Basics <> bool ind
R47834:47834 sf.Logic <> l var
R47845:47846 sf.Poly <> ::'['_']' not
R47851:47854 sf.Basics <> true constr
R47861:47864 sf.Poly <> ::x_'::'_x not
R47871:47874 sf.Basics <> andb def
R47886:47892 sf.Logic <> forallb def
R47894:47897 sf.Logic <> test var
R47877:47880 sf.Logic <> test var
prf 48025:48040 <> forallb_true_iff
R48063:48066 sf.Poly <> list ind
R48068:48068 sf.Logic <> X var
R48096:48100 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48089:48091 Coq.Init.Logic <> :type_scope:x_'='_x not
R48075:48081 sf.Logic <> forallb def
R48088:48088 sf.Logic <> l var
R48083:48086 sf.Logic <> test var
R48092:48095 sf.Basics <> true constr
R48101:48103 sf.Logic <> All def
R48130:48130 sf.Logic <> l var
R48121:48123 Coq.Init.Logic <> :type_scope:x_'='_x not
R48115:48118 sf.Logic <> test var
R48120:48120 sf.Logic <> x var
R48124:48127 sf.Basics <> true constr
R48228:48231 sf.Basics <> andb def
R48508:48511 sf.Basics <> andb def
def 49217:49231 <> excluded_middle
R49256:49259 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R49255:49255 sf.Logic <> P var
R49260:49261 Coq.Init.Logic <> :type_scope:'~'_x not
R49262:49262 sf.Logic <> P var
prf 50094:50119 <> restricted_excluded_middle
R50137:50137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50152:50156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50158:50161 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50157:50157 sf.Logic <> P var
R50162:50163 Coq.Init.Logic <> :type_scope:'~'_x not
R50164:50164 sf.Logic <> P var
R50139:50143 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R50138:50138 sf.Logic <> P var
R50145:50147 Coq.Init.Logic <> :type_scope:x_'='_x not
R50144:50144 sf.Logic <> b var
R50148:50151 sf.Basics <> true constr
prf 54465:54491 <> excluded_middle_irrefutable
R54514:54515 Coq.Init.Logic <> :type_scope:'~'_x not
R54516:54518 Coq.Init.Logic <> :type_scope:'~'_x not
R54527:54527 Coq.Init.Logic <> :type_scope:'~'_x not
R54520:54523 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54519:54519 sf.Logic <> P var
R54524:54525 Coq.Init.Logic <> :type_scope:'~'_x not
R54526:54526 sf.Logic <> P var
R54554:54563 sf.Logic <> double_neg thm
R54554:54563 sf.Logic <> double_neg thm
prf 55022:55036 <> not_exists_dist
R55057:55062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55085:55088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55084:55084 sf.Logic <> X var
R55119:55123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55137:55137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55134:55134 sf.Logic <> P var
R55136:55136 sf.Logic <> x var
R55100:55102 Coq.Init.Logic <> :type_scope:'~'_x not
R55118:55118 Coq.Init.Logic <> :type_scope:'~'_x not
R55103:55109 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55111:55112 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55113:55114 Coq.Init.Logic <> :type_scope:'~'_x not
R55115:55115 sf.Logic <> P var
R55117:55117 sf.Logic <> x var
R55042:55056 sf.Logic <> excluded_middle def
def 55749:55754 <> peirce
R55779:55779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55789:55791 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55792:55792 sf.Logic <> P var
R55780:55780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55785:55787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55788:55788 sf.Logic <> P var
R55782:55783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55784:55784 sf.Logic <> Q var
R55781:55781 sf.Logic <> P var
def 55807:55833 <> double_negation_elimination
R55858:55861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55862:55862 sf.Logic <> P var
R55855:55855 Coq.Init.Logic <> :type_scope:'~'_x not
R55856:55856 Coq.Init.Logic <> :type_scope:'~'_x not
R55857:55857 sf.Logic <> P var
def 55877:55897 <> de_morgan_not_and_not
R55932:55935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55937:55938 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55936:55936 sf.Logic <> P var
R55939:55939 sf.Logic <> Q var
R55921:55922 Coq.Init.Logic <> :type_scope:'~'_x not
R55931:55931 Coq.Init.Logic <> :type_scope:'~'_x not
R55925:55928 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55923:55923 Coq.Init.Logic <> :type_scope:'~'_x not
R55924:55924 sf.Logic <> P var
R55929:55929 Coq.Init.Logic <> :type_scope:'~'_x not
R55930:55930 sf.Logic <> Q var
def 55956:55968 <> implies_to_or
R55992:55992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55997:56002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56008:56008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56005:56006 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56003:56003 Coq.Init.Logic <> :type_scope:'~'_x not
R56004:56004 sf.Logic <> P var
R56007:56007 sf.Logic <> Q var
R55994:55995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55996:55996 sf.Logic <> Q var
R55993:55993 sf.Logic <> P var
