DIGEST dad8b5255de1bcfcbfa49f1c3f1a4fc4
Fsf.ImpCEvalFun
R521:535 Coq.omega.Omega <> <> lib
R553:567 Coq.Arith.Arith <> <> lib
R585:587 sf.Imp <> <> lib
R605:608 sf.Maps <> <> lib
def 714:724 <> ceval_step1
R732:736 sf.Imp <> state def
R744:746 sf.Imp <> com ind
R751:755 sf.Imp <> state def
R768:768 sf.ImpCEvalFun <> c var
R781:784 sf.Imp <> ::'SKIP' not
R797:798 sf.ImpCEvalFun <> st var
R807:811 sf.Imp <> ::x_'::='_x not
R826:833 sf.Maps <> t_update def
R841:845 sf.Imp <> aeval def
R847:848 sf.ImpCEvalFun <> st var
R835:836 sf.ImpCEvalFun <> st var
R862:865 sf.Imp <> ::x_';;'_x not
R891:901 sf.ImpCEvalFun <> ceval_step1 def
R903:904 sf.ImpCEvalFun <> st var
R920:930 sf.ImpCEvalFun <> ceval_step1 def
R932:934 sf.ImpCEvalFun <> st' var
R945:948 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R950:955 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R958:963 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R966:968 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R985:989 sf.Imp <> beval def
R991:992 sf.ImpCEvalFun <> st var
R1045:1055 sf.ImpCEvalFun <> ceval_step1 def
R1057:1058 sf.ImpCEvalFun <> st var
R1012:1022 sf.ImpCEvalFun <> ceval_step1 def
R1024:1025 sf.ImpCEvalFun <> st var
R1069:1074 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1077:1080 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1083:1086 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R1099:1100 sf.ImpCEvalFun <> st var
def 3092:3102 <> ceval_step2
R3110:3114 sf.Imp <> state def
R3122:3124 sf.Imp <> com ind
R3132:3134 Coq.Init.Datatypes <> nat ind
R3139:3143 sf.Imp <> state def
R3156:3156 sf.ImpCEvalFun <> i var
R3167:3167 Coq.Init.Datatypes <> O constr
R3172:3182 sf.Imp <> empty_state def
R3188:3188 Coq.Init.Datatypes <> S constr
R3206:3206 sf.ImpCEvalFun <> c var
R3221:3224 sf.Imp <> ::'SKIP' not
R3239:3240 sf.ImpCEvalFun <> st var
R3251:3255 sf.Imp <> ::x_'::='_x not
R3272:3279 sf.Maps <> t_update def
R3287:3291 sf.Imp <> aeval def
R3293:3294 sf.ImpCEvalFun <> st var
R3281:3282 sf.ImpCEvalFun <> st var
R3310:3313 sf.Imp <> ::x_';;'_x not
R3341:3351 sf.ImpCEvalFun <> ceval_step2 def
R3353:3354 sf.ImpCEvalFun <> st var
R3375:3385 sf.ImpCEvalFun <> ceval_step2 def
R3387:3389 sf.ImpCEvalFun <> st' var
R3405:3408 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3410:3415 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3418:3423 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3426:3428 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R3447:3451 sf.Imp <> beval def
R3453:3454 sf.ImpCEvalFun <> st var
R3514:3524 sf.ImpCEvalFun <> ceval_step2 def
R3526:3527 sf.ImpCEvalFun <> st var
R3476:3486 sf.ImpCEvalFun <> ceval_step2 def
R3488:3489 sf.ImpCEvalFun <> st var
R3543:3548 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3551:3554 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3557:3560 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R3579:3583 sf.Imp <> beval def
R3585:3586 sf.ImpCEvalFun <> st var
R3693:3694 sf.ImpCEvalFun <> st var
R3618:3628 sf.ImpCEvalFun <> ceval_step2 def
R3630:3631 sf.ImpCEvalFun <> st var
R3657:3667 sf.ImpCEvalFun <> ceval_step2 def
R3673:3673 sf.ImpCEvalFun <> c var
R3669:3671 sf.ImpCEvalFun <> st' var
def 4496:4506 <> ceval_step3
R4514:4518 sf.Imp <> state def
R4526:4528 sf.Imp <> com ind
R4536:4538 Coq.Init.Datatypes <> nat ind
R4563:4568 Coq.Init.Datatypes <> option ind
R4570:4574 sf.Imp <> state def
R4587:4587 sf.ImpCEvalFun <> i var
R4598:4598 Coq.Init.Datatypes <> O constr
R4603:4606 Coq.Init.Datatypes <> None constr
R4612:4612 Coq.Init.Datatypes <> S constr
R4630:4630 sf.ImpCEvalFun <> c var
R4645:4648 sf.Imp <> ::'SKIP' not
R4663:4666 Coq.Init.Datatypes <> Some constr
R4668:4669 sf.ImpCEvalFun <> st var
R4680:4684 sf.Imp <> ::x_'::='_x not
R4701:4704 Coq.Init.Datatypes <> Some constr
R4707:4714 sf.Maps <> t_update def
R4722:4726 sf.Imp <> aeval def
R4728:4729 sf.ImpCEvalFun <> st var
R4716:4717 sf.ImpCEvalFun <> st var
R4746:4749 sf.Imp <> ::x_';;'_x not
R4773:4783 sf.ImpCEvalFun <> ceval_step3 def
R4785:4786 sf.ImpCEvalFun <> st var
R4812:4815 Coq.Init.Datatypes <> Some constr
R4824:4834 sf.ImpCEvalFun <> ceval_step3 def
R4858:4861 Coq.Init.Datatypes <> None constr
R4866:4869 Coq.Init.Datatypes <> None constr
R4893:4896 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4898:4903 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4906:4911 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4914:4916 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4935:4939 sf.Imp <> beval def
R4941:4942 sf.ImpCEvalFun <> st var
R5002:5012 sf.ImpCEvalFun <> ceval_step3 def
R5014:5015 sf.ImpCEvalFun <> st var
R4964:4974 sf.ImpCEvalFun <> ceval_step3 def
R4976:4977 sf.ImpCEvalFun <> st var
R5031:5036 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5039:5042 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5045:5048 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R5067:5071 sf.Imp <> beval def
R5073:5074 sf.ImpCEvalFun <> st var
R5243:5246 Coq.Init.Datatypes <> Some constr
R5248:5249 sf.ImpCEvalFun <> st var
R5102:5112 sf.ImpCEvalFun <> ceval_step3 def
R5114:5115 sf.ImpCEvalFun <> st var
R5146:5149 Coq.Init.Datatypes <> Some constr
R5158:5168 sf.ImpCEvalFun <> ceval_step3 def
R5174:5174 sf.ImpCEvalFun <> c var
R5196:5199 Coq.Init.Datatypes <> None constr
R5204:5207 Coq.Init.Datatypes <> None constr
R5520:5523 Coq.Init.Datatypes <> Some constr
R5544:5547 Coq.Init.Datatypes <> None constr
R5552:5555 Coq.Init.Datatypes <> None constr
not 5460:5460 <> ::'LETOPT'_x_'<=='_x_'IN'_x
def 5618:5627 <> ceval_step
R5635:5639 sf.Imp <> state def
R5647:5649 sf.Imp <> com ind
R5657:5659 Coq.Init.Datatypes <> nat ind
R5684:5689 Coq.Init.Datatypes <> option ind
R5691:5695 sf.Imp <> state def
R5708:5708 sf.ImpCEvalFun <> i var
R5719:5719 Coq.Init.Datatypes <> O constr
R5724:5727 Coq.Init.Datatypes <> None constr
R5733:5733 Coq.Init.Datatypes <> S constr
R5751:5751 sf.ImpCEvalFun <> c var
R5766:5769 sf.Imp <> ::'SKIP' not
R5784:5787 Coq.Init.Datatypes <> Some constr
R5789:5790 sf.ImpCEvalFun <> st var
R5801:5805 sf.Imp <> ::x_'::='_x not
R5822:5825 Coq.Init.Datatypes <> Some constr
R5828:5835 sf.Maps <> t_update def
R5843:5847 sf.Imp <> aeval def
R5849:5850 sf.ImpCEvalFun <> st var
R5837:5838 sf.ImpCEvalFun <> st var
R5867:5870 sf.Imp <> ::x_';;'_x not
R5887:5893 sf.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5897:5901 sf.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5921:5934 sf.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R5902:5911 sf.ImpCEvalFun <> ceval_step def
R5913:5914 sf.ImpCEvalFun <> st var
R5935:5944 sf.ImpCEvalFun <> ceval_step def
R5964:5967 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5969:5974 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5977:5982 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R5985:5987 sf.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6006:6010 sf.Imp <> beval def
R6012:6013 sf.ImpCEvalFun <> st var
R6072:6081 sf.ImpCEvalFun <> ceval_step def
R6083:6084 sf.ImpCEvalFun <> st var
R6035:6044 sf.ImpCEvalFun <> ceval_step def
R6046:6047 sf.ImpCEvalFun <> st var
R6100:6105 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6108:6111 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6114:6117 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6136:6140 sf.Imp <> beval def
R6142:6143 sf.ImpCEvalFun <> st var
R6252:6255 Coq.Init.Datatypes <> Some constr
R6257:6258 sf.ImpCEvalFun <> st var
R6164:6170 sf.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6174:6178 sf.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6198:6216 sf.ImpCEvalFun <> ::'LETOPT'_x_'<=='_x_'IN'_x not
R6179:6188 sf.ImpCEvalFun <> ceval_step def
R6190:6191 sf.ImpCEvalFun <> st var
R6217:6226 sf.ImpCEvalFun <> ceval_step def
R6232:6232 sf.ImpCEvalFun <> c var
def 6287:6296 <> test_ceval
R6302:6306 sf.Imp <> state def
R6312:6314 sf.Imp <> com ind
R6328:6337 sf.ImpCEvalFun <> ceval_step def
R6342:6342 sf.ImpCEvalFun <> c var
R6339:6340 sf.ImpCEvalFun <> st var
R6357:6360 Coq.Init.Datatypes <> None constr
R6368:6371 Coq.Init.Datatypes <> None constr
R6377:6380 Coq.Init.Datatypes <> Some constr
R6388:6391 Coq.Init.Datatypes <> Some constr
R6393:6393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6398:6399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6404:6405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6410:6410 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6394:6395 sf.ImpCEvalFun <> st var
R6397:6397 sf.Imp <> X def
R6400:6401 sf.ImpCEvalFun <> st var
R6403:6403 sf.Imp <> Y def
R6406:6407 sf.ImpCEvalFun <> st var
R6409:6409 sf.Imp <> Z def
def 6885:6892 <> pup_to_n
R6896:6898 sf.Imp <> com ind
R6916:6917 sf.Imp <> ::x_';;'_x not
R6907:6909 sf.Imp <> ::x_'::='_x not
R6906:6906 sf.Imp <> Y def
R6910:6913 sf.Imp <> ANum constr
R6918:6924 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6945:6949 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7004:7007 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R6925:6927 sf.Imp <> BLe constr
R6939:6941 sf.Imp <> AId constr
R6943:6943 sf.Imp <> X def
R6930:6933 sf.Imp <> ANum constr
R6975:6976 sf.Imp <> ::x_';;'_x not
R6951:6953 sf.Imp <> ::x_'::='_x not
R6950:6950 sf.Imp <> Y def
R6954:6958 sf.Imp <> APlus constr
R6969:6971 sf.Imp <> AId constr
R6973:6973 sf.Imp <> X def
R6961:6963 sf.Imp <> AId constr
R6965:6965 sf.Imp <> Y def
R6978:6980 sf.Imp <> ::x_'::='_x not
R6977:6977 sf.Imp <> X def
R6981:6986 sf.Imp <> AMinus constr
R6997:7000 sf.Imp <> ANum constr
R6989:6991 sf.Imp <> AId constr
R6993:6993 sf.Imp <> X def
def 7077:7086 <> pup_to_n_1
R7138:7142 Coq.Init.Logic <> :type_scope:x_'='_x not
R7092:7101 sf.ImpCEvalFun <> test_ceval def
R7130:7137 sf.ImpCEvalFun <> pup_to_n def
R7104:7111 sf.Maps <> t_update def
R7125:7125 sf.Imp <> X def
R7113:7123 sf.Imp <> empty_state def
R7143:7146 Coq.Init.Datatypes <> Some constr
R7148:7148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7150:7151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7154:7155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7157:7157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 7402:7411 <> check_even
R7429:7430 sf.Imp <> ::x_';;'_x not
R7420:7422 sf.Imp <> ::x_'::='_x not
R7419:7419 sf.Imp <> Z def
R7423:7426 sf.Imp <> ANum constr
R7431:7436 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7457:7460 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7517:7520 sf.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7437:7439 sf.Imp <> BLe constr
R7451:7453 sf.Imp <> AId constr
R7455:7455 sf.Imp <> X def
R7442:7445 sf.Imp <> ANum constr
R7488:7489 sf.Imp <> ::x_';;'_x not
R7462:7464 sf.Imp <> ::x_'::='_x not
R7461:7461 sf.Imp <> Z def
R7465:7470 sf.Imp <> AMinus constr
R7482:7484 sf.Imp <> AId constr
R7486:7486 sf.Imp <> Z def
R7473:7476 sf.Imp <> ANum constr
R7491:7493 sf.Imp <> ::x_'::='_x not
R7490:7490 sf.Imp <> X def
R7494:7499 sf.Imp <> AMinus constr
R7510:7513 sf.Imp <> ANum constr
R7502:7504 sf.Imp <> AId constr
R7506:7506 sf.Imp <> X def
def 7551:7562 <> check_even_1
R7616:7616 Coq.Init.Logic <> :type_scope:x_'='_x not
R7567:7576 sf.ImpCEvalFun <> test_ceval def
R7606:7615 sf.ImpCEvalFun <> check_even def
R7579:7586 sf.Maps <> t_update def
R7600:7600 sf.Imp <> X def
R7588:7598 sf.Imp <> empty_state def
R7617:7620 Coq.Init.Datatypes <> Some constr
R7622:7622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7624:7624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7626:7626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7628:7628 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 8015:8031 <> ceval_step__ceval
R8057:8057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8096:8106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8108:8110 sf.Imp <> ::x_'/'_x_'\\'_x not
R8113:8116 sf.Imp <> ::x_'/'_x_'\\'_x not
R8107:8107 sf.ImpCEvalFun <> c var
R8111:8112 sf.ImpCEvalFun <> st var
R8117:8119 sf.ImpCEvalFun <> st' var
R8058:8064 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8066:8067 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8085:8087 Coq.Init.Logic <> :type_scope:x_'='_x not
R8068:8077 sf.ImpCEvalFun <> ceval_step def
R8084:8084 sf.ImpCEvalFun <> i var
R8082:8082 sf.ImpCEvalFun <> c var
R8079:8080 sf.ImpCEvalFun <> st var
R8088:8091 Coq.Init.Datatypes <> Some constr
R8093:8095 sf.ImpCEvalFun <> st' var
R8498:8503 sf.Imp <> E_Skip constr
R8498:8503 sf.Imp <> E_Skip constr
R8530:8534 sf.Imp <> E_Ass constr
R8530:8534 sf.Imp <> E_Ass constr
R8586:8595 sf.ImpCEvalFun <> ceval_step def
R8586:8595 sf.ImpCEvalFun <> ceval_step def
R8687:8691 sf.Imp <> E_Seq constr
R8687:8691 sf.Imp <> E_Seq constr
R8906:8910 sf.Imp <> beval def
R8906:8910 sf.Imp <> beval def
R8969:8976 sf.Imp <> E_IfTrue constr
R8969:8976 sf.Imp <> E_IfTrue constr
R9082:9090 sf.Imp <> E_IfFalse constr
R9082:9090 sf.Imp <> E_IfFalse constr
R9185:9189 sf.Imp <> beval def
R9185:9189 sf.Imp <> beval def
R9252:9261 sf.ImpCEvalFun <> ceval_step def
R9252:9261 sf.ImpCEvalFun <> ceval_step def
R9329:9339 sf.Imp <> E_WhileLoop constr
R9329:9339 sf.Imp <> E_WhileLoop constr
R9597:9606 sf.Imp <> E_WhileEnd constr
R9597:9606 sf.Imp <> E_WhileEnd constr
prf 10125:10139 <> ceval_step_more
R10175:10180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10210:10215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10234:10236 Coq.Init.Logic <> :type_scope:x_'='_x not
R10216:10225 sf.ImpCEvalFun <> ceval_step def
R10232:10233 sf.ImpCEvalFun <> i2 var
R10230:10230 sf.ImpCEvalFun <> c var
R10227:10228 sf.ImpCEvalFun <> st var
R10237:10240 Coq.Init.Datatypes <> Some constr
R10242:10244 sf.ImpCEvalFun <> st' var
R10199:10201 Coq.Init.Logic <> :type_scope:x_'='_x not
R10181:10190 sf.ImpCEvalFun <> ceval_step def
R10197:10198 sf.ImpCEvalFun <> i1 var
R10195:10195 sf.ImpCEvalFun <> c var
R10192:10193 sf.ImpCEvalFun <> st var
R10202:10205 Coq.Init.Datatypes <> Some constr
R10207:10209 sf.ImpCEvalFun <> st' var
R10169:10172 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10167:10168 sf.ImpCEvalFun <> i1 var
R10173:10174 sf.ImpCEvalFun <> i2 var
R10449:10452 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10449:10452 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R10698:10707 sf.ImpCEvalFun <> ceval_step def
R10698:10707 sf.ImpCEvalFun <> ceval_step def
R11035:11039 sf.Imp <> beval def
R11035:11039 sf.Imp <> beval def
R11162:11166 sf.Imp <> beval def
R11162:11166 sf.Imp <> beval def
R11207:11216 sf.ImpCEvalFun <> ceval_step def
R11207:11216 sf.ImpCEvalFun <> ceval_step def
prf 11718:11734 <> ceval__ceval_step
R11773:11782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11783:11789 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11791:11792 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11810:11812 Coq.Init.Logic <> :type_scope:x_'='_x not
R11793:11802 sf.ImpCEvalFun <> ceval_step def
R11809:11809 sf.ImpCEvalFun <> i var
R11807:11807 sf.ImpCEvalFun <> c var
R11804:11805 sf.ImpCEvalFun <> st var
R11813:11816 Coq.Init.Datatypes <> Some constr
R11818:11820 sf.ImpCEvalFun <> st' var
R11761:11763 sf.Imp <> ::x_'/'_x_'\\'_x not
R11766:11769 sf.Imp <> ::x_'/'_x_'\\'_x not
R11760:11760 sf.ImpCEvalFun <> c var
R11764:11765 sf.ImpCEvalFun <> st var
R11770:11772 sf.ImpCEvalFun <> st' var
R11985:11985 Coq.Init.Datatypes <> S constr
R11989:11989 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R11985:11985 Coq.Init.Datatypes <> S constr
R11989:11989 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12040:12040 Coq.Init.Logic <> :type_scope:x_'='_x not
R12015:12024 sf.ImpCEvalFun <> ceval_step def
R12034:12036 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12041:12044 Coq.Init.Datatypes <> Some constr
R12040:12040 Coq.Init.Logic <> :type_scope:x_'='_x not
R12015:12024 sf.ImpCEvalFun <> ceval_step def
R12034:12036 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12041:12044 Coq.Init.Datatypes <> Some constr
R12065:12079 sf.ImpCEvalFun <> ceval_step_more thm
R12085:12085 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12065:12079 sf.ImpCEvalFun <> ceval_step_more thm
R12085:12085 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12133:12147 sf.ImpCEvalFun <> ceval_step_more thm
R12154:12154 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12133:12147 sf.ImpCEvalFun <> ceval_step_more thm
R12154:12154 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12206:12206 Coq.Init.Datatypes <> S constr
R12206:12206 Coq.Init.Datatypes <> S constr
R12268:12268 Coq.Init.Datatypes <> S constr
R12268:12268 Coq.Init.Datatypes <> S constr
R12314:12314 Coq.Init.Datatypes <> S constr
R12316:12316 Coq.Init.Datatypes <> O constr
R12314:12314 Coq.Init.Datatypes <> S constr
R12316:12316 Coq.Init.Datatypes <> O constr
R12397:12397 Coq.Init.Datatypes <> S constr
R12401:12401 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12397:12397 Coq.Init.Datatypes <> S constr
R12401:12401 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12462:12462 Coq.Init.Logic <> :type_scope:x_'='_x not
R12438:12447 sf.ImpCEvalFun <> ceval_step def
R12456:12458 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12463:12466 Coq.Init.Datatypes <> Some constr
R12462:12462 Coq.Init.Logic <> :type_scope:x_'='_x not
R12438:12447 sf.ImpCEvalFun <> ceval_step def
R12456:12458 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12463:12466 Coq.Init.Datatypes <> Some constr
R12487:12501 sf.ImpCEvalFun <> ceval_step_more thm
R12507:12507 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12487:12501 sf.ImpCEvalFun <> ceval_step_more thm
R12507:12507 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12556:12570 sf.ImpCEvalFun <> ceval_step_more thm
R12577:12577 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12556:12570 sf.ImpCEvalFun <> ceval_step_more thm
R12577:12577 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 12647:12675 <> ceval_and_ceval_step_coincide
R12714:12720 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R12702:12704 sf.Imp <> ::x_'/'_x_'\\'_x not
R12707:12710 sf.Imp <> ::x_'/'_x_'\\'_x not
R12701:12701 sf.ImpCEvalFun <> c var
R12705:12706 sf.ImpCEvalFun <> st var
R12711:12713 sf.ImpCEvalFun <> st' var
R12721:12727 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12729:12730 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12748:12750 Coq.Init.Logic <> :type_scope:x_'='_x not
R12731:12740 sf.ImpCEvalFun <> ceval_step def
R12747:12747 sf.ImpCEvalFun <> i var
R12745:12745 sf.ImpCEvalFun <> c var
R12742:12743 sf.ImpCEvalFun <> st var
R12751:12754 Coq.Init.Datatypes <> Some constr
R12756:12758 sf.ImpCEvalFun <> st' var
R12802:12818 sf.ImpCEvalFun <> ceval__ceval_step thm
R12802:12818 sf.ImpCEvalFun <> ceval__ceval_step thm
R12827:12843 sf.ImpCEvalFun <> ceval_step__ceval thm
R12827:12843 sf.ImpCEvalFun <> ceval_step__ceval thm
prf 13158:13177 <> ceval_deterministic'
R13220:13229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13243:13251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13255:13257 Coq.Init.Logic <> :type_scope:x_'='_x not
R13252:13254 sf.ImpCEvalFun <> st1 var
R13258:13260 sf.ImpCEvalFun <> st2 var
R13231:13233 sf.Imp <> ::x_'/'_x_'\\'_x not
R13236:13239 sf.Imp <> ::x_'/'_x_'\\'_x not
R13230:13230 sf.ImpCEvalFun <> c var
R13234:13235 sf.ImpCEvalFun <> st var
R13240:13242 sf.ImpCEvalFun <> st2 var
R13208:13210 sf.Imp <> ::x_'/'_x_'\\'_x not
R13213:13216 sf.Imp <> ::x_'/'_x_'\\'_x not
R13207:13207 sf.ImpCEvalFun <> c var
R13211:13212 sf.ImpCEvalFun <> st var
R13217:13219 sf.ImpCEvalFun <> st1 var
R13309:13325 sf.ImpCEvalFun <> ceval__ceval_step thm
R13309:13325 sf.ImpCEvalFun <> ceval__ceval_step thm
R13343:13359 sf.ImpCEvalFun <> ceval__ceval_step thm
R13343:13359 sf.ImpCEvalFun <> ceval__ceval_step thm
R13463:13465 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13433:13447 sf.ImpCEvalFun <> ceval_step_more thm
R13463:13465 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13433:13447 sf.ImpCEvalFun <> ceval_step_more thm
R13515:13517 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13485:13499 sf.ImpCEvalFun <> ceval_step_more thm
R13515:13517 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13485:13499 sf.ImpCEvalFun <> ceval_step_more thm
