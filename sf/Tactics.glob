DIGEST 34e1b7c6ef5ae859a733cc59875d6c05
FTactics
R601:604 Poly <> <> lib
prf 878:883 <> silly1
R905:907 Coq.Init.Datatypes <> nat ind
R958:960 Coq.Init.Logic <> :type_scope:x_'='_x not
R953:953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R957:957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Tactics <> o var
R954:954 Tactics <> n var
R961:961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R963:963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R965:965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R964:964 Tactics <> p var
R962:962 Tactics <> m var
R936:938 Coq.Init.Logic <> :type_scope:x_'='_x not
R931:931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R933:933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R935:935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R934:934 Tactics <> o var
R932:932 Tactics <> n var
R939:939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R941:941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R943:943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R942:942 Tactics <> p var
R940:940 Tactics <> n var
R917:919 Coq.Init.Logic <> :type_scope:x_'='_x not
R916:916 Tactics <> n var
R920:920 Tactics <> m var
prf 1501:1506 <> silly2
R1528:1530 Coq.Init.Datatypes <> nat ind
R1612:1614 Coq.Init.Logic <> :type_scope:x_'='_x not
R1607:1607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1609:1609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Tactics <> o var
R1608:1608 Tactics <> n var
R1615:1615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1617:1617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Tactics <> p var
R1616:1616 Tactics <> m var
R1569:1571 Coq.Init.Datatypes <> nat ind
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1586:1586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Tactics <> o var
R1585:1585 Tactics <> q var
R1592:1592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1594:1594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Tactics <> p var
R1593:1593 Tactics <> r var
R1576:1578 Coq.Init.Logic <> :type_scope:x_'='_x not
R1575:1575 Tactics <> q var
R1579:1579 Tactics <> r var
R1540:1542 Coq.Init.Logic <> :type_scope:x_'='_x not
R1539:1539 Tactics <> n var
R1543:1543 Tactics <> m var
prf 2286:2292 <> silly2a
R2310:2312 Coq.Init.Datatypes <> nat ind
R2404:2406 Coq.Init.Logic <> :type_scope:x_'='_x not
R2401:2401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2402:2402 Tactics <> n var
R2407:2407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2408:2408 Tactics <> m var
R2359:2361 Coq.Init.Datatypes <> nat ind
R2385:2387 Coq.Init.Logic <> :type_scope:x_'='_x not
R2382:2382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2383:2383 Tactics <> q var
R2388:2388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2389:2389 Tactics <> r var
R2370:2372 Coq.Init.Logic <> :type_scope:x_'='_x not
R2365:2365 Poly <> ::'('_x_','_x_')' not
R2367:2367 Poly <> ::'('_x_','_x_')' not
R2369:2369 Poly <> ::'('_x_','_x_')' not
R2366:2366 Tactics <> q var
R2368:2368 Tactics <> q var
R2373:2373 Poly <> ::'('_x_','_x_')' not
R2375:2375 Poly <> ::'('_x_','_x_')' not
R2377:2377 Poly <> ::'('_x_','_x_')' not
R2374:2374 Tactics <> r var
R2376:2376 Tactics <> r var
R2326:2328 Coq.Init.Logic <> :type_scope:x_'='_x not
R2321:2321 Poly <> ::'('_x_','_x_')' not
R2323:2323 Poly <> ::'('_x_','_x_')' not
R2325:2325 Poly <> ::'('_x_','_x_')' not
R2322:2322 Tactics <> n var
R2324:2324 Tactics <> n var
R2329:2329 Poly <> ::'('_x_','_x_')' not
R2331:2331 Poly <> ::'('_x_','_x_')' not
R2333:2333 Poly <> ::'('_x_','_x_')' not
R2330:2330 Tactics <> m var
R2332:2332 Tactics <> m var
prf 2592:2599 <> silly_ex
R2693:2695 Coq.Init.Logic <> :type_scope:x_'='_x not
R2687:2690 Basics <> oddb def
R2696:2699 Basics <> true constr
R2671:2673 Coq.Init.Logic <> :type_scope:x_'='_x not
R2664:2668 Basics <> evenb def
R2674:2677 Basics <> true constr
R2647:2649 Coq.Init.Logic <> :type_scope:x_'='_x not
R2637:2640 Basics <> oddb def
R2643:2643 Coq.Init.Datatypes <> S constr
R2645:2645 Tactics <> n var
R2650:2653 Basics <> true constr
R2626:2628 Coq.Init.Logic <> :type_scope:x_'='_x not
R2619:2623 Basics <> evenb def
R2625:2625 Tactics <> n var
R2629:2632 Basics <> true constr
prf 2970:2984 <> silly3_firsttry
R3000:3002 Coq.Init.Datatypes <> nat ind
R3058:3060 Coq.Init.Logic <> :type_scope:x_'='_x not
R3039:3045 Basics <> beq_nat def
R3048:3048 Coq.Init.Datatypes <> S constr
R3051:3051 Coq.Init.Datatypes <> S constr
R3053:3053 Tactics <> n var
R3061:3064 Basics <> true constr
R3015:3017 Coq.Init.Logic <> :type_scope:x_'='_x not
R3011:3014 Basics <> true constr
R3018:3024 Basics <> beq_nat def
R3026:3026 Tactics <> n var
prf 3284:3289 <> silly3
R3305:3307 Coq.Init.Datatypes <> nat ind
R3363:3365 Coq.Init.Logic <> :type_scope:x_'='_x not
R3344:3350 Basics <> beq_nat def
R3353:3353 Coq.Init.Datatypes <> S constr
R3356:3356 Coq.Init.Datatypes <> S constr
R3358:3358 Tactics <> n var
R3366:3369 Basics <> true constr
R3320:3322 Coq.Init.Logic <> :type_scope:x_'='_x not
R3316:3319 Basics <> true constr
R3323:3329 Basics <> beq_nat def
R3331:3331 Tactics <> n var
prf 3754:3766 <> rev_exercise1
R3785:3788 Poly <> list ind
R3790:3792 Coq.Init.Datatypes <> nat ind
R3822:3824 Coq.Init.Logic <> :type_scope:x_'='_x not
R3820:3821 Tactics <> l' var
R3825:3827 Poly <> rev def
R3829:3829 Tactics <> l var
R3802:3804 Coq.Init.Logic <> :type_scope:x_'='_x not
R3801:3801 Tactics <> l var
R3805:3807 Poly <> rev def
R3809:3810 Tactics <> l' var
R3866:3879 Poly <> rev_involutive thm
R3866:3879 Poly <> rev_involutive thm
def 4369:4384 <> trans_eq_example
R4410:4412 Coq.Init.Datatypes <> nat ind
R4470:4472 Coq.Init.Logic <> :type_scope:x_'='_x not
R4465:4465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4467:4467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4469:4469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4468:4468 Tactics <> b var
R4466:4466 Tactics <> a var
R4473:4473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4475:4475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4477:4477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4476:4476 Tactics <> f var
R4474:4474 Tactics <> e var
R4448:4450 Coq.Init.Logic <> :type_scope:x_'='_x not
R4443:4443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4445:4445 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4447:4447 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4446:4446 Tactics <> d var
R4444:4444 Tactics <> c var
R4451:4451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4453:4453 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4455:4455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4454:4454 Tactics <> f var
R4452:4452 Tactics <> e var
R4426:4428 Coq.Init.Logic <> :type_scope:x_'='_x not
R4421:4421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4423:4423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4425:4425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4424:4424 Tactics <> b var
R4422:4422 Tactics <> a var
R4429:4429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4431:4431 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4433:4433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4432:4432 Tactics <> d var
R4430:4430 Tactics <> c var
prf 4734:4741 <> trans_eq
R4770:4770 Tactics <> X var
R4795:4797 Coq.Init.Logic <> :type_scope:x_'='_x not
R4794:4794 Tactics <> n var
R4798:4798 Tactics <> o var
R4786:4788 Coq.Init.Logic <> :type_scope:x_'='_x not
R4785:4785 Tactics <> m var
R4789:4789 Tactics <> o var
R4777:4779 Coq.Init.Logic <> :type_scope:x_'='_x not
R4776:4776 Tactics <> n var
R4780:4780 Tactics <> m var
def 5053:5069 <> trans_eq_example'
R5095:5097 Coq.Init.Datatypes <> nat ind
R5155:5157 Coq.Init.Logic <> :type_scope:x_'='_x not
R5150:5150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5152:5152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5154:5154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5153:5153 Tactics <> b var
R5151:5151 Tactics <> a var
R5158:5158 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5160:5160 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5162:5162 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5161:5161 Tactics <> f var
R5159:5159 Tactics <> e var
R5133:5135 Coq.Init.Logic <> :type_scope:x_'='_x not
R5128:5128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5130:5130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5132:5132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5131:5131 Tactics <> d var
R5129:5129 Tactics <> c var
R5136:5136 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5138:5138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5140:5140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5139:5139 Tactics <> f var
R5137:5137 Tactics <> e var
R5111:5113 Coq.Init.Logic <> :type_scope:x_'='_x not
R5106:5106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5108:5108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5110:5110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5109:5109 Tactics <> b var
R5107:5107 Tactics <> a var
R5114:5114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5116:5116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5118:5118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5117:5117 Tactics <> d var
R5115:5115 Tactics <> c var
R5633:5633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5635:5635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5637:5637 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5615:5622 Tactics <> trans_eq thm
R5633:5633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5635:5635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5637:5637 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5615:5622 Tactics <> trans_eq thm
def 5967:5983 <> trans_eq_exercise
R6005:6007 Coq.Init.Datatypes <> nat ind
R6061:6061 Coq.Init.Logic <> :type_scope:x_'='_x not
R6067:6071 Coq.Init.Logic <> :type_scope:x_'='_x not
R6082:6082 Coq.Init.Logic <> :type_scope:x_'='_x not
R6063:6065 Basics <> :nat_scope:x_'+'_x not
R6062:6062 Tactics <> n var
R6066:6066 Tactics <> p var
R6072:6079 Basics <> minustwo def
R6081:6081 Tactics <> o var
R6041:6041 Coq.Init.Logic <> :type_scope:x_'='_x not
R6047:6050 Coq.Init.Logic <> :type_scope:x_'='_x not
R6043:6045 Basics <> :nat_scope:x_'+'_x not
R6042:6042 Tactics <> n var
R6046:6046 Tactics <> p var
R6051:6051 Tactics <> m var
R6017:6020 Coq.Init.Logic <> :type_scope:x_'='_x not
R6031:6031 Coq.Init.Logic <> :type_scope:x_'='_x not
R6016:6016 Tactics <> m var
R6021:6028 Basics <> minustwo def
R6030:6030 Tactics <> o var
R6106:6113 Tactics <> trans_eq thm
R6106:6113 Tactics <> trans_eq thm
prf 7638:7648 <> S_injective
R7666:7668 Coq.Init.Datatypes <> nat ind
R7690:7692 Coq.Init.Logic <> :type_scope:x_'='_x not
R7689:7689 Tactics <> n var
R7693:7693 Tactics <> m var
R7677:7679 Coq.Init.Logic <> :type_scope:x_'='_x not
R7674:7674 Coq.Init.Datatypes <> S constr
R7676:7676 Tactics <> n var
R7680:7680 Coq.Init.Datatypes <> S constr
R7682:7682 Tactics <> m var
prf 8180:8192 <> inversion_ex1
R8212:8214 Coq.Init.Datatypes <> nat ind
R8244:8246 Coq.Init.Logic <> :type_scope:x_'='_x not
R8241:8241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8243:8243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8242:8242 Tactics <> n var
R8247:8247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8249:8249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8248:8248 Tactics <> m var
R8226:8228 Coq.Init.Logic <> :type_scope:x_'='_x not
R8220:8220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8222:8223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8225:8225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8224:8224 Tactics <> m var
R8221:8221 Tactics <> n var
R8229:8229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8231:8232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8234:8234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8233:8233 Tactics <> o var
R8230:8230 Tactics <> o var
prf 8418:8430 <> inversion_ex2
R8448:8450 Coq.Init.Datatypes <> nat ind
R8472:8474 Coq.Init.Logic <> :type_scope:x_'='_x not
R8471:8471 Tactics <> n var
R8475:8475 Tactics <> m var
R8459:8461 Coq.Init.Logic <> :type_scope:x_'='_x not
R8456:8456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8458:8458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8457:8457 Tactics <> n var
R8462:8462 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8464:8464 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8463:8463 Tactics <> m var
def 8597:8609 <> inversion_ex3
R8640:8640 Tactics <> X var
R8650:8653 Poly <> list ind
R8655:8655 Tactics <> X var
R8709:8711 Coq.Init.Logic <> :type_scope:x_'='_x not
R8708:8708 Tactics <> x var
R8712:8712 Tactics <> y var
R8693:8695 Coq.Init.Logic <> :type_scope:x_'='_x not
R8688:8691 Poly <> ::x_'::'_x not
R8687:8687 Tactics <> y var
R8692:8692 Tactics <> l var
R8697:8700 Poly <> ::x_'::'_x not
R8696:8696 Tactics <> x var
R8701:8701 Tactics <> j var
R8672:8674 Coq.Init.Logic <> :type_scope:x_'='_x not
R8662:8665 Poly <> ::x_'::'_x not
R8661:8661 Tactics <> x var
R8667:8670 Poly <> ::x_'::'_x not
R8666:8666 Tactics <> y var
R8671:8671 Tactics <> l var
R8676:8679 Poly <> ::x_'::'_x not
R8675:8675 Tactics <> z var
R8680:8680 Tactics <> j var
prf 9064:9070 <> f_equal
R9103:9103 Tactics <> B var
R9098:9098 Tactics <> A var
R9112:9112 Tactics <> A var
R9130:9132 Coq.Init.Logic <> :type_scope:x_'='_x not
R9127:9127 Tactics <> f var
R9129:9129 Tactics <> x var
R9133:9133 Tactics <> f var
R9135:9135 Tactics <> y var
R9119:9121 Coq.Init.Logic <> :type_scope:x_'='_x not
R9118:9118 Tactics <> x var
R9122:9122 Tactics <> y var
prf 9427:9437 <> beq_nat_0_l
R9477:9479 Coq.Init.Logic <> :type_scope:x_'='_x not
R9476:9476 Tactics <> n var
R9465:9467 Coq.Init.Logic <> :type_scope:x_'='_x not
R9454:9460 Basics <> beq_nat def
R9464:9464 Tactics <> n var
R9468:9471 Basics <> true constr
prf 10399:10411 <> inversion_ex4
R10427:10429 Coq.Init.Datatypes <> nat ind
R10453:10455 Coq.Init.Logic <> :type_scope:x_'='_x not
R10449:10451 Basics <> :nat_scope:x_'+'_x not
R10438:10440 Coq.Init.Logic <> :type_scope:x_'='_x not
R10435:10435 Coq.Init.Datatypes <> S constr
R10437:10437 Tactics <> n var
R10441:10441 Coq.Init.Datatypes <> O constr
prf 10517:10529 <> inversion_ex5
R10547:10549 Coq.Init.Datatypes <> nat ind
R10576:10578 Coq.Init.Logic <> :type_scope:x_'='_x not
R10573:10573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10575:10575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10574:10574 Tactics <> n var
R10579:10579 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10581:10581 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10580:10580 Tactics <> m var
R10560:10562 Coq.Init.Logic <> :type_scope:x_'='_x not
R10555:10559 Basics <> false constr
R10563:10566 Basics <> true constr
def 11060:11072 <> inversion_ex6
R11129:11129 Tactics <> X var
R11139:11142 Poly <> list ind
R11144:11144 Tactics <> X var
R11194:11196 Coq.Init.Logic <> :type_scope:x_'='_x not
R11193:11193 Tactics <> x var
R11197:11197 Tactics <> z var
R11178:11180 Coq.Init.Logic <> :type_scope:x_'='_x not
R11173:11176 Poly <> ::x_'::'_x not
R11172:11172 Tactics <> y var
R11177:11177 Tactics <> l var
R11182:11185 Poly <> ::x_'::'_x not
R11181:11181 Tactics <> z var
R11186:11186 Tactics <> j var
R11161:11163 Coq.Init.Logic <> :type_scope:x_'='_x not
R11151:11154 Poly <> ::x_'::'_x not
R11150:11150 Tactics <> x var
R11156:11159 Poly <> ::x_'::'_x not
R11155:11155 Tactics <> y var
R11160:11160 Tactics <> l var
R11164:11165 Poly <> ::'['_']' not
prf 12482:12486 <> S_inj
R12504:12506 Coq.Init.Datatypes <> nat ind
R12514:12517 Basics <> bool ind
R12570:12572 Coq.Init.Logic <> :type_scope:x_'='_x not
R12559:12565 Basics <> beq_nat def
R12569:12569 Tactics <> m var
R12567:12567 Tactics <> n var
R12573:12573 Tactics <> b var
R12545:12547 Coq.Init.Logic <> :type_scope:x_'='_x not
R12526:12532 Basics <> beq_nat def
R12541:12541 Coq.Init.Datatypes <> S constr
R12543:12543 Tactics <> m var
R12535:12535 Coq.Init.Datatypes <> S constr
R12537:12537 Tactics <> n var
R12548:12548 Tactics <> b var
prf 13411:13417 <> silly3'
R13433:13435 Coq.Init.Datatypes <> nat ind
R13526:13528 Coq.Init.Logic <> :type_scope:x_'='_x not
R13522:13525 Basics <> true constr
R13529:13535 Basics <> beq_nat def
R13538:13538 Coq.Init.Datatypes <> S constr
R13541:13541 Coq.Init.Datatypes <> S constr
R13543:13543 Tactics <> n var
R13501:13503 Coq.Init.Logic <> :type_scope:x_'='_x not
R13497:13500 Basics <> true constr
R13504:13510 Basics <> beq_nat def
R13512:13512 Tactics <> n var
R13483:13485 Coq.Init.Logic <> :type_scope:x_'='_x not
R13464:13470 Basics <> beq_nat def
R13473:13473 Coq.Init.Datatypes <> S constr
R13476:13476 Coq.Init.Datatypes <> S constr
R13478:13478 Tactics <> n var
R13486:13489 Basics <> true constr
R13453:13455 Coq.Init.Logic <> :type_scope:x_'='_x not
R13442:13448 Basics <> beq_nat def
R13450:13450 Tactics <> n var
R13456:13459 Basics <> true constr
prf 14425:14442 <> plus_n_n_injective
R14486:14488 Coq.Init.Logic <> :type_scope:x_'='_x not
R14485:14485 Tactics <> n var
R14489:14489 Tactics <> m var
R14468:14470 Coq.Init.Logic <> :type_scope:x_'='_x not
R14464:14466 Basics <> :nat_scope:x_'+'_x not
R14463:14463 Tactics <> n var
R14467:14467 Tactics <> n var
R14472:14474 Basics <> :nat_scope:x_'+'_x not
R14471:14471 Tactics <> m var
R14475:14475 Tactics <> m var
R14672:14678 Tactics <> f_equal thm
R14672:14678 Tactics <> f_equal thm
R14710:14718 Induction <> plus_n_Sm thm
R14710:14718 Induction <> plus_n_Sm thm
R14710:14718 Induction <> plus_n_Sm thm
R14710:14718 Induction <> plus_n_Sm thm
prf 15689:15711 <> double_injective_FAILED
R15761:15763 Coq.Init.Logic <> :type_scope:x_'='_x not
R15760:15760 Tactics <> n var
R15764:15764 Tactics <> m var
R15740:15742 Coq.Init.Logic <> :type_scope:x_'='_x not
R15732:15737 Induction <> double def
R15739:15739 Tactics <> n var
R15743:15748 Induction <> double def
R15750:15750 Tactics <> m var
R16045:16051 Tactics <> f_equal thm
R16045:16051 Tactics <> f_equal thm
prf 18297:18312 <> double_injective
R18362:18364 Coq.Init.Logic <> :type_scope:x_'='_x not
R18361:18361 Tactics <> n var
R18365:18365 Tactics <> m var
R18341:18343 Coq.Init.Logic <> :type_scope:x_'='_x not
R18333:18338 Induction <> double def
R18340:18340 Tactics <> n var
R18344:18349 Induction <> double def
R18351:18351 Tactics <> m var
R19238:19244 Tactics <> f_equal thm
R19238:19244 Tactics <> f_equal thm
prf 20139:20150 <> beq_nat_true
R20193:20195 Coq.Init.Logic <> :type_scope:x_'='_x not
R20192:20192 Tactics <> n var
R20196:20196 Tactics <> m var
R20181:20183 Coq.Init.Logic <> :type_scope:x_'='_x not
R20170:20176 Basics <> beq_nat def
R20180:20180 Tactics <> m var
R20178:20178 Tactics <> n var
R20184:20187 Basics <> true constr
R20469:20475 Tactics <> f_equal thm
R20469:20475 Tactics <> f_equal thm
prf 21039:21067 <> double_injective_take2_FAILED
R21117:21119 Coq.Init.Logic <> :type_scope:x_'='_x not
R21116:21116 Tactics <> n var
R21120:21120 Tactics <> m var
R21096:21098 Coq.Init.Logic <> :type_scope:x_'='_x not
R21088:21093 Induction <> double def
R21095:21095 Tactics <> n var
R21099:21104 Induction <> double def
R21106:21106 Tactics <> m var
R21401:21407 Tactics <> f_equal thm
R21401:21407 Tactics <> f_equal thm
prf 22343:22364 <> double_injective_take2
R22414:22416 Coq.Init.Logic <> :type_scope:x_'='_x not
R22413:22413 Tactics <> n var
R22417:22417 Tactics <> m var
R22393:22395 Coq.Init.Logic <> :type_scope:x_'='_x not
R22385:22390 Induction <> double def
R22392:22392 Tactics <> n var
R22396:22401 Induction <> double def
R22403:22403 Tactics <> m var
R22880:22886 Tactics <> f_equal thm
R22880:22886 Tactics <> f_equal thm
prf 25090:25100 <> beq_id_true
R25140:25142 Coq.Init.Logic <> :type_scope:x_'='_x not
R25139:25139 Tactics <> x var
R25143:25143 Tactics <> y var
R25128:25130 Coq.Init.Logic <> :type_scope:x_'='_x not
R25118:25123 Lists <> beq_id def
R25127:25127 Tactics <> y var
R25125:25125 Tactics <> x var
R25131:25134 Basics <> true constr
R25204:25206 Coq.Init.Logic <> :type_scope:x_'='_x not
R25204:25206 Coq.Init.Logic <> :type_scope:x_'='_x not
R25219:25230 Tactics <> beq_nat_true thm
R25219:25230 Tactics <> beq_nat_true thm
prf 25385:25391 <> Sn_pred
R25405:25407 Coq.Init.Datatypes <> nat ind
R25418:25418 Coq.Init.Logic <> :type_scope:x_'='_x not
R25417:25417 Tactics <> n var
R25419:25422 Coq.Init.Peano <> pred def
R25424:25424 Tactics <> m var
R25413:25413 Coq.Init.Logic <> :type_scope:x_'='_x not
R25410:25410 Coq.Init.Datatypes <> S constr
R25412:25412 Tactics <> n var
R25414:25414 Tactics <> m var
R25462:25468 Coq.Init.Peano <> pred_Sn thm
R25462:25468 Coq.Init.Peano <> pred_Sn thm
prf 25499:25518 <> nth_error_after_last
R25533:25535 Coq.Init.Datatypes <> nat ind
R25554:25557 Poly <> list ind
R25559:25559 Tactics <> X var
R25602:25604 Coq.Init.Logic <> :type_scope:x_'='_x not
R25589:25597 Poly <> nth_error def
R25601:25601 Tactics <> n var
R25599:25599 Tactics <> l var
R25605:25608 Poly <> None constr
R25576:25578 Coq.Init.Logic <> :type_scope:x_'='_x not
R25568:25573 Poly <> length def
R25575:25575 Tactics <> l var
R25579:25579 Tactics <> n var
R25745:25745 Coq.Init.Logic <> :type_scope:x_'='_x not
R25737:25742 Poly <> length def
R25746:25749 Coq.Init.Peano <> pred def
R25745:25745 Coq.Init.Logic <> :type_scope:x_'='_x not
R25737:25742 Poly <> length def
R25746:25749 Coq.Init.Peano <> pred def
R25773:25779 Tactics <> Sn_pred thm
R25782:25787 Poly <> length def
R25773:25779 Tactics <> Sn_pred thm
R25782:25787 Poly <> length def
R25858:25865 Induction <> S_nbeq_0 thm
R25858:25865 Induction <> S_nbeq_0 thm
R25891:25894 Coq.Init.Peano <> pred def
R25891:25894 Coq.Init.Peano <> pred def
prf 26073:26087 <> app_length_cons
R26118:26121 Poly <> list ind
R26123:26123 Tactics <> X var
R26165:26165 Tactics <> X var
R26173:26175 Coq.Init.Datatypes <> nat ind
R26242:26244 Coq.Init.Logic <> :type_scope:x_'='_x not
R26221:26221 Coq.Init.Datatypes <> S constr
R26224:26229 Poly <> length def
R26234:26237 Poly <> ::x_'++'_x not
R26232:26233 Tactics <> l1 var
R26238:26239 Tactics <> l2 var
R26245:26245 Tactics <> n var
R26208:26210 Coq.Init.Logic <> :type_scope:x_'='_x not
R26184:26189 Poly <> length def
R26194:26198 Poly <> ::x_'++'_x not
R26206:26206 Poly <> ::x_'++'_x not
R26192:26193 Tactics <> l1 var
R26200:26203 Poly <> ::x_'::'_x not
R26199:26199 Tactics <> x var
R26204:26205 Tactics <> l2 var
R26211:26211 Tactics <> n var
R26371:26371 Coq.Init.Logic <> :type_scope:x_'='_x not
R26348:26353 Poly <> length def
R26358:26361 Poly <> ::x_'++'_x not
R26364:26367 Poly <> ::x_'::'_x not
R26372:26375 Coq.Init.Peano <> pred def
R26371:26371 Coq.Init.Logic <> :type_scope:x_'='_x not
R26348:26353 Poly <> length def
R26358:26361 Poly <> ::x_'++'_x not
R26364:26367 Poly <> ::x_'::'_x not
R26372:26375 Coq.Init.Peano <> pred def
R26416:26422 Coq.Init.Peano <> pred_Sn thm
R26416:26422 Coq.Init.Peano <> pred_Sn thm
R26485:26487 Coq.Init.Logic <> :type_scope:x_'='_x not
R26464:26464 Coq.Init.Datatypes <> S constr
R26467:26472 Poly <> length def
R26477:26480 Poly <> ::x_'++'_x not
R26488:26491 Coq.Init.Peano <> pred def
R26485:26487 Coq.Init.Logic <> :type_scope:x_'='_x not
R26464:26464 Coq.Init.Datatypes <> S constr
R26467:26472 Poly <> length def
R26477:26480 Poly <> ::x_'++'_x not
R26488:26491 Coq.Init.Peano <> pred def
R26527:26530 Coq.Init.Peano <> pred def
R26527:26530 Coq.Init.Peano <> pred def
R26586:26592 Coq.Init.Peano <> pred_Sn thm
R26586:26592 Coq.Init.Peano <> pred_Sn thm
prf 26780:26794 <> app_cons_length
R26824:26827 Poly <> list ind
R26829:26829 Tactics <> X var
R26867:26867 Tactics <> X var
R26875:26877 Coq.Init.Datatypes <> nat ind
R26943:26945 Coq.Init.Logic <> :type_scope:x_'='_x not
R26919:26924 Poly <> length def
R26929:26933 Poly <> ::x_'++'_x not
R26941:26941 Poly <> ::x_'++'_x not
R26927:26928 Tactics <> l1 var
R26935:26938 Poly <> ::x_'::'_x not
R26934:26934 Tactics <> x var
R26939:26940 Tactics <> l2 var
R26946:26946 Tactics <> n var
R26907:26909 Coq.Init.Logic <> :type_scope:x_'='_x not
R26886:26886 Coq.Init.Datatypes <> S constr
R26889:26894 Poly <> length def
R26899:26902 Poly <> ::x_'++'_x not
R26897:26898 Tactics <> l1 var
R26903:26904 Tactics <> l2 var
R26910:26910 Tactics <> n var
R27093:27093 Coq.Init.Logic <> :type_scope:x_'='_x not
R27074:27074 Coq.Init.Datatypes <> S constr
R27077:27082 Poly <> length def
R27087:27088 Poly <> ::x_'++'_x not
R27094:27097 Coq.Init.Peano <> pred def
R27093:27093 Coq.Init.Logic <> :type_scope:x_'='_x not
R27074:27074 Coq.Init.Datatypes <> S constr
R27077:27082 Poly <> length def
R27087:27088 Poly <> ::x_'++'_x not
R27094:27097 Coq.Init.Peano <> pred def
R27138:27144 Coq.Init.Peano <> pred_Sn thm
R27138:27144 Coq.Init.Peano <> pred_Sn thm
R27186:27189 Coq.Init.Peano <> pred def
R27186:27189 Coq.Init.Peano <> pred def
prf 27250:27265 <> app_length_twice
R27288:27290 Coq.Init.Datatypes <> nat ind
R27296:27299 Poly <> list ind
R27301:27301 Tactics <> X var
R27346:27348 Coq.Init.Logic <> :type_scope:x_'='_x not
R27331:27336 Poly <> length def
R27340:27343 Poly <> ::x_'++'_x not
R27339:27339 Tactics <> l var
R27344:27344 Tactics <> l var
R27350:27352 Basics <> :nat_scope:x_'+'_x not
R27349:27349 Tactics <> n var
R27353:27353 Tactics <> n var
R27318:27320 Coq.Init.Logic <> :type_scope:x_'='_x not
R27310:27315 Poly <> length def
R27317:27317 Tactics <> l var
R27321:27321 Tactics <> n var
R27515:27515 Coq.Init.Logic <> :type_scope:x_'='_x not
R27507:27512 Poly <> length def
R27516:27519 Coq.Init.Peano <> pred def
R27515:27515 Coq.Init.Logic <> :type_scope:x_'='_x not
R27507:27512 Poly <> length def
R27516:27519 Coq.Init.Peano <> pred def
R27559:27565 Coq.Init.Peano <> pred_Sn thm
R27559:27565 Coq.Init.Peano <> pred_Sn thm
R27616:27616 Coq.Init.Logic <> :type_scope:x_'='_x not
R27600:27605 Poly <> length def
R27609:27610 Poly <> ::x_'++'_x not
R27612:27613 Poly <> ::x_'::'_x not
R27618:27619 Basics <> :nat_scope:x_'+'_x not
R27626:27626 Basics <> :nat_scope:x_'+'_x not
R27620:27623 Coq.Init.Peano <> pred def
R27616:27616 Coq.Init.Logic <> :type_scope:x_'='_x not
R27600:27605 Poly <> length def
R27609:27610 Poly <> ::x_'++'_x not
R27612:27613 Poly <> ::x_'::'_x not
R27618:27619 Basics <> :nat_scope:x_'+'_x not
R27626:27626 Basics <> :nat_scope:x_'+'_x not
R27620:27623 Coq.Init.Peano <> pred def
R27647:27661 Tactics <> app_cons_length thm
R27647:27661 Tactics <> app_cons_length thm
R27678:27681 Coq.Init.Peano <> pred def
R27678:27681 Coq.Init.Peano <> pred def
R27726:27734 Coq.Init.Peano <> plus_Sn_m thm
R27726:27734 Coq.Init.Peano <> plus_Sn_m thm
R27792:27800 Induction <> plus_comm thm
R27792:27800 Induction <> plus_comm thm
R27813:27821 Coq.Init.Peano <> plus_Sn_m thm
R27813:27821 Coq.Init.Peano <> plus_Sn_m thm
prf 28025:28040 <> double_induction
R28062:28064 Coq.Init.Datatypes <> nat ind
R28055:28057 Coq.Init.Datatypes <> nat ind
R28215:28215 Tactics <> P var
R28219:28219 Tactics <> n var
R28217:28217 Tactics <> m var
R28183:28183 Tactics <> P var
R28192:28192 Coq.Init.Datatypes <> S constr
R28194:28194 Tactics <> n var
R28186:28186 Coq.Init.Datatypes <> S constr
R28188:28188 Tactics <> m var
R28174:28174 Tactics <> P var
R28178:28178 Tactics <> n var
R28176:28176 Tactics <> m var
R28145:28145 Tactics <> P var
R28150:28150 Coq.Init.Datatypes <> S constr
R28152:28152 Tactics <> n var
R28136:28136 Tactics <> P var
R28140:28140 Tactics <> n var
R28109:28109 Tactics <> P var
R28112:28112 Coq.Init.Datatypes <> S constr
R28114:28114 Tactics <> m var
R28100:28100 Tactics <> P var
R28102:28102 Tactics <> m var
R28078:28078 Tactics <> P var
def 28699:28704 <> square
R28712:28714 Basics <> :nat_scope:x_'*'_x not
R28711:28711 Tactics <> n var
R28715:28715 Tactics <> n var
prf 28786:28796 <> square_mult
R28826:28828 Coq.Init.Logic <> :type_scope:x_'='_x not
R28812:28817 Tactics <> square def
R28821:28823 Basics <> :nat_scope:x_'*'_x not
R28820:28820 Tactics <> n var
R28824:28824 Tactics <> m var
R28837:28839 Basics <> :nat_scope:x_'*'_x not
R28829:28834 Tactics <> square def
R28836:28836 Tactics <> n var
R28840:28845 Tactics <> square def
R28847:28847 Tactics <> m var
R29164:29169 Tactics <> square def
R29496:29505 Induction <> mult_assoc thm
R29496:29505 Induction <> mult_assoc thm
R29531:29533 Coq.Init.Logic <> :type_scope:x_'='_x not
R29527:29529 Basics <> :nat_scope:x_'*'_x not
R29523:29525 Basics <> :nat_scope:x_'*'_x not
R29539:29541 Basics <> :nat_scope:x_'*'_x not
R29535:29537 Basics <> :nat_scope:x_'*'_x not
R29531:29533 Coq.Init.Logic <> :type_scope:x_'='_x not
R29527:29529 Basics <> :nat_scope:x_'*'_x not
R29523:29525 Basics <> :nat_scope:x_'*'_x not
R29539:29541 Basics <> :nat_scope:x_'*'_x not
R29535:29537 Basics <> :nat_scope:x_'*'_x not
R29558:29566 Induction <> mult_comm thm
R29558:29566 Induction <> mult_comm thm
R29575:29584 Induction <> mult_assoc thm
R29575:29584 Induction <> mult_assoc thm
R29610:29619 Induction <> mult_assoc thm
R29610:29619 Induction <> mult_assoc thm
def 30003:30005 <> foo
R30011:30013 Coq.Init.Datatypes <> nat ind
prf 30226:30237 <> silly_fact_1
R30260:30262 Coq.Init.Logic <> :type_scope:x_'='_x not
R30256:30258 Basics <> :nat_scope:x_'+'_x not
R30251:30253 Tactics <> foo def
R30255:30255 Tactics <> m var
R30274:30276 Basics <> :nat_scope:x_'+'_x not
R30263:30265 Tactics <> foo def
R30269:30271 Basics <> :nat_scope:x_'+'_x not
R30268:30268 Tactics <> m var
def 30507:30509 <> bar
R30524:30524 Tactics <> x var
R30535:30535 Coq.Init.Datatypes <> O constr
R30546:30546 Coq.Init.Datatypes <> S constr
prf 30620:30638 <> silly_fact_2_FAILED
R30661:30663 Coq.Init.Logic <> :type_scope:x_'='_x not
R30657:30659 Basics <> :nat_scope:x_'+'_x not
R30652:30654 Tactics <> bar def
R30656:30656 Tactics <> m var
R30675:30677 Basics <> :nat_scope:x_'+'_x not
R30664:30666 Tactics <> bar def
R30670:30672 Basics <> :nat_scope:x_'+'_x not
R30669:30669 Tactics <> m var
prf 31666:31677 <> silly_fact_2
R31700:31702 Coq.Init.Logic <> :type_scope:x_'='_x not
R31696:31698 Basics <> :nat_scope:x_'+'_x not
R31691:31693 Tactics <> bar def
R31695:31695 Tactics <> m var
R31714:31716 Basics <> :nat_scope:x_'+'_x not
R31703:31705 Tactics <> bar def
R31709:31711 Basics <> :nat_scope:x_'+'_x not
R31708:31708 Tactics <> m var
prf 32067:32079 <> silly_fact_2'
R32102:32104 Coq.Init.Logic <> :type_scope:x_'='_x not
R32098:32100 Basics <> :nat_scope:x_'+'_x not
R32093:32095 Tactics <> bar def
R32097:32097 Tactics <> m var
R32116:32118 Basics <> :nat_scope:x_'+'_x not
R32105:32107 Tactics <> bar def
R32111:32113 Basics <> :nat_scope:x_'+'_x not
R32110:32110 Tactics <> m var
R32150:32152 Tactics <> bar def
def 32796:32803 <> sillyfun
R32810:32812 Coq.Init.Datatypes <> nat ind
R32817:32820 Basics <> bool ind
R32830:32836 Basics <> beq_nat def
R32838:32838 Tactics <> n var
R32863:32869 Basics <> beq_nat def
R32871:32871 Tactics <> n var
R32893:32897 Basics <> false constr
R32880:32884 Basics <> false constr
R32847:32851 Basics <> false constr
prf 32909:32922 <> sillyfun_false
R32938:32940 Coq.Init.Datatypes <> nat ind
R32956:32958 Coq.Init.Logic <> :type_scope:x_'='_x not
R32946:32953 Tactics <> sillyfun def
R32955:32955 Tactics <> n var
R32959:32963 Basics <> false constr
R32992:32999 Tactics <> sillyfun def
R33014:33020 Basics <> beq_nat def
R33014:33020 Basics <> beq_nat def
R33114:33120 Basics <> beq_nat def
R33114:33120 Basics <> beq_nat def
prf 33919:33931 <> combine_split
R33951:33954 Poly <> list ind
R33958:33960 Poly <> :type_scope:x_'*'_x not
R33957:33957 Tactics <> X var
R33961:33961 Tactics <> Y var
R34011:34013 Coq.Init.Logic <> :type_scope:x_'='_x not
R33998:34004 Poly <> combine def
R34009:34010 Tactics <> l2 var
R34006:34007 Tactics <> l1 var
R34014:34014 Tactics <> l var
R33981:33983 Coq.Init.Logic <> :type_scope:x_'='_x not
R33974:33978 Poly <> split def
R33980:33980 Tactics <> l var
R33984:33984 Poly <> ::'('_x_','_x_')' not
R33987:33988 Poly <> ::'('_x_','_x_')' not
R33991:33991 Poly <> ::'('_x_','_x_')' not
R33985:33986 Tactics <> l1 var
R33989:33990 Tactics <> l2 var
R34148:34152 Poly <> split def
R34148:34152 Poly <> split def
def 34507:34515 <> sillyfun1
R34522:34524 Coq.Init.Datatypes <> nat ind
R34529:34532 Basics <> bool ind
R34542:34548 Basics <> beq_nat def
R34550:34550 Tactics <> n var
R34574:34580 Basics <> beq_nat def
R34582:34582 Tactics <> n var
R34603:34607 Basics <> false constr
R34591:34594 Basics <> true constr
R34559:34562 Basics <> true constr
prf 34866:34885 <> sillyfun1_odd_FAILED
R34901:34903 Coq.Init.Datatypes <> nat ind
R34945:34947 Coq.Init.Logic <> :type_scope:x_'='_x not
R34939:34942 Basics <> oddb def
R34944:34944 Tactics <> n var
R34948:34951 Basics <> true constr
R34923:34925 Coq.Init.Logic <> :type_scope:x_'='_x not
R34912:34920 Tactics <> sillyfun1 def
R34922:34922 Tactics <> n var
R34926:34929 Basics <> true constr
R34983:34991 Tactics <> sillyfun1 def
R35012:35018 Basics <> beq_nat def
R35012:35018 Basics <> beq_nat def
prf 35868:35880 <> sillyfun1_odd
R35896:35898 Coq.Init.Datatypes <> nat ind
R35940:35942 Coq.Init.Logic <> :type_scope:x_'='_x not
R35934:35937 Basics <> oddb def
R35939:35939 Tactics <> n var
R35943:35946 Basics <> true constr
R35918:35920 Coq.Init.Logic <> :type_scope:x_'='_x not
R35907:35915 Tactics <> sillyfun1 def
R35917:35917 Tactics <> n var
R35921:35924 Basics <> true constr
R35978:35986 Tactics <> sillyfun1 def
R36007:36013 Basics <> beq_nat def
R36007:36013 Basics <> beq_nat def
R36262:36273 Tactics <> beq_nat_true thm
R36262:36273 Tactics <> beq_nat_true thm
R36560:36566 Basics <> beq_nat def
R36560:36566 Basics <> beq_nat def
R36626:36637 Tactics <> beq_nat_true thm
R36626:36637 Tactics <> beq_nat_true thm
prf 36801:36822 <> bool_fn_applied_thrice
R36848:36851 Basics <> bool ind
R36840:36843 Basics <> bool ind
R36859:36862 Basics <> bool ind
R36879:36881 Coq.Init.Logic <> :type_scope:x_'='_x not
R36868:36868 Tactics <> f var
R36871:36871 Tactics <> f var
R36874:36874 Tactics <> f var
R36876:36876 Tactics <> b var
R36882:36882 Tactics <> f var
R36884:36884 Tactics <> b var
R36957:36960 Basics <> true constr
R36957:36960 Basics <> true constr
R37078:37082 Basics <> false constr
R37078:37082 Basics <> false constr
R37213:37217 Basics <> false constr
R37213:37217 Basics <> false constr
R37281:37284 Basics <> true constr
R37281:37284 Basics <> true constr
prf 39700:39710 <> beq_nat_sym
R39728:39730 Coq.Init.Datatypes <> nat ind
R39747:39749 Coq.Init.Logic <> :type_scope:x_'='_x not
R39736:39742 Basics <> beq_nat def
R39746:39746 Tactics <> m var
R39744:39744 Tactics <> n var
R39750:39756 Basics <> beq_nat def
R39760:39760 Tactics <> n var
R39758:39758 Tactics <> m var
prf 40316:40328 <> beq_nat_trans
R40407:40409 Coq.Init.Logic <> :type_scope:x_'='_x not
R40396:40402 Basics <> beq_nat def
R40406:40406 Tactics <> p var
R40404:40404 Tactics <> n var
R40410:40413 Basics <> true constr
R40383:40385 Coq.Init.Logic <> :type_scope:x_'='_x not
R40372:40378 Basics <> beq_nat def
R40382:40382 Tactics <> p var
R40380:40380 Tactics <> m var
R40386:40389 Basics <> true constr
R40359:40361 Coq.Init.Logic <> :type_scope:x_'='_x not
R40348:40354 Basics <> beq_nat def
R40358:40358 Tactics <> m var
R40356:40356 Tactics <> n var
R40362:40365 Basics <> true constr
R40440:40451 Tactics <> beq_nat_true thm
R40440:40451 Tactics <> beq_nat_true thm
def 41182:41204 <> split_combine_statement
R41240:41243 Poly <> list ind
R41245:41245 Tactics <> X var
R41252:41255 Poly <> list ind
R41257:41257 Tactics <> Y var
R41303:41303 Coq.Init.Logic <> :type_scope:x_'='_x not
R41282:41286 Poly <> split def
R41289:41295 Poly <> combine def
R41300:41301 Tactics <> l2 var
R41297:41298 Tactics <> l1 var
R41304:41304 Poly <> ::'('_x_','_x_')' not
R41307:41307 Poly <> ::'('_x_','_x_')' not
R41310:41310 Poly <> ::'('_x_','_x_')' not
R41305:41306 Tactics <> l1 var
R41308:41309 Tactics <> l2 var
R41270:41270 Coq.Init.Logic <> :type_scope:x_'='_x not
R41261:41266 Poly <> length def
R41268:41269 Tactics <> l1 var
R41271:41276 Poly <> length def
R41278:41279 Tactics <> l2 var
prf 41322:41334 <> split_combine
R41338:41360 Tactics <> split_combine_statement def
prf 41850:41864 <> filter_exercise
R41899:41902 Basics <> bool ind
R41894:41894 Tactics <> X var
R41939:41939 Tactics <> X var
R41950:41953 Poly <> list ind
R41955:41955 Tactics <> X var
R42002:42004 Coq.Init.Logic <> :type_scope:x_'='_x not
R41996:41999 Tactics <> test var
R42001:42001 Tactics <> x var
R42005:42008 Basics <> true constr
R41977:41979 Coq.Init.Logic <> :type_scope:x_'='_x not
R41964:41969 Poly <> filter def
R41976:41976 Tactics <> l var
R41971:41974 Tactics <> test var
R41981:41984 Poly <> ::x_'::'_x not
R41980:41980 Tactics <> x var
R41985:41986 Tactics <> lf var
