DIGEST 56f6aa9a90a8443bbdba7b548c115809
FImp
R1018:1030 Coq.Bool.Bool <> <> lib
R1048:1062 Coq.Arith.Arith <> <> lib
R1080:1094 Coq.Arith.EqNat <> <> lib
R1112:1126 Coq.omega.Omega <> <> lib
R1144:1157 Coq.Lists.List <> <> lib
R1197:1200 Maps <> <> lib
mod 1686:1689 <> AExp
ind 1806:1809 AExp aexp
constr 1825:1828 AExp ANum
constr 1848:1852 AExp APlus
constr 1881:1886 AExp AMinus
constr 1915:1919 AExp AMult
R1839:1842 Imp <> aexp ind
R1832:1834 Coq.Init.Datatypes <> nat ind
R1872:1875 Imp <> aexp ind
R1864:1867 Imp <> aexp ind
R1856:1859 Imp <> aexp ind
R1906:1909 Imp <> aexp ind
R1898:1901 Imp <> aexp ind
R1890:1893 Imp <> aexp ind
R1939:1942 Imp <> aexp ind
R1931:1934 Imp <> aexp ind
R1923:1926 Imp <> aexp ind
ind 1956:1959 AExp bexp
constr 1975:1979 AExp BTrue
constr 1992:1997 AExp BFalse
constr 2010:2012 AExp BEq
constr 2041:2043 AExp BLe
constr 2072:2075 AExp BNot
constr 2096:2099 AExp BAnd
R1983:1986 Imp <> bexp ind
R2001:2004 Imp <> bexp ind
R2032:2035 Imp <> bexp ind
R2024:2027 Imp AExp aexp ind
R2016:2019 Imp AExp aexp ind
R2063:2066 Imp <> bexp ind
R2055:2058 Imp AExp aexp ind
R2047:2050 Imp AExp aexp ind
R2087:2090 Imp <> bexp ind
R2079:2082 Imp <> bexp ind
R2119:2122 Imp <> bexp ind
R2111:2114 Imp <> bexp ind
R2103:2106 Imp <> bexp ind
def 4795:4799 AExp aeval
R4806:4809 Imp AExp aexp ind
R4814:4816 Coq.Init.Datatypes <> nat ind
R4829:4829 Imp <> a var
R4840:4843 Imp AExp ANum constr
R4856:4860 Imp AExp APlus constr
R4871:4871 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4880:4884 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4893:4893 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4872:4876 Imp <> aeval def
R4885:4889 Imp <> aeval def
R4899:4904 Imp AExp AMinus constr
R4916:4916 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4925:4929 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4938:4938 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4917:4921 Imp <> aeval def
R4930:4934 Imp <> aeval def
R4944:4948 Imp AExp AMult constr
R4959:4959 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4968:4972 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4981:4981 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4960:4964 Imp <> aeval def
R4973:4977 Imp <> aeval def
def 4999:5009 AExp test_aeval1
R5045:5047 Coq.Init.Logic <> :type_scope:x_'='_x not
R5014:5018 Imp AExp aeval def
R5021:5025 Imp AExp APlus constr
R5037:5040 Imp AExp ANum constr
R5028:5031 Imp AExp ANum constr
def 5155:5159 AExp beval
R5166:5169 Imp AExp bexp ind
R5174:5177 Coq.Init.Datatypes <> bool ind
R5190:5190 Imp <> b var
R5201:5205 Imp AExp BTrue constr
R5216:5219 Coq.Init.Datatypes <> true constr
R5225:5230 Imp AExp BFalse constr
R5240:5244 Coq.Init.Datatypes <> false constr
R5250:5252 Imp AExp BEq constr
R5265:5271 Coq.Arith.EqNat <> beq_nat def
R5285:5289 Imp AExp aeval def
R5274:5278 Imp AExp aeval def
R5299:5301 Imp AExp BLe constr
R5314:5316 Coq.Arith.Compare_dec <> leb def
R5330:5334 Imp AExp aeval def
R5319:5323 Imp AExp aeval def
R5344:5347 Imp AExp BNot constr
R5359:5362 Coq.Init.Datatypes <> negb def
R5365:5369 Imp <> beval def
R5379:5382 Imp AExp BAnd constr
R5394:5397 Coq.Init.Datatypes <> andb def
R5411:5415 Imp <> beval def
R5400:5404 Imp <> beval def
def 5824:5837 AExp optimize_0plus
R5842:5845 Imp AExp aexp ind
R5850:5853 Imp AExp aexp ind
R5866:5866 Imp <> a var
R5877:5880 Imp AExp ANum constr
R5893:5896 Imp AExp ANum constr
R5904:5908 Imp AExp APlus constr
R5911:5914 Imp AExp ANum constr
R5931:5944 Imp <> optimize_0plus def
R5953:5957 Imp AExp APlus constr
R5974:5978 Imp AExp APlus constr
R6001:6014 Imp <> optimize_0plus def
R5981:5994 Imp <> optimize_0plus def
R6024:6029 Imp AExp AMinus constr
R6046:6051 Imp AExp AMinus constr
R6074:6087 Imp <> optimize_0plus def
R6054:6067 Imp <> optimize_0plus def
R6097:6101 Imp AExp AMult constr
R6118:6122 Imp AExp AMult constr
R6145:6158 Imp <> optimize_0plus def
R6125:6138 Imp <> optimize_0plus def
def 6311:6329 AExp test_optimize_0plus
R6463:6467 Coq.Init.Logic <> :type_scope:x_'='_x not
R6334:6347 Imp AExp optimize_0plus def
R6350:6354 Imp AExp APlus constr
R6390:6394 Imp AExp APlus constr
R6437:6441 Imp AExp APlus constr
R6453:6456 Imp AExp ANum constr
R6444:6447 Imp AExp ANum constr
R6397:6400 Imp AExp ANum constr
R6357:6360 Imp AExp ANum constr
R6468:6472 Imp AExp APlus constr
R6484:6487 Imp AExp ANum constr
R6475:6478 Imp AExp ANum constr
prf 6707:6726 AExp optimize_0plus_sound
R6765:6767 Coq.Init.Logic <> :type_scope:x_'='_x not
R6741:6745 Imp AExp aeval def
R6748:6761 Imp AExp optimize_0plus def
R6763:6763 Imp <> a var
R6768:6772 Imp AExp aeval def
R6774:6774 Imp <> a var
prf 8900:8905 AExp silly1
R8928:8930 Coq.Init.Logic <> :type_scope:x_'='_x not
R8920:8924 Imp AExp aeval def
R8926:8927 Imp <> ae var
R8931:8935 Imp AExp aeval def
R8937:8938 Imp <> ae var
prf 9014:9019 AExp silly2
R9047:9047 Imp <> P var
R9042:9042 Imp <> P var
prf 9783:9785 AExp foo
R9806:9808 Coq.Init.Logic <> :type_scope:x_'='_x not
R9799:9801 Coq.Arith.Compare_dec <> leb def
R9805:9805 Imp <> n var
R9809:9812 Coq.Init.Datatypes <> true constr
prf 10067:10070 AExp foo'
R10091:10093 Coq.Init.Logic <> :type_scope:x_'='_x not
R10084:10086 Coq.Arith.Compare_dec <> leb def
R10090:10090 Imp <> n var
R10094:10097 Coq.Init.Datatypes <> true constr
prf 10437:10457 AExp optimize_0plus_sound'
R10496:10498 Coq.Init.Logic <> :type_scope:x_'='_x not
R10472:10476 Imp AExp aeval def
R10479:10492 Imp AExp optimize_0plus def
R10494:10494 Imp <> a var
R10499:10503 Imp AExp aeval def
R10505:10505 Imp <> a var
prf 13304:13325 AExp optimize_0plus_sound''
R13364:13366 Coq.Init.Logic <> :type_scope:x_'='_x not
R13340:13344 Imp AExp aeval def
R13347:13360 Imp AExp optimize_0plus def
R13362:13362 Imp <> a var
R13367:13371 Imp AExp aeval def
R13373:13373 Imp <> a var
prf 14736:14739 AExp In10
R14743:14744 Coq.Lists.List <> In def
R14749:14749 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14751:14751 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14753:14753 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14755:14755 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14757:14757 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14759:14759 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14761:14761 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14763:14763 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14765:14765 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14767:14767 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14770:14770 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
prf 15054:15058 AExp In10'
R15062:15063 Coq.Lists.List <> In def
R15068:15068 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15070:15070 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15072:15072 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15074:15074 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15076:15076 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15078:15078 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15080:15080 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15082:15082 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15084:15084 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15086:15086 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15089:15089 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 15975:15990 AExp optimize_0plus_b
R15997:16000 Imp AExp bexp ind
R16005:16008 Imp AExp bexp ind
R16021:16021 Imp <> b var
R16031:16035 Imp AExp BTrue constr
R16038:16042 Imp AExp BTrue constr
R16047:16052 Imp AExp BFalse constr
R16055:16060 Imp AExp BFalse constr
R16065:16067 Imp AExp BEq constr
R16076:16078 Imp AExp BEq constr
R16101:16114 Imp AExp optimize_0plus def
R16081:16094 Imp AExp optimize_0plus def
R16123:16125 Imp AExp BLe constr
R16134:16136 Imp AExp BLe constr
R16159:16172 Imp AExp optimize_0plus def
R16139:16152 Imp AExp optimize_0plus def
R16181:16184 Imp AExp BNot constr
R16190:16193 Imp AExp BNot constr
R16196:16211 Imp <> optimize_0plus_b def
R16220:16223 Imp AExp BAnd constr
R16232:16235 Imp AExp BAnd constr
R16260:16275 Imp <> optimize_0plus_b def
R16238:16253 Imp <> optimize_0plus_b def
prf 16353:16374 AExp optimize_0plus_b_sound
R16416:16418 Coq.Init.Logic <> :type_scope:x_'='_x not
R16390:16394 Imp AExp beval def
R16397:16412 Imp AExp optimize_0plus_b def
R16414:16414 Imp <> b var
R16419:16423 Imp AExp beval def
R16425:16425 Imp <> b var
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R16508:16527 Imp AExp optimize_0plus_sound thm
R19372:19386 Coq.omega.Omega <> <> lib
def 19398:19421 AExp silly_presburger_example
R19481:19484 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19480:19480 Imp <> m var
R19485:19485 Imp <> p var
R19457:19460 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19448:19451 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19444:19446 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19443:19443 Imp <> m var
R19447:19447 Imp <> n var
R19453:19455 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19452:19452 Imp <> n var
R19456:19456 Imp <> o var
R19466:19468 Coq.Init.Logic <> :type_scope:x_'='_x not
R19462:19464 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19461:19461 Imp <> o var
R19470:19472 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19469:19469 Imp <> p var
mod 21615:21630 <> AExp.aevalR_first_try
ind 21644:21649 AExp.aevalR_first_try aevalR
constr 21680:21685 AExp.aevalR_first_try E_ANum
constr 21735:21741 AExp.aevalR_first_try E_APlus
constr 21865:21872 AExp.aevalR_first_try E_AMinus
constr 21996:22002 AExp.aevalR_first_try E_AMult
R21661:21663 Coq.Init.Datatypes <> nat ind
R21653:21656 Imp AExp.aevalR_first_try aexp ind
R21701:21703 Coq.Init.Datatypes <> nat ind
R21713:21718 Imp <> aevalR ind
R21729:21729 Imp <> n var
R21721:21724 Imp AExp.aevalR_first_try ANum constr
R21726:21726 Imp <> n var
R21760:21763 Imp AExp.aevalR_first_try aexp ind
R21774:21776 Coq.Init.Datatypes <> nat ind
R21830:21835 Imp <> aevalR ind
R21854:21856 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21852:21853 Imp <> n1 var
R21857:21858 Imp <> n2 var
R21838:21842 Imp AExp.aevalR_first_try APlus constr
R21847:21848 Imp <> e2 var
R21844:21845 Imp <> e1 var
R21808:21813 Imp <> aevalR ind
R21818:21819 Imp <> n2 var
R21815:21816 Imp <> e2 var
R21786:21791 Imp <> aevalR ind
R21796:21797 Imp <> n1 var
R21793:21794 Imp <> e1 var
R21890:21893 Imp AExp.aevalR_first_try aexp ind
R21904:21906 Coq.Init.Datatypes <> nat ind
R21960:21965 Imp <> aevalR ind
R21985:21987 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R21983:21984 Imp <> n1 var
R21988:21989 Imp <> n2 var
R21968:21973 Imp AExp.aevalR_first_try AMinus constr
R21978:21979 Imp <> e2 var
R21975:21976 Imp <> e1 var
R21938:21943 Imp <> aevalR ind
R21948:21949 Imp <> n2 var
R21945:21946 Imp <> e2 var
R21916:21921 Imp <> aevalR ind
R21926:21927 Imp <> n1 var
R21923:21924 Imp <> e1 var
R22021:22024 Imp AExp.aevalR_first_try aexp ind
R22035:22037 Coq.Init.Datatypes <> nat ind
R22091:22096 Imp <> aevalR ind
R22115:22117 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22113:22114 Imp <> n1 var
R22118:22119 Imp <> n2 var
R22099:22103 Imp AExp.aevalR_first_try AMult constr
R22108:22109 Imp <> e2 var
R22105:22106 Imp <> e1 var
R22069:22074 Imp <> aevalR ind
R22079:22080 Imp <> n2 var
R22076:22077 Imp <> e2 var
R22047:22052 Imp <> aevalR ind
R22057:22058 Imp <> n1 var
R22054:22055 Imp <> e1 var
R22680:22685 Imp AExp.aevalR_first_try aevalR ind
not 22656 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22767:22782 Imp aevalR_first_try <> mod
ind 23286:23291 AExp aevalR
constr 23322:23327 AExp E_ANum
constr 23371:23377 AExp E_APlus
constr 23482:23489 AExp E_AMinus
constr 23595:23601 AExp E_AMult
R23303:23305 Coq.Init.Datatypes <> nat ind
R23295:23298 Imp AExp aexp ind
R23727:23732 Imp <> aevalR ind
R23341:23343 Coq.Init.Datatypes <> nat ind
R23353:23353 Imp AExp :type_scope:x_'\\'_x not
R23360:23364 Imp AExp :type_scope:x_'\\'_x not
R23354:23357 Imp AExp ANum constr
R23359:23359 Imp <> n var
R23365:23365 Imp <> n var
R23396:23399 Imp AExp aexp ind
R23411:23413 Coq.Init.Datatypes <> nat ind
R23451:23451 Imp AExp :type_scope:x_'\\'_x not
R23463:23468 Imp AExp :type_scope:x_'\\'_x not
R23476:23476 Imp AExp :type_scope:x_'\\'_x not
R23452:23456 Imp AExp APlus constr
R23461:23462 Imp <> e2 var
R23458:23459 Imp <> e1 var
R23471:23473 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23469:23470 Imp <> n1 var
R23474:23475 Imp <> n2 var
R23440:23443 Imp AExp :type_scope:x_'\\'_x not
R23438:23439 Imp <> e2 var
R23444:23445 Imp <> n2 var
R23426:23429 Imp AExp :type_scope:x_'\\'_x not
R23424:23425 Imp <> e1 var
R23430:23431 Imp <> n1 var
R23508:23511 Imp AExp aexp ind
R23523:23525 Coq.Init.Datatypes <> nat ind
R23563:23563 Imp AExp :type_scope:x_'\\'_x not
R23576:23581 Imp AExp :type_scope:x_'\\'_x not
R23589:23589 Imp AExp :type_scope:x_'\\'_x not
R23564:23569 Imp AExp AMinus constr
R23574:23575 Imp <> e2 var
R23571:23572 Imp <> e1 var
R23584:23586 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23582:23583 Imp <> n1 var
R23587:23588 Imp <> n2 var
R23552:23555 Imp AExp :type_scope:x_'\\'_x not
R23550:23551 Imp <> e2 var
R23556:23557 Imp <> n2 var
R23538:23541 Imp AExp :type_scope:x_'\\'_x not
R23536:23537 Imp <> e1 var
R23542:23543 Imp <> n1 var
R23621:23624 Imp AExp aexp ind
R23636:23638 Coq.Init.Datatypes <> nat ind
R23676:23676 Imp AExp :type_scope:x_'\\'_x not
R23688:23693 Imp AExp :type_scope:x_'\\'_x not
R23701:23701 Imp AExp :type_scope:x_'\\'_x not
R23677:23681 Imp AExp AMult constr
R23686:23687 Imp <> e2 var
R23683:23684 Imp <> e1 var
R23696:23698 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23694:23695 Imp <> n1 var
R23699:23700 Imp <> n2 var
R23665:23668 Imp AExp :type_scope:x_'\\'_x not
R23663:23664 Imp <> e2 var
R23669:23670 Imp <> n2 var
R23651:23654 Imp AExp :type_scope:x_'\\'_x not
R23649:23650 Imp <> e1 var
R23655:23656 Imp <> n1 var
R23727:23732 Imp AExp aevalR ind
not 23712 AExp :type_scope:x_'\\'_x
prf 26623:26638 AExp aeval_iff_aevalR
R26656:26656 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26663:26668 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26658:26661 Imp AExp :type_scope:x_'\\'_x not
R26657:26657 Imp <> a var
R26662:26662 Imp <> n var
R26676:26678 Coq.Init.Logic <> :type_scope:x_'='_x not
R26669:26673 Imp AExp aeval def
R26675:26675 Imp <> a var
R26679:26679 Imp <> n var
R27123:27128 Imp AExp E_ANum constr
R27123:27128 Imp AExp E_ANum constr
R27159:27165 Imp AExp E_APlus constr
R27159:27165 Imp AExp E_APlus constr
R27259:27266 Imp AExp E_AMinus constr
R27259:27266 Imp AExp E_AMinus constr
R27359:27365 Imp AExp E_AMult constr
R27359:27365 Imp AExp E_AMult constr
prf 27533:27549 AExp aeval_iff_aevalR'
R27567:27567 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27574:27579 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27569:27572 Imp AExp :type_scope:x_'\\'_x not
R27568:27568 Imp <> a var
R27573:27573 Imp <> n var
R27587:27589 Coq.Init.Logic <> :type_scope:x_'='_x not
R27580:27584 Imp AExp aeval def
R27586:27586 Imp <> a var
R27590:27590 Imp <> n var
R28056:28059 Imp <> <> mod
mod 28895:28909 <> aevalR_division
ind 29048:29051 aevalR_division aexp
constr 29067:29070 aevalR_division ANum
constr 29090:29094 aevalR_division APlus
constr 29123:29128 aevalR_division AMinus
constr 29157:29161 aevalR_division AMult
constr 29190:29193 aevalR_division ADiv
R29081:29084 Imp <> aexp ind
R29074:29076 Coq.Init.Datatypes <> nat ind
R29114:29117 Imp <> aexp ind
R29106:29109 Imp <> aexp ind
R29098:29101 Imp <> aexp ind
R29148:29151 Imp <> aexp ind
R29140:29143 Imp <> aexp ind
R29132:29135 Imp <> aexp ind
R29181:29184 Imp <> aexp ind
R29173:29176 Imp <> aexp ind
R29165:29168 Imp <> aexp ind
R29213:29216 Imp <> aexp ind
R29205:29208 Imp <> aexp ind
R29197:29200 Imp <> aexp ind
ind 29556:29561 aevalR_division aevalR
constr 29592:29597 aevalR_division E_ANum
constr 29641:29647 aevalR_division E_APlus
constr 29752:29759 aevalR_division E_AMinus
constr 29865:29871 aevalR_division E_AMult
constr 29977:29982 aevalR_division E_ADiv
R29573:29575 Coq.Init.Datatypes <> nat ind
R29565:29568 Imp aevalR_division aexp ind
R30139:30144 Imp <> aevalR ind
R29611:29613 Coq.Init.Datatypes <> nat ind
R29623:29623 Imp aevalR_division :type_scope:x_'\\'_x not
R29630:29634 Imp aevalR_division :type_scope:x_'\\'_x not
R29624:29627 Imp aevalR_division ANum constr
R29629:29629 Imp <> n var
R29635:29635 Imp <> n var
R29666:29669 Imp aevalR_division aexp ind
R29681:29683 Coq.Init.Datatypes <> nat ind
R29721:29721 Imp aevalR_division :type_scope:x_'\\'_x not
R29733:29738 Imp aevalR_division :type_scope:x_'\\'_x not
R29746:29746 Imp aevalR_division :type_scope:x_'\\'_x not
R29722:29726 Imp aevalR_division APlus constr
R29731:29732 Imp <> a2 var
R29728:29729 Imp <> a1 var
R29741:29743 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29739:29740 Imp <> n1 var
R29744:29745 Imp <> n2 var
R29710:29713 Imp aevalR_division :type_scope:x_'\\'_x not
R29708:29709 Imp <> a2 var
R29714:29715 Imp <> n2 var
R29696:29699 Imp aevalR_division :type_scope:x_'\\'_x not
R29694:29695 Imp <> a1 var
R29700:29701 Imp <> n1 var
R29778:29781 Imp aevalR_division aexp ind
R29793:29795 Coq.Init.Datatypes <> nat ind
R29833:29833 Imp aevalR_division :type_scope:x_'\\'_x not
R29846:29851 Imp aevalR_division :type_scope:x_'\\'_x not
R29859:29859 Imp aevalR_division :type_scope:x_'\\'_x not
R29834:29839 Imp aevalR_division AMinus constr
R29844:29845 Imp <> a2 var
R29841:29842 Imp <> a1 var
R29854:29856 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R29852:29853 Imp <> n1 var
R29857:29858 Imp <> n2 var
R29822:29825 Imp aevalR_division :type_scope:x_'\\'_x not
R29820:29821 Imp <> a2 var
R29826:29827 Imp <> n2 var
R29808:29811 Imp aevalR_division :type_scope:x_'\\'_x not
R29806:29807 Imp <> a1 var
R29812:29813 Imp <> n1 var
R29891:29894 Imp aevalR_division aexp ind
R29906:29908 Coq.Init.Datatypes <> nat ind
R29946:29946 Imp aevalR_division :type_scope:x_'\\'_x not
R29958:29963 Imp aevalR_division :type_scope:x_'\\'_x not
R29971:29971 Imp aevalR_division :type_scope:x_'\\'_x not
R29947:29951 Imp aevalR_division AMult constr
R29956:29957 Imp <> a2 var
R29953:29954 Imp <> a1 var
R29966:29968 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29964:29965 Imp <> n1 var
R29969:29970 Imp <> n2 var
R29935:29938 Imp aevalR_division :type_scope:x_'\\'_x not
R29933:29934 Imp <> a2 var
R29939:29940 Imp <> n2 var
R29921:29924 Imp aevalR_division :type_scope:x_'\\'_x not
R29919:29920 Imp <> a1 var
R29925:29926 Imp <> n1 var
R30002:30005 Imp aevalR_division aexp ind
R30019:30021 Coq.Init.Datatypes <> nat ind
R30098:30098 Imp aevalR_division :type_scope:x_'\\'_x not
R30109:30113 Imp aevalR_division :type_scope:x_'\\'_x not
R30099:30102 Imp aevalR_division ADiv constr
R30107:30108 Imp <> a2 var
R30104:30105 Imp <> a1 var
R30114:30115 Imp <> n3 var
R30088:30090 Coq.Init.Logic <> :type_scope:x_'='_x not
R30078:30081 Coq.Init.Peano <> mult def
R30086:30087 Imp <> n3 var
R30083:30084 Imp <> n2 var
R30091:30092 Imp <> n1 var
R30062:30064 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R30060:30061 Imp <> n2 var
R30048:30051 Imp aevalR_division :type_scope:x_'\\'_x not
R30046:30047 Imp <> a2 var
R30052:30053 Imp <> n2 var
R30034:30037 Imp aevalR_division :type_scope:x_'\\'_x not
R30032:30033 Imp <> a1 var
R30038:30039 Imp <> n1 var
R30139:30144 Imp aevalR_division aevalR ind
not 30124 aevalR_division :type_scope:x_'\\'_x
R30170:30184 Imp <> <> mod
mod 30195:30209 <> aevalR_extended
ind 30783:30786 aevalR_extended aexp
constr 30802:30805 aevalR_extended AAny
constr 30852:30855 aevalR_extended ANum
constr 30875:30879 aevalR_extended APlus
constr 30908:30913 aevalR_extended AMinus
constr 30942:30946 aevalR_extended AMult
R30810:30813 Imp <> aexp ind
R30866:30869 Imp <> aexp ind
R30859:30861 Coq.Init.Datatypes <> nat ind
R30899:30902 Imp <> aexp ind
R30891:30894 Imp <> aexp ind
R30883:30886 Imp <> aexp ind
R30933:30936 Imp <> aexp ind
R30925:30928 Imp <> aexp ind
R30917:30920 Imp <> aexp ind
R30966:30969 Imp <> aexp ind
R30958:30961 Imp <> aexp ind
R30950:30953 Imp <> aexp ind
ind 31163:31168 aevalR_extended aevalR
constr 31199:31203 aevalR_extended E_Any
constr 31274:31279 aevalR_extended E_ANum
constr 31323:31329 aevalR_extended E_APlus
constr 31434:31441 aevalR_extended E_AMinus
constr 31547:31553 aevalR_extended E_AMult
R31180:31182 Coq.Init.Datatypes <> nat ind
R31172:31175 Imp aevalR_extended aexp ind
R31677:31682 Imp <> aevalR ind
R31217:31219 Coq.Init.Datatypes <> nat ind
R31233:31236 Imp aevalR_extended :type_scope:x_'\\'_x not
R31229:31232 Imp aevalR_extended AAny constr
R31237:31237 Imp <> n var
R31293:31295 Coq.Init.Datatypes <> nat ind
R31305:31305 Imp aevalR_extended :type_scope:x_'\\'_x not
R31312:31316 Imp aevalR_extended :type_scope:x_'\\'_x not
R31306:31309 Imp aevalR_extended ANum constr
R31311:31311 Imp <> n var
R31317:31317 Imp <> n var
R31348:31351 Imp aevalR_extended aexp ind
R31363:31365 Coq.Init.Datatypes <> nat ind
R31403:31403 Imp aevalR_extended :type_scope:x_'\\'_x not
R31415:31420 Imp aevalR_extended :type_scope:x_'\\'_x not
R31428:31428 Imp aevalR_extended :type_scope:x_'\\'_x not
R31404:31408 Imp aevalR_extended APlus constr
R31413:31414 Imp <> a2 var
R31410:31411 Imp <> a1 var
R31423:31425 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31421:31422 Imp <> n1 var
R31426:31427 Imp <> n2 var
R31392:31395 Imp aevalR_extended :type_scope:x_'\\'_x not
R31390:31391 Imp <> a2 var
R31396:31397 Imp <> n2 var
R31378:31381 Imp aevalR_extended :type_scope:x_'\\'_x not
R31376:31377 Imp <> a1 var
R31382:31383 Imp <> n1 var
R31460:31463 Imp aevalR_extended aexp ind
R31475:31477 Coq.Init.Datatypes <> nat ind
R31515:31515 Imp aevalR_extended :type_scope:x_'\\'_x not
R31528:31533 Imp aevalR_extended :type_scope:x_'\\'_x not
R31541:31541 Imp aevalR_extended :type_scope:x_'\\'_x not
R31516:31521 Imp aevalR_extended AMinus constr
R31526:31527 Imp <> a2 var
R31523:31524 Imp <> a1 var
R31536:31538 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R31534:31535 Imp <> n1 var
R31539:31540 Imp <> n2 var
R31504:31507 Imp aevalR_extended :type_scope:x_'\\'_x not
R31502:31503 Imp <> a2 var
R31508:31509 Imp <> n2 var
R31490:31493 Imp aevalR_extended :type_scope:x_'\\'_x not
R31488:31489 Imp <> a1 var
R31494:31495 Imp <> n1 var
R31573:31576 Imp aevalR_extended aexp ind
R31588:31590 Coq.Init.Datatypes <> nat ind
R31628:31628 Imp aevalR_extended :type_scope:x_'\\'_x not
R31640:31645 Imp aevalR_extended :type_scope:x_'\\'_x not
R31653:31653 Imp aevalR_extended :type_scope:x_'\\'_x not
R31629:31633 Imp aevalR_extended AMult constr
R31638:31639 Imp <> a2 var
R31635:31636 Imp <> a1 var
R31648:31650 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R31646:31647 Imp <> n1 var
R31651:31652 Imp <> n2 var
R31617:31620 Imp aevalR_extended :type_scope:x_'\\'_x not
R31615:31616 Imp <> a2 var
R31621:31622 Imp <> n2 var
R31603:31606 Imp aevalR_extended :type_scope:x_'\\'_x not
R31601:31602 Imp <> a1 var
R31607:31608 Imp <> n1 var
R31677:31682 Imp aevalR_extended aevalR ind
not 31662 aevalR_extended :type_scope:x_'\\'_x
R31708:31722 Imp <> <> mod
def 32969:32973 <> state
R32978:32986 Maps <> total_map def
R32988:32990 Coq.Init.Datatypes <> nat ind
def 33005:33015 <> empty_state
R33019:33023 Imp <> state def
R33030:33036 Maps <> t_empty def
ind 33259:33262 <> aexp
constr 33278:33281 <> ANum
constr 33301:33303 <> AId
constr 33354:33358 <> APlus
constr 33387:33392 <> AMinus
constr 33421:33425 <> AMult
R33292:33295 Imp <> aexp ind
R33285:33287 Coq.Init.Datatypes <> nat ind
R33313:33316 Imp <> aexp ind
R33307:33308 Maps <> id ind
R33378:33381 Imp <> aexp ind
R33370:33373 Imp <> aexp ind
R33362:33365 Imp <> aexp ind
R33412:33415 Imp <> aexp ind
R33404:33407 Imp <> aexp ind
R33396:33399 Imp <> aexp ind
R33445:33448 Imp <> aexp ind
R33437:33440 Imp <> aexp ind
R33429:33432 Imp <> aexp ind
def 33565:33565 <> X
R33569:33570 Maps <> id ind
R33575:33576 Maps <> Id constr
def 33592:33592 <> Y
R33596:33597 Maps <> id ind
R33602:33603 Maps <> Id constr
def 33619:33619 <> Z
R33623:33624 Maps <> id ind
R33629:33630 Maps <> Id constr
ind 34000:34003 <> bexp
constr 34019:34023 <> BTrue
constr 34036:34041 <> BFalse
constr 34054:34056 <> BEq
constr 34085:34087 <> BLe
constr 34116:34119 <> BNot
constr 34140:34143 <> BAnd
R34027:34030 Imp <> bexp ind
R34045:34048 Imp <> bexp ind
R34076:34079 Imp <> bexp ind
R34068:34071 Imp <> aexp ind
R34060:34063 Imp <> aexp ind
R34107:34110 Imp <> bexp ind
R34099:34102 Imp <> aexp ind
R34091:34094 Imp <> aexp ind
R34131:34134 Imp <> bexp ind
R34123:34126 Imp <> bexp ind
R34163:34166 Imp <> bexp ind
R34155:34158 Imp <> bexp ind
R34147:34150 Imp <> bexp ind
def 34413:34417 <> aeval
R34425:34429 Imp <> state def
R34437:34440 Imp <> aexp ind
R34445:34447 Coq.Init.Datatypes <> nat ind
R34460:34460 Imp <> a var
R34471:34474 Imp <> ANum constr
R34487:34489 Imp <> AId constr
R34496:34497 Imp <> st var
R34553:34557 Imp <> APlus constr
R34568:34568 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34580:34584 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34596:34596 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34569:34573 Imp <> aeval def
R34575:34576 Imp <> st var
R34585:34589 Imp <> aeval def
R34591:34592 Imp <> st var
R34602:34607 Imp <> AMinus constr
R34619:34619 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34631:34635 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34647:34647 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34620:34624 Imp <> aeval def
R34626:34627 Imp <> st var
R34636:34640 Imp <> aeval def
R34642:34643 Imp <> st var
R34653:34657 Imp <> AMult constr
R34668:34668 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34680:34684 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34696:34696 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34669:34673 Imp <> aeval def
R34675:34676 Imp <> st var
R34685:34689 Imp <> aeval def
R34691:34692 Imp <> st var
def 34715:34719 <> beval
R34727:34731 Imp <> state def
R34739:34742 Imp <> bexp ind
R34747:34750 Coq.Init.Datatypes <> bool ind
R34763:34763 Imp <> b var
R34774:34778 Imp <> BTrue constr
R34789:34792 Coq.Init.Datatypes <> true constr
R34798:34803 Imp <> BFalse constr
R34813:34817 Coq.Init.Datatypes <> false constr
R34823:34825 Imp <> BEq constr
R34838:34844 Coq.Arith.EqNat <> beq_nat def
R34861:34865 Imp <> aeval def
R34867:34868 Imp <> st var
R34847:34851 Imp <> aeval def
R34853:34854 Imp <> st var
R34878:34880 Imp <> BLe constr
R34893:34895 Coq.Arith.Compare_dec <> leb def
R34912:34916 Imp <> aeval def
R34918:34919 Imp <> st var
R34898:34902 Imp <> aeval def
R34904:34905 Imp <> st var
R34929:34932 Imp <> BNot constr
R34944:34947 Coq.Init.Datatypes <> negb def
R34950:34954 Imp <> beval def
R34956:34957 Imp <> st var
R34967:34970 Imp <> BAnd constr
R34982:34985 Coq.Init.Datatypes <> andb def
R35002:35006 Imp <> beval def
R35008:35009 Imp <> st var
R34988:34992 Imp <> beval def
R34994:34995 Imp <> st var
def 35031:35035 <> aexp1
R35123:35127 Coq.Init.Logic <> :type_scope:x_'='_x not
R35041:35045 Imp <> aeval def
R35083:35087 Imp <> APlus constr
R35099:35103 Imp <> AMult constr
R35114:35117 Imp <> ANum constr
R35106:35108 Imp <> AId constr
R35110:35110 Imp <> X def
R35090:35093 Imp <> ANum constr
R35048:35055 Maps <> t_update def
R35069:35069 Imp <> X def
R35057:35067 Imp <> empty_state def
def 35166:35170 <> bexp1
R35259:35263 Coq.Init.Logic <> :type_scope:x_'='_x not
R35176:35180 Imp <> beval def
R35218:35221 Imp <> BAnd constr
R35230:35233 Imp <> BNot constr
R35236:35238 Imp <> BLe constr
R35249:35252 Imp <> ANum constr
R35241:35243 Imp <> AId constr
R35245:35245 Imp <> X def
R35223:35227 Imp <> BTrue constr
R35183:35190 Maps <> t_update def
R35204:35204 Imp <> X def
R35192:35202 Imp <> empty_state def
R35264:35267 Coq.Init.Datatypes <> true constr
ind 36355:36357 <> com
constr 36373:36377 <> CSkip
constr 36389:36392 <> CAss
constr 36418:36421 <> CSeq
constr 36447:36449 <> CIf
constr 36483:36488 <> CWhile
R36381:36383 Imp <> com ind
R36410:36412 Imp <> com ind
R36402:36405 Imp <> aexp ind
R36396:36397 Maps <> id ind
R36439:36441 Imp <> com ind
R36432:36434 Imp <> com ind
R36425:36427 Imp <> com ind
R36475:36477 Imp <> com ind
R36468:36470 Imp <> com ind
R36461:36463 Imp <> com ind
R36453:36456 Imp <> bexp ind
R36507:36509 Imp <> com ind
R36500:36502 Imp <> com ind
R36492:36495 Imp <> bexp ind
R36867:36871 Imp <> CSkip constr
not 36853 <> ::'SKIP'
R36901:36904 Imp <> CAss constr
not 36883 <> ::x_'::='_x
R36952:36955 Imp <> CSeq constr
not 36935 <> ::x_';;'_x
R37040:37045 Imp <> CWhile constr
not 37009 <> ::'WHILE'_x_'DO'_x_'END'
R37139:37141 Imp <> CIf constr
not 37097 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 37303:37313 <> fact_in_coq
R37317:37319 Imp <> com ind
R37337:37341 Imp <> ::x_';;'_x not
R37327:37331 Imp <> ::x_'::='_x not
R37326:37326 Imp <> Z def
R37332:37334 Imp <> AId constr
R37336:37336 Imp <> X def
R37354:37358 Imp <> ::x_';;'_x not
R37343:37347 Imp <> ::x_'::='_x not
R37342:37342 Imp <> Y def
R37348:37351 Imp <> ANum constr
R37359:37364 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37392:37399 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37463:37468 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37365:37368 Imp <> BNot constr
R37371:37373 Imp <> BEq constr
R37384:37387 Imp <> ANum constr
R37376:37378 Imp <> AId constr
R37380:37380 Imp <> Z def
R37427:37433 Imp <> ::x_';;'_x not
R37401:37405 Imp <> ::x_'::='_x not
R37400:37400 Imp <> Y def
R37406:37410 Imp <> AMult constr
R37421:37423 Imp <> AId constr
R37425:37425 Imp <> Z def
R37413:37415 Imp <> AId constr
R37417:37417 Imp <> Y def
R37435:37439 Imp <> ::x_'::='_x not
R37434:37434 Imp <> Z def
R37440:37445 Imp <> AMinus constr
R37456:37459 Imp <> ANum constr
R37448:37450 Imp <> AId constr
R37452:37452 Imp <> Z def
def 37595:37599 <> plus2
R37603:37605 Imp <> com ind
R37613:37618 Imp <> ::x_'::='_x not
R37641:37641 Imp <> ::x_'::='_x not
R37612:37612 Imp <> X def
R37619:37623 Imp <> APlus constr
R37634:37637 Imp <> ANum constr
R37626:37628 Imp <> AId constr
R37630:37630 Imp <> X def
def 37656:37665 <> XtimesYinZ
R37669:37671 Imp <> com ind
R37679:37684 Imp <> ::x_'::='_x not
R37706:37706 Imp <> ::x_'::='_x not
R37678:37678 Imp <> Z def
R37685:37689 Imp <> AMult constr
R37700:37702 Imp <> AId constr
R37704:37704 Imp <> Y def
R37692:37694 Imp <> AId constr
R37696:37696 Imp <> X def
def 37721:37740 <> subtract_slowly_body
R37744:37746 Imp <> com ind
R37782:37787 Imp <> ::x_';;'_x not
R37754:37758 Imp <> ::x_'::='_x not
R37753:37753 Imp <> Z def
R37759:37764 Imp <> AMinus constr
R37775:37778 Imp <> ANum constr
R37767:37769 Imp <> AId constr
R37771:37771 Imp <> Z def
R37789:37793 Imp <> ::x_'::='_x not
R37788:37788 Imp <> X def
R37794:37799 Imp <> AMinus constr
R37810:37813 Imp <> ANum constr
R37802:37804 Imp <> AId constr
R37806:37806 Imp <> X def
def 37921:37935 <> subtract_slowly
R37939:37941 Imp <> com ind
R37948:37953 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37981:37988 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38009:38014 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37954:37957 Imp <> BNot constr
R37960:37962 Imp <> BEq constr
R37973:37976 Imp <> ANum constr
R37965:37967 Imp <> AId constr
R37969:37969 Imp <> X def
R37989:38008 Imp <> subtract_slowly_body def
def 38029:38052 <> subtract_3_from_5_slowly
R38056:38058 Imp <> com ind
R38077:38082 Imp <> ::x_';;'_x not
R38066:38070 Imp <> ::x_'::='_x not
R38065:38065 Imp <> X def
R38071:38074 Imp <> ANum constr
R38095:38100 Imp <> ::x_';;'_x not
R38084:38088 Imp <> ::x_'::='_x not
R38083:38083 Imp <> Z def
R38089:38092 Imp <> ANum constr
R38101:38115 Imp <> subtract_slowly def
def 38232:38235 <> loop
R38239:38241 Imp <> com ind
R38248:38253 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38259:38266 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38271:38276 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38254:38258 Imp <> BTrue constr
R38267:38270 Imp <> ::'SKIP' not
def 38798:38815 <> ceval_fun_no_while
R38823:38827 Imp <> state def
R38835:38837 Imp <> com ind
R38868:38872 Imp <> state def
R38885:38885 Imp <> c var
R38898:38901 Imp <> ::'SKIP' not
R38914:38915 Imp <> st var
R38924:38928 Imp <> ::x_'::='_x not
R38943:38950 Maps <> t_update def
R38958:38962 Imp <> aeval def
R38964:38965 Imp <> st var
R38952:38953 Imp <> st var
R38979:38982 Imp <> ::x_';;'_x not
R39008:39025 Imp <> ceval_fun_no_while def
R39027:39028 Imp <> st var
R39044:39061 Imp <> ceval_fun_no_while def
R39063:39065 Imp <> st' var
R39076:39079 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39081:39086 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39089:39094 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39097:39099 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39116:39120 Imp <> beval def
R39122:39123 Imp <> st var
R39183:39200 Imp <> ceval_fun_no_while def
R39202:39203 Imp <> st var
R39143:39160 Imp <> ceval_fun_no_while def
R39162:39163 Imp <> st var
R39214:39219 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39221:39224 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39226:39229 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39242:39243 Imp <> st var
ind 43495:43499 <> ceval
constr 43540:43545 <> E_Skip
constr 43586:43590 <> E_Ass
constr 43685:43689 <> E_Seq
constr 43804:43811 <> E_IfTrue
constr 43938:43946 <> E_IfFalse
constr 44074:44083 <> E_WhileEnd
constr 44170:44180 <> E_WhileLoop
R43519:43523 Imp <> state def
R43510:43514 Imp <> state def
R43503:43505 Imp <> com ind
R44372:44376 Imp <> ceval ind
R43570:43572 Imp <> ::x_'/'_x_'\\'_x not
R43575:43578 Imp <> ::x_'/'_x_'\\'_x not
R43566:43569 Imp <> ::'SKIP' not
R43573:43574 Imp <> st var
R43579:43580 Imp <> st var
R43644:43644 Imp <> ::x_'/'_x_'\\'_x not
R43653:43656 Imp <> ::x_'/'_x_'\\'_x not
R43659:43663 Imp <> ::x_'/'_x_'\\'_x not
R43679:43679 Imp <> ::x_'/'_x_'\\'_x not
R43646:43650 Imp <> ::x_'::='_x not
R43645:43645 Imp <> x var
R43651:43652 Imp <> a1 var
R43657:43658 Imp <> st var
R43664:43671 Maps <> t_update def
R43678:43678 Imp <> n var
R43676:43676 Imp <> x var
R43673:43674 Imp <> st var
R43630:43632 Coq.Init.Logic <> :type_scope:x_'='_x not
R43619:43623 Imp <> aeval def
R43628:43629 Imp <> a1 var
R43625:43626 Imp <> st var
R43633:43633 Imp <> n var
R43776:43776 Imp <> ::x_'/'_x_'\\'_x not
R43785:43788 Imp <> ::x_'/'_x_'\\'_x not
R43791:43794 Imp <> ::x_'/'_x_'\\'_x not
R43779:43782 Imp <> ::x_';;'_x not
R43777:43778 Imp <> c1 var
R43783:43784 Imp <> c2 var
R43789:43790 Imp <> st var
R43795:43798 Imp <> st'' var
R43752:43754 Imp <> ::x_'/'_x_'\\'_x not
R43758:43761 Imp <> ::x_'/'_x_'\\'_x not
R43750:43751 Imp <> c2 var
R43755:43757 Imp <> st' var
R43762:43765 Imp <> st'' var
R43727:43729 Imp <> ::x_'/'_x_'\\'_x not
R43732:43736 Imp <> ::x_'/'_x_'\\'_x not
R43725:43726 Imp <> c1 var
R43730:43731 Imp <> st var
R43737:43739 Imp <> st' var
R43895:43895 Imp <> ::x_'/'_x_'\\'_x not
R43920:43923 Imp <> ::x_'/'_x_'\\'_x not
R43926:43929 Imp <> ::x_'/'_x_'\\'_x not
R43896:43899 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43901:43906 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43909:43914 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43917:43919 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43900:43900 Imp <> b var
R43907:43908 Imp <> c1 var
R43915:43916 Imp <> c2 var
R43924:43925 Imp <> st var
R43930:43932 Imp <> st' var
R43873:43875 Imp <> ::x_'/'_x_'\\'_x not
R43878:43881 Imp <> ::x_'/'_x_'\\'_x not
R43871:43872 Imp <> c1 var
R43876:43877 Imp <> st var
R43882:43884 Imp <> st' var
R43854:43856 Coq.Init.Logic <> :type_scope:x_'='_x not
R43844:43848 Imp <> beval def
R43853:43853 Imp <> b var
R43850:43851 Imp <> st var
R43857:43860 Coq.Init.Datatypes <> true constr
R44031:44031 Imp <> ::x_'/'_x_'\\'_x not
R44056:44059 Imp <> ::x_'/'_x_'\\'_x not
R44062:44065 Imp <> ::x_'/'_x_'\\'_x not
R44032:44035 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44037:44042 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44045:44050 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44053:44055 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44036:44036 Imp <> b var
R44043:44044 Imp <> c1 var
R44051:44052 Imp <> c2 var
R44060:44061 Imp <> st var
R44066:44068 Imp <> st' var
R44009:44011 Imp <> ::x_'/'_x_'\\'_x not
R44014:44017 Imp <> ::x_'/'_x_'\\'_x not
R44007:44008 Imp <> c2 var
R44012:44013 Imp <> st var
R44018:44020 Imp <> st' var
R43989:43991 Coq.Init.Logic <> :type_scope:x_'='_x not
R43979:43983 Imp <> beval def
R43988:43988 Imp <> b var
R43985:43986 Imp <> st var
R43992:43996 Coq.Init.Datatypes <> false constr
R44136:44136 Imp <> ::x_'/'_x_'\\'_x not
R44153:44156 Imp <> ::x_'/'_x_'\\'_x not
R44159:44162 Imp <> ::x_'/'_x_'\\'_x not
R44137:44142 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44144:44147 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44149:44152 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44143:44143 Imp <> b var
R44148:44148 Imp <> c var
R44157:44158 Imp <> st var
R44163:44164 Imp <> st var
R44118:44120 Coq.Init.Logic <> :type_scope:x_'='_x not
R44108:44112 Imp <> beval def
R44117:44117 Imp <> b var
R44114:44115 Imp <> st var
R44121:44125 Coq.Init.Datatypes <> false constr
R44306:44306 Imp <> ::x_'/'_x_'\\'_x not
R44323:44326 Imp <> ::x_'/'_x_'\\'_x not
R44329:44332 Imp <> ::x_'/'_x_'\\'_x not
R44307:44312 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44314:44317 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44319:44322 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44313:44313 Imp <> b var
R44318:44318 Imp <> c var
R44327:44328 Imp <> st var
R44333:44336 Imp <> st'' var
R44264:44264 Imp <> ::x_'/'_x_'\\'_x not
R44281:44284 Imp <> ::x_'/'_x_'\\'_x not
R44288:44291 Imp <> ::x_'/'_x_'\\'_x not
R44265:44270 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44272:44275 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44277:44280 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44271:44271 Imp <> b var
R44276:44276 Imp <> c var
R44285:44287 Imp <> st' var
R44292:44295 Imp <> st'' var
R44242:44244 Imp <> ::x_'/'_x_'\\'_x not
R44247:44250 Imp <> ::x_'/'_x_'\\'_x not
R44241:44241 Imp <> c var
R44245:44246 Imp <> st var
R44251:44253 Imp <> st' var
R44224:44226 Coq.Init.Logic <> :type_scope:x_'='_x not
R44214:44218 Imp <> beval def
R44223:44223 Imp <> b var
R44220:44221 Imp <> st var
R44227:44230 Coq.Init.Datatypes <> true constr
R44372:44376 Imp <> ceval ind
not 44347 <> ::x_'/'_x_'\\'_x
def 44646:44659 <> ceval_example1
R44666:44666 Imp <> ::x_'/'_x_'\\'_x not
R44769:44775 Imp <> ::x_'/'_x_'\\'_x not
R44787:44794 Imp <> ::x_'/'_x_'\\'_x not
R44834:44834 Imp <> ::x_'/'_x_'\\'_x not
R44679:44686 Imp <> ::x_';;'_x not
R44668:44672 Imp <> ::x_'::='_x not
R44667:44667 Imp <> X def
R44673:44676 Imp <> ANum constr
R44687:44690 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44711:44723 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44736:44748 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44761:44768 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44691:44693 Imp <> BLe constr
R44704:44707 Imp <> ANum constr
R44696:44698 Imp <> AId constr
R44700:44700 Imp <> X def
R44725:44729 Imp <> ::x_'::='_x not
R44724:44724 Imp <> Y def
R44730:44733 Imp <> ANum constr
R44750:44754 Imp <> ::x_'::='_x not
R44749:44749 Imp <> Z def
R44755:44758 Imp <> ANum constr
R44776:44786 Imp <> empty_state def
R44795:44802 Maps <> t_update def
R44831:44831 Imp <> Z def
R44805:44812 Maps <> t_update def
R44826:44826 Imp <> X def
R44814:44824 Imp <> empty_state def
R44910:44917 Maps <> t_update def
R44931:44931 Imp <> X def
R44919:44929 Imp <> empty_state def
R44898:44902 Imp <> E_Seq constr
R44910:44917 Maps <> t_update def
R44931:44931 Imp <> X def
R44919:44929 Imp <> empty_state def
R44898:44902 Imp <> E_Seq constr
R44976:44980 Imp <> E_Ass constr
R44976:44980 Imp <> E_Ass constr
R45027:45035 Imp <> E_IfFalse constr
R45027:45035 Imp <> E_IfFalse constr
R45069:45073 Imp <> E_Ass constr
R45069:45073 Imp <> E_Ass constr
def 45152:45165 <> ceval_example2
R45172:45172 Imp <> ::x_'/'_x_'\\'_x not
R45215:45218 Imp <> ::x_'/'_x_'\\'_x not
R45230:45238 Imp <> ::x_'/'_x_'\\'_x not
R45293:45293 Imp <> ::x_'/'_x_'\\'_x not
R45185:45187 Imp <> ::x_';;'_x not
R45174:45178 Imp <> ::x_'::='_x not
R45173:45173 Imp <> X def
R45179:45182 Imp <> ANum constr
R45200:45202 Imp <> ::x_';;'_x not
R45189:45193 Imp <> ::x_'::='_x not
R45188:45188 Imp <> Y def
R45194:45197 Imp <> ANum constr
R45204:45208 Imp <> ::x_'::='_x not
R45203:45203 Imp <> Z def
R45209:45212 Imp <> ANum constr
R45219:45229 Imp <> empty_state def
R45239:45246 Maps <> t_update def
R45290:45290 Imp <> Z def
R45249:45256 Maps <> t_update def
R45285:45285 Imp <> Y def
R45259:45266 Maps <> t_update def
R45280:45280 Imp <> X def
R45268:45278 Imp <> empty_state def
R45322:45329 Maps <> t_update def
R45343:45343 Imp <> X def
R45331:45341 Imp <> empty_state def
R45310:45314 Imp <> E_Seq constr
R45322:45329 Maps <> t_update def
R45343:45343 Imp <> X def
R45331:45341 Imp <> empty_state def
R45310:45314 Imp <> E_Seq constr
R45361:45365 Imp <> E_Ass constr
R45361:45365 Imp <> E_Ass constr
R45405:45412 Maps <> t_update def
R45441:45441 Imp <> Y def
R45415:45422 Maps <> t_update def
R45436:45436 Imp <> X def
R45424:45434 Imp <> empty_state def
R45393:45397 Imp <> E_Seq constr
R45405:45412 Maps <> t_update def
R45441:45441 Imp <> Y def
R45415:45422 Maps <> t_update def
R45436:45436 Imp <> X def
R45424:45434 Imp <> empty_state def
R45393:45397 Imp <> E_Seq constr
R45461:45465 Imp <> E_Ass constr
R45461:45465 Imp <> E_Ass constr
R45495:45499 Imp <> E_Ass constr
R45495:45499 Imp <> E_Ass constr
def 45850:45857 <> pup_to_n
R45861:45863 Imp <> com ind
R45881:45882 Imp <> ::x_';;'_x not
R45872:45874 Imp <> ::x_'::='_x not
R45871:45871 Imp <> Y def
R45875:45878 Imp <> ANum constr
R45883:45888 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45909:45912 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45967:45970 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45889:45891 Imp <> BLe constr
R45903:45905 Imp <> AId constr
R45907:45907 Imp <> X def
R45894:45897 Imp <> ANum constr
R45938:45939 Imp <> ::x_';;'_x not
R45914:45916 Imp <> ::x_'::='_x not
R45913:45913 Imp <> Y def
R45917:45921 Imp <> APlus constr
R45932:45934 Imp <> AId constr
R45936:45936 Imp <> X def
R45924:45926 Imp <> AId constr
R45928:45928 Imp <> Y def
R45941:45943 Imp <> ::x_'::='_x not
R45940:45940 Imp <> X def
R45944:45949 Imp <> AMinus constr
R45960:45963 Imp <> ANum constr
R45952:45954 Imp <> AId constr
R45956:45956 Imp <> X def
prf 46039:46052 <> pup_to_2_ceval
R46066:46069 Imp <> ::x_'/'_x_'\\'_x not
R46094:46102 Imp <> ::x_'/'_x_'\\'_x not
R46058:46065 Imp <> pup_to_n def
R46070:46077 Maps <> t_update def
R46091:46091 Imp <> X def
R46079:46089 Imp <> empty_state def
R46103:46110 Maps <> t_update def
R46205:46205 Imp <> X def
R46113:46120 Maps <> t_update def
R46200:46200 Imp <> Y def
R46123:46130 Maps <> t_update def
R46195:46195 Imp <> X def
R46133:46140 Maps <> t_update def
R46190:46190 Imp <> Y def
R46143:46150 Maps <> t_update def
R46185:46185 Imp <> Y def
R46153:46160 Maps <> t_update def
R46180:46180 Imp <> X def
R46162:46172 Imp <> empty_state def
R46224:46231 Imp <> pup_to_n def
R46253:46260 Maps <> t_update def
R46289:46289 Imp <> Y def
R46263:46270 Maps <> t_update def
R46284:46284 Imp <> X def
R46272:46282 Imp <> empty_state def
R46240:46244 Imp <> E_Seq constr
R46253:46260 Maps <> t_update def
R46289:46289 Imp <> Y def
R46263:46270 Maps <> t_update def
R46284:46284 Imp <> X def
R46272:46282 Imp <> empty_state def
R46240:46244 Imp <> E_Seq constr
R46306:46310 Imp <> E_Ass constr
R46306:46310 Imp <> E_Ass constr
R46355:46362 Maps <> t_update def
R46421:46421 Imp <> X def
R46365:46372 Maps <> t_update def
R46416:46416 Imp <> Y def
R46375:46382 Maps <> t_update def
R46411:46411 Imp <> Y def
R46385:46392 Maps <> t_update def
R46406:46406 Imp <> X def
R46394:46404 Imp <> empty_state def
R46337:46347 Imp <> E_WhileLoop constr
R46355:46362 Maps <> t_update def
R46421:46421 Imp <> X def
R46365:46372 Maps <> t_update def
R46416:46416 Imp <> Y def
R46375:46382 Maps <> t_update def
R46411:46411 Imp <> Y def
R46385:46392 Maps <> t_update def
R46406:46406 Imp <> X def
R46394:46404 Imp <> empty_state def
R46337:46347 Imp <> E_WhileLoop constr
R46472:46479 Maps <> t_update def
R46523:46523 Imp <> Y def
R46482:46489 Maps <> t_update def
R46518:46518 Imp <> Y def
R46492:46499 Maps <> t_update def
R46513:46513 Imp <> X def
R46501:46511 Imp <> empty_state def
R46460:46464 Imp <> E_Seq constr
R46472:46479 Maps <> t_update def
R46523:46523 Imp <> Y def
R46482:46489 Maps <> t_update def
R46518:46518 Imp <> Y def
R46492:46499 Maps <> t_update def
R46513:46513 Imp <> X def
R46501:46511 Imp <> empty_state def
R46460:46464 Imp <> E_Seq constr
R46544:46548 Imp <> E_Ass constr
R46544:46548 Imp <> E_Ass constr
R46579:46583 Imp <> E_Ass constr
R46579:46583 Imp <> E_Ass constr
R46630:46637 Maps <> t_update def
R46726:46726 Imp <> X def
R46640:46647 Maps <> t_update def
R46721:46721 Imp <> Y def
R46650:46657 Maps <> t_update def
R46716:46716 Imp <> X def
R46660:46667 Maps <> t_update def
R46711:46711 Imp <> Y def
R46670:46677 Maps <> t_update def
R46706:46706 Imp <> Y def
R46680:46687 Maps <> t_update def
R46701:46701 Imp <> X def
R46689:46699 Imp <> empty_state def
R46612:46622 Imp <> E_WhileLoop constr
R46630:46637 Maps <> t_update def
R46726:46726 Imp <> X def
R46640:46647 Maps <> t_update def
R46721:46721 Imp <> Y def
R46650:46657 Maps <> t_update def
R46716:46716 Imp <> X def
R46660:46667 Maps <> t_update def
R46711:46711 Imp <> Y def
R46670:46677 Maps <> t_update def
R46706:46706 Imp <> Y def
R46680:46687 Maps <> t_update def
R46701:46701 Imp <> X def
R46689:46699 Imp <> empty_state def
R46612:46622 Imp <> E_WhileLoop constr
R46781:46788 Maps <> t_update def
R46862:46862 Imp <> Y def
R46791:46798 Maps <> t_update def
R46857:46857 Imp <> X def
R46801:46808 Maps <> t_update def
R46852:46852 Imp <> Y def
R46811:46818 Maps <> t_update def
R46847:46847 Imp <> Y def
R46821:46828 Maps <> t_update def
R46842:46842 Imp <> X def
R46830:46840 Imp <> empty_state def
R46769:46773 Imp <> E_Seq constr
R46781:46788 Maps <> t_update def
R46862:46862 Imp <> Y def
R46791:46798 Maps <> t_update def
R46857:46857 Imp <> X def
R46801:46808 Maps <> t_update def
R46852:46852 Imp <> Y def
R46811:46818 Maps <> t_update def
R46847:46847 Imp <> Y def
R46821:46828 Maps <> t_update def
R46842:46842 Imp <> X def
R46830:46840 Imp <> empty_state def
R46769:46773 Imp <> E_Seq constr
R46883:46887 Imp <> E_Ass constr
R46883:46887 Imp <> E_Ass constr
R46918:46922 Imp <> E_Ass constr
R46918:46922 Imp <> E_Ass constr
R46953:46962 Imp <> E_WhileEnd constr
R46953:46962 Imp <> E_WhileEnd constr
prf 47693:47711 <> ceval_deterministic
R47788:47790 Coq.Init.Logic <> :type_scope:x_'='_x not
R47785:47787 Imp <> st1 var
R47791:47793 Imp <> st2 var
R47764:47766 Imp <> ::x_'/'_x_'\\'_x not
R47769:47772 Imp <> ::x_'/'_x_'\\'_x not
R47763:47763 Imp <> c var
R47767:47768 Imp <> st var
R47773:47775 Imp <> st2 var
R47741:47743 Imp <> ::x_'/'_x_'\\'_x not
R47746:47749 Imp <> ::x_'/'_x_'\\'_x not
R47740:47740 Imp <> c var
R47744:47745 Imp <> st var
R47750:47752 Imp <> st1 var
R48013:48015 Coq.Init.Logic <> :type_scope:x_'='_x not
R48013:48015 Coq.Init.Logic <> :type_scope:x_'='_x not
R48780:48782 Coq.Init.Logic <> :type_scope:x_'='_x not
R48780:48782 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 49271:49280 <> plus2_spec
R49345:49347 Coq.Init.Logic <> :type_scope:x_'='_x not
R49340:49342 Imp <> st' var
R49344:49344 Imp <> X def
R49349:49351 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R49348:49348 Imp <> n var
R49322:49324 Imp <> ::x_'/'_x_'\\'_x not
R49327:49330 Imp <> ::x_'/'_x_'\\'_x not
R49317:49321 Imp <> plus2 def
R49325:49326 Imp <> st var
R49331:49333 Imp <> st' var
R49307:49309 Coq.Init.Logic <> :type_scope:x_'='_x not
R49303:49304 Imp <> st var
R49306:49306 Imp <> X def
R49310:49310 Imp <> n var
R49677:49687 Maps <> t_update_eq thm
R49677:49687 Maps <> t_update_eq thm
prf 49917:49932 <> loop_never_stops
R49953:49954 Coq.Init.Logic <> :type_scope:'~'_x not
R49971:49971 Coq.Init.Logic <> :type_scope:'~'_x not
R49959:49961 Imp <> ::x_'/'_x_'\\'_x not
R49964:49967 Imp <> ::x_'/'_x_'\\'_x not
R49955:49958 Imp <> loop def
R49962:49963 Imp <> st var
R49968:49970 Imp <> st' var
R50012:50015 Imp <> loop def
R50040:50045 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50051:50054 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50059:50062 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50046:50050 Imp <> BTrue constr
R50055:50058 Imp <> ::'SKIP' not
R50040:50045 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50051:50054 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50059:50062 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50046:50050 Imp <> BTrue constr
R50055:50058 Imp <> ::'SKIP' not
R50333:50347 Coq.Bool.Bool <> diff_true_false thm
R50333:50347 Coq.Bool.Bool <> diff_true_false thm
def 50821:50829 <> no_whiles
R50836:50838 Imp <> com ind
R50843:50846 Coq.Init.Datatypes <> bool ind
R50859:50859 Imp <> c var
R50870:50873 Imp <> ::'SKIP' not
R50884:50887 Coq.Init.Datatypes <> true constr
R50894:50898 Imp <> ::x_'::='_x not
R50910:50913 Coq.Init.Datatypes <> true constr
R50921:50924 Imp <> ::x_';;'_x not
R50937:50940 Coq.Init.Datatypes <> andb def
R50958:50966 Imp <> no_whiles def
R50943:50951 Imp <> no_whiles def
R50976:50979 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50981:50986 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50989:50994 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50997:50999 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51010:51013 Coq.Init.Datatypes <> andb def
R51031:51039 Imp <> no_whiles def
R51016:51024 Imp <> no_whiles def
R51049:51054 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51056:51059 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51061:51064 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51076:51080 Coq.Init.Datatypes <> false constr
ind 51376:51385 <> no_whilesR
constr 51404:51409 <> N_SKIP
constr 51428:51432 <> N_ASS
constr 51466:51470 <> N_SEQ
constr 51537:51541 <> N_IFB
R51388:51390 Imp <> com ind
R51411:51420 Imp <> no_whilesR ind
R51422:51425 Imp <> ::'SKIP' not
R51446:51455 Imp <> no_whilesR ind
R51459:51461 Imp <> ::x_'::='_x not
R51458:51458 Imp <> X var
R51462:51462 Imp <> E var
R51516:51525 Imp <> no_whilesR ind
R51530:51531 Imp <> ::x_';;'_x not
R51528:51529 Imp <> c1 var
R51532:51533 Imp <> c2 var
R51501:51510 Imp <> no_whilesR ind
R51512:51513 Imp <> c2 var
R51486:51495 Imp <> no_whilesR ind
R51497:51498 Imp <> c1 var
R51589:51598 Imp <> no_whilesR ind
R51601:51604 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51606:51611 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51614:51619 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51622:51624 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51605:51605 Imp <> B var
R51612:51613 Imp <> ct var
R51620:51621 Imp <> cf var
R51574:51583 Imp <> no_whilesR ind
R51585:51586 Imp <> cf var
R51559:51568 Imp <> no_whilesR ind
R51570:51571 Imp <> ct var
prf 51658:51670 <> no_whiles_eqv
R51704:51708 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R51697:51699 Coq.Init.Logic <> :type_scope:x_'='_x not
R51686:51694 Imp <> no_whiles def
R51696:51696 Imp <> c var
R51700:51703 Coq.Init.Datatypes <> true constr
R51709:51718 Imp <> no_whilesR ind
R51720:51720 Imp <> c var
R51784:51789 Imp <> N_SKIP constr
R51784:51789 Imp <> N_SKIP constr
R51805:51809 Imp <> N_ASS constr
R51805:51809 Imp <> N_ASS constr
R51825:51829 Imp <> N_SEQ constr
R51825:51829 Imp <> N_SEQ constr
R51863:51871 Coq.Init.Datatypes <> andb_prop thm
R51889:51897 Imp <> no_whiles def
R51874:51882 Imp <> no_whiles def
R51863:51871 Coq.Init.Datatypes <> andb_prop thm
R51889:51897 Imp <> no_whiles def
R51874:51882 Imp <> no_whiles def
R51933:51941 Coq.Init.Datatypes <> andb_prop thm
R51959:51967 Imp <> no_whiles def
R51944:51952 Imp <> no_whiles def
R51933:51941 Coq.Init.Datatypes <> andb_prop thm
R51959:51967 Imp <> no_whiles def
R51944:51952 Imp <> no_whiles def
R51990:51994 Imp <> N_IFB constr
R51990:51994 Imp <> N_IFB constr
R52029:52037 Coq.Init.Datatypes <> andb_prop thm
R52055:52063 Imp <> no_whiles def
R52040:52048 Imp <> no_whiles def
R52029:52037 Coq.Init.Datatypes <> andb_prop thm
R52055:52063 Imp <> no_whiles def
R52040:52048 Imp <> no_whiles def
R52099:52107 Coq.Init.Datatypes <> andb_prop thm
R52125:52133 Imp <> no_whiles def
R52110:52118 Imp <> no_whiles def
R52099:52107 Coq.Init.Datatypes <> andb_prop thm
R52125:52133 Imp <> no_whiles def
R52110:52118 Imp <> no_whiles def
ind 54192:54197 <> sinstr
constr 54211:54215 <> SPush
constr 54235:54239 <> SLoad
constr 54258:54262 <> SPlus
constr 54275:54280 <> SMinus
constr 54293:54297 <> SMult
R54226:54231 Imp <> sinstr ind
R54219:54221 Coq.Init.Datatypes <> nat ind
R54249:54254 Imp <> sinstr ind
R54243:54244 Maps <> id ind
R54266:54271 Imp <> sinstr ind
R54284:54289 Imp <> sinstr ind
R54301:54306 Imp <> sinstr ind
def 54319:54327 <> s_execute
R54335:54339 Imp <> state def
R54351:54354 Coq.Init.Datatypes <> list ind
R54356:54358 Coq.Init.Datatypes <> nat ind
R54388:54391 Coq.Init.Datatypes <> list ind
R54393:54398 Imp <> sinstr ind
R54405:54408 Coq.Init.Datatypes <> list ind
R54410:54412 Coq.Init.Datatypes <> nat ind
R54425:54428 Imp <> prog var
R54438:54440 Coq.Init.Datatypes <> nil constr
R54443:54447 Imp <> stack var
R54453:54454 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54488:54492 Imp <> SPush constr
R54497:54505 Imp <> s_execute def
R54512:54513 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54514:54518 Imp <> stack var
R54507:54508 Imp <> st var
R54540:54544 Imp <> SLoad constr
R54549:54557 Imp <> s_execute def
R54563:54563 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54568:54570 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54564:54565 Imp <> st var
R54571:54575 Imp <> stack var
R54559:54560 Imp <> st var
R54597:54601 Imp <> SPlus constr
R54610:54614 Imp <> stack var
R54641:54643 Coq.Init.Datatypes <> nil constr
R54646:54654 Imp <> s_execute def
R54659:54663 Imp <> stack var
R54656:54657 Imp <> st var
R54692:54693 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54694:54696 Coq.Init.Datatypes <> nil constr
R54699:54707 Imp <> s_execute def
R54712:54716 Imp <> stack var
R54709:54710 Imp <> st var
R54745:54746 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54748:54749 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54758:54766 Imp <> s_execute def
R54772:54772 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54776:54778 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54774:54774 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R54768:54769 Imp <> st var
R54829:54834 Imp <> SMinus constr
R54843:54847 Imp <> stack var
R54875:54877 Coq.Init.Datatypes <> nil constr
R54880:54888 Imp <> s_execute def
R54893:54897 Imp <> stack var
R54890:54891 Imp <> st var
R54927:54928 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54929:54931 Coq.Init.Datatypes <> nil constr
R54934:54942 Imp <> s_execute def
R54947:54951 Imp <> stack var
R54944:54945 Imp <> st var
R54981:54982 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54984:54985 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54994:55002 Imp <> s_execute def
R55008:55008 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55012:55014 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55010:55010 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R55004:55005 Imp <> st var
R55066:55070 Imp <> SMult constr
R55079:55083 Imp <> stack var
R55110:55112 Coq.Init.Datatypes <> nil constr
R55115:55123 Imp <> s_execute def
R55128:55132 Imp <> stack var
R55125:55126 Imp <> st var
R55161:55162 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55163:55165 Coq.Init.Datatypes <> nil constr
R55168:55176 Imp <> s_execute def
R55181:55185 Imp <> stack var
R55178:55179 Imp <> st var
R55214:55215 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55217:55218 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55227:55235 Imp <> s_execute def
R55241:55241 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55245:55247 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55243:55243 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R55237:55238 Imp <> st var
def 55402:55411 <> s_execute1
R55487:55494 Coq.Init.Logic <> :type_scope:x_'='_x not
R55420:55428 Imp <> s_execute def
R55452:55452 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55460:55461 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55469:55470 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55478:55479 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55486:55486 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55480:55485 Imp <> SMinus constr
R55471:55475 Imp <> SPush constr
R55462:55466 Imp <> SPush constr
R55453:55457 Imp <> SPush constr
R55442:55443 Coq.Lists.List ListNotations :list_scope:'['_']' not
R55430:55440 Imp <> empty_state def
R55495:55495 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55497:55498 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55500:55500 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 55556:55565 <> s_execute2
R55656:55661 Coq.Init.Logic <> :type_scope:x_'='_x not
R55574:55582 Imp <> s_execute def
R55624:55624 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55632:55633 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55641:55642 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55648:55649 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55655:55655 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55650:55654 Imp <> SPlus constr
R55643:55647 Imp <> SMult constr
R55634:55638 Imp <> SLoad constr
R55640:55640 Imp <> X def
R55625:55629 Imp <> SPush constr
R55611:55611 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55613:55613 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55615:55615 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55585:55592 Maps <> t_update def
R55606:55606 Imp <> X def
R55594:55604 Imp <> empty_state def
R55662:55662 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55665:55666 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55668:55668 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 55910:55918 <> s_compile
R55925:55928 Imp <> aexp ind
R55933:55936 Coq.Init.Datatypes <> list ind
R55938:55943 Imp <> sinstr ind
R55956:55956 Imp <> e var
R55966:55969 Imp <> ANum constr
R55974:55974 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55982:55982 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55975:55979 Imp <> SPush constr
R55987:55989 Imp <> AId constr
R55994:55994 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56002:56002 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55995:55999 Imp <> SLoad constr
R56007:56011 Imp <> APlus constr
R56029:56030 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56018:56026 Imp <> s_compile def
R56031:56031 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56043:56045 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56032:56040 Imp <> s_compile def
R56046:56046 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56052:56052 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56047:56051 Imp <> SPlus constr
R56057:56062 Imp <> AMinus constr
R56080:56081 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56069:56077 Imp <> s_compile def
R56082:56082 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56094:56096 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56083:56091 Imp <> s_compile def
R56097:56097 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56104:56104 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56098:56103 Imp <> SMinus constr
R56109:56113 Imp <> AMult constr
R56131:56132 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56120:56128 Imp <> s_compile def
R56133:56133 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56145:56147 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56134:56142 Imp <> s_compile def
R56148:56148 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56154:56154 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56149:56153 Imp <> SMult constr
def 56317:56326 <> s_compile1
R56385:56391 Coq.Init.Logic <> :type_scope:x_'='_x not
R56334:56342 Imp <> s_compile def
R56345:56350 Imp <> AMinus constr
R56361:56365 Imp <> AMult constr
R56377:56379 Imp <> AId constr
R56381:56381 Imp <> Y def
R56368:56371 Imp <> ANum constr
R56353:56355 Imp <> AId constr
R56357:56357 Imp <> X def
R56392:56392 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56400:56401 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56409:56410 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56418:56419 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56425:56426 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56433:56433 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R56427:56432 Imp <> SMinus constr
R56420:56424 Imp <> SMult constr
R56411:56415 Imp <> SLoad constr
R56417:56417 Imp <> Y def
R56402:56406 Imp <> SPush constr
R56393:56397 Imp <> SLoad constr
R56399:56399 Imp <> X def
prf 57158:57180 <> s_compile_local_correct
R57192:57195 Imp <> aexp ind
R57202:57206 Imp <> state def
R57216:57219 Coq.Init.Datatypes <> list ind
R57221:57223 Coq.Init.Datatypes <> nat ind
R57232:57235 Coq.Init.Datatypes <> list ind
R57237:57242 Imp <> sinstr ind
R57289:57289 Coq.Init.Logic <> :type_scope:x_'='_x not
R57250:57258 Imp <> s_execute def
R57281:57282 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57270:57278 Imp <> s_compile def
R57280:57280 Imp <> e var
R57283:57287 Imp <> insts var
R57263:57267 Imp <> stack var
R57260:57261 Imp <> st var
R57290:57298 Imp <> s_execute def
R57325:57329 Imp <> insts var
R57316:57317 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57304:57304 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57315:57315 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57305:57309 Imp <> aeval def
R57314:57314 Imp <> e var
R57311:57312 Imp <> st var
R57318:57322 Imp <> stack var
R57300:57301 Imp <> st var
R57404:57404 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57444:57448 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57417:57420 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57405:57413 Imp <> s_compile def
R57433:57436 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57421:57429 Imp <> s_compile def
R57437:57437 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57443:57443 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57438:57442 Imp <> SPlus constr
R57404:57404 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57444:57448 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57417:57420 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57405:57413 Imp <> s_compile def
R57433:57436 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57421:57429 Imp <> s_compile def
R57437:57437 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57443:57443 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57438:57442 Imp <> SPlus constr
R57472:57480 Coq.Lists.List <> app_assoc thm
R57472:57480 Coq.Lists.List <> app_assoc thm
R57507:57507 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57531:57535 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57520:57523 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57508:57516 Imp <> s_compile def
R57524:57524 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57530:57530 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57525:57529 Imp <> SPlus constr
R57507:57507 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57531:57535 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57520:57523 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57508:57516 Imp <> s_compile def
R57524:57524 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57530:57530 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57525:57529 Imp <> SPlus constr
R57555:57563 Coq.Lists.List <> app_assoc thm
R57555:57563 Coq.Lists.List <> app_assoc thm
R57621:57624 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57614:57614 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57620:57620 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57615:57619 Imp <> SPlus constr
R57602:57605 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57589:57589 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57601:57601 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57590:57594 Imp <> aeval def
R57621:57624 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57614:57614 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57620:57620 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57615:57619 Imp <> SPlus constr
R57602:57605 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57589:57589 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57601:57601 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57590:57594 Imp <> aeval def
R57649:57657 Coq.Arith.Plus <> plus_comm thm
R57649:57657 Coq.Arith.Plus <> plus_comm thm
R57704:57704 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57745:57749 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57717:57720 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57705:57713 Imp <> s_compile def
R57733:57736 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57721:57729 Imp <> s_compile def
R57737:57737 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57744:57744 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57738:57743 Imp <> SMinus constr
R57704:57704 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57745:57749 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57717:57720 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57705:57713 Imp <> s_compile def
R57733:57736 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57721:57729 Imp <> s_compile def
R57737:57737 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57744:57744 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57738:57743 Imp <> SMinus constr
R57773:57781 Coq.Lists.List <> app_assoc thm
R57773:57781 Coq.Lists.List <> app_assoc thm
R57808:57808 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57833:57837 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57821:57824 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57809:57817 Imp <> s_compile def
R57825:57825 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57832:57832 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57826:57831 Imp <> SMinus constr
R57808:57808 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57833:57837 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57821:57824 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57809:57817 Imp <> s_compile def
R57825:57825 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57832:57832 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57826:57831 Imp <> SMinus constr
R57857:57865 Coq.Lists.List <> app_assoc thm
R57857:57865 Coq.Lists.List <> app_assoc thm
R57925:57928 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57917:57917 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57924:57924 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57918:57923 Imp <> SMinus constr
R57905:57908 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57892:57892 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57904:57904 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57893:57897 Imp <> aeval def
R57925:57928 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57917:57917 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57924:57924 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57918:57923 Imp <> SMinus constr
R57905:57908 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57892:57892 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57904:57904 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R57893:57897 Imp <> aeval def
R57989:57989 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58029:58033 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58002:58005 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57990:57998 Imp <> s_compile def
R58018:58021 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58006:58014 Imp <> s_compile def
R58022:58022 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58028:58028 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58023:58027 Imp <> SMult constr
R57989:57989 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58029:58033 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58002:58005 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57990:57998 Imp <> s_compile def
R58018:58021 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58006:58014 Imp <> s_compile def
R58022:58022 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58028:58028 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58023:58027 Imp <> SMult constr
R58057:58065 Coq.Lists.List <> app_assoc thm
R58057:58065 Coq.Lists.List <> app_assoc thm
R58092:58092 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58116:58120 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58105:58108 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58093:58101 Imp <> s_compile def
R58109:58109 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58115:58115 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58110:58114 Imp <> SMult constr
R58092:58092 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58116:58120 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58105:58108 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58093:58101 Imp <> s_compile def
R58109:58109 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58115:58115 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58110:58114 Imp <> SMult constr
R58140:58148 Coq.Lists.List <> app_assoc thm
R58140:58148 Coq.Lists.List <> app_assoc thm
R58207:58210 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58200:58200 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58206:58206 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58201:58205 Imp <> SMult constr
R58188:58191 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58175:58175 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58187:58187 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58176:58180 Imp <> aeval def
R58207:58210 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58200:58200 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58206:58206 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58201:58205 Imp <> SMult constr
R58188:58191 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58175:58175 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58187:58187 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58176:58180 Imp <> aeval def
R58235:58243 Coq.Arith.Mult <> mult_comm thm
R58235:58243 Coq.Arith.Mult <> mult_comm thm
prf 58273:58289 <> s_compile_correct
R58306:58310 Imp <> state def
R58318:58321 Imp <> aexp ind
R58356:58358 Coq.Init.Logic <> :type_scope:x_'='_x not
R58327:58335 Imp <> s_execute def
R58344:58352 Imp <> s_compile def
R58354:58354 Imp <> e var
R58340:58341 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58337:58338 Imp <> st var
R58359:58360 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58371:58372 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58361:58365 Imp <> aeval def
R58370:58370 Imp <> e var
R58367:58368 Imp <> st var
R58433:58435 Coq.Init.Logic <> :type_scope:x_'='_x not
R58398:58406 Imp <> s_execute def
R58426:58429 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58415:58423 Imp <> s_compile def
R58430:58431 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58411:58412 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58436:58444 Imp <> s_execute def
R58470:58471 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58462:58465 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58450:58450 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58461:58461 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58451:58455 Imp <> aeval def
R58466:58467 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58433:58435 Coq.Init.Logic <> :type_scope:x_'='_x not
R58398:58406 Imp <> s_execute def
R58426:58429 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58415:58423 Imp <> s_compile def
R58430:58431 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58411:58412 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58436:58444 Imp <> s_execute def
R58470:58471 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58462:58465 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R58450:58450 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58461:58461 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58451:58455 Imp <> aeval def
R58466:58467 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58485:58507 Imp <> s_compile_local_correct thm
R58517:58518 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58514:58515 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58485:58507 Imp <> s_compile_local_correct thm
R58517:58518 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58514:58515 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58545:58553 Coq.Lists.List <> app_nil_r thm
R58545:58553 Coq.Lists.List <> app_nil_r thm
mod 58667:58674 <> BreakImp
ind 58963:58965 BreakImp com
constr 58981:58985 BreakImp CSkip
constr 58997:59002 BreakImp CBreak
constr 59042:59045 BreakImp CAss
constr 59071:59074 BreakImp CSeq
constr 59100:59102 BreakImp CIf
constr 59136:59141 BreakImp CWhile
R58989:58991 Imp <> com ind
R59006:59008 Imp <> com ind
R59063:59065 Imp <> com ind
R59055:59058 Imp BreakImp aexp ind
R59049:59050 Maps <> id ind
R59092:59094 Imp <> com ind
R59085:59087 Imp <> com ind
R59078:59080 Imp <> com ind
R59128:59130 Imp <> com ind
R59121:59123 Imp <> com ind
R59114:59116 Imp <> com ind
R59106:59109 Imp BreakImp bexp ind
R59160:59162 Imp <> com ind
R59153:59155 Imp <> com ind
R59145:59148 Imp BreakImp bexp ind
R59189:59193 Imp BreakImp CSkip constr
not 59175 BreakImp ::'SKIP'
R59220:59225 Imp BreakImp CBreak constr
not 59205 BreakImp ::'BREAK'
R59255:59258 Imp BreakImp CAss constr
not 59237 BreakImp ::x_'::='_x
R59306:59309 Imp BreakImp CSeq constr
not 59289 BreakImp ::x_';;'_x
R59394:59399 Imp BreakImp CWhile constr
not 59363 BreakImp ::'WHILE'_x_'DO'_x_'END'
R59493:59495 Imp BreakImp CIf constr
not 59451 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 60597:60602 BreakImp status
constr 60618:60626 BreakImp SContinue
constr 60641:60646 BreakImp SBreak
R60630:60635 Imp <> status ind
R60650:60655 Imp <> status ind
ind 63047:63051 BreakImp ceval
constr 63102:63107 BreakImp E_Skip
constr 63161:63167 BreakImp E_Break
constr 63216:63220 BreakImp E_Ass
constr 63315:63321 BreakImp E_Seq_C
constr 63458:63464 BreakImp E_Seq_B
constr 63547:63554 BreakImp E_IfTrue
constr 63693:63701 BreakImp E_IfFalse
constr 63841:63850 BreakImp E_WhileEnd
constr 63947:63959 BreakImp E_WhileLoop_C
constr 64150:64162 BreakImp E_WhileLoop_B
R63081:63085 Imp BreakImp state def
R63071:63076 Imp BreakImp status ind
R63062:63066 Imp BreakImp state def
R63055:63057 Imp BreakImp com ind
R64343:64347 Imp <> ceval ind
R63133:63135 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63138:63141 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63151:63153 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63128:63132 Imp BreakImp CSkip constr
R63136:63137 Imp <> st var
R63142:63150 Imp BreakImp SContinue constr
R63154:63155 Imp <> st var
R63193:63194 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63197:63200 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63207:63208 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63187:63192 Imp BreakImp CBreak constr
R63195:63196 Imp <> st var
R63201:63206 Imp BreakImp SBreak constr
R63209:63210 Imp <> st var
R63269:63269 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63276:63277 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63280:63281 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63291:63293 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63309:63309 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63271:63273 Imp BreakImp ::x_'::='_x not
R63270:63270 Imp <> x var
R63274:63275 Imp <> a1 var
R63278:63279 Imp <> st var
R63282:63290 Imp BreakImp SContinue constr
R63294:63301 Maps <> t_update def
R63308:63308 Imp <> n var
R63306:63306 Imp <> x var
R63303:63304 Imp <> st var
R63258:63258 Coq.Init.Logic <> :type_scope:x_'='_x not
R63247:63251 Imp BreakImp aeval def
R63256:63257 Imp <> a1 var
R63253:63254 Imp <> st var
R63259:63259 Imp <> n var
R63426:63426 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63435:63438 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63441:63443 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63447:63448 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63429:63432 Imp BreakImp ::x_';;'_x not
R63427:63428 Imp <> c1 var
R63433:63434 Imp <> c2 var
R63439:63440 Imp <> st var
R63444:63446 Imp <> sta var
R63449:63452 Imp <> st'' var
R63398:63400 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63404:63406 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63410:63411 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63396:63397 Imp <> c2 var
R63401:63403 Imp <> st' var
R63407:63409 Imp <> sta var
R63412:63415 Imp <> st'' var
R63363:63365 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63368:63371 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63381:63382 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63361:63362 Imp <> c1 var
R63366:63367 Imp <> st var
R63372:63380 Imp BreakImp SContinue constr
R63383:63385 Imp <> st' var
R63519:63519 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63526:63527 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63530:63531 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63538:63538 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63522:63523 Imp BreakImp ::x_';;'_x not
R63520:63521 Imp <> c1 var
R63524:63525 Imp <> c2 var
R63528:63529 Imp <> st var
R63532:63537 Imp BreakImp SBreak constr
R63539:63541 Imp <> st' var
R63495:63495 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63498:63499 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63506:63506 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63493:63494 Imp <> c1 var
R63496:63497 Imp <> st var
R63500:63505 Imp BreakImp SBreak constr
R63507:63509 Imp <> st' var
R63646:63646 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63671:63674 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63677:63679 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63683:63684 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63647:63650 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63652:63657 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63660:63665 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63668:63670 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63651:63651 Imp <> b var
R63658:63659 Imp <> c1 var
R63666:63667 Imp <> c2 var
R63675:63676 Imp <> st var
R63680:63682 Imp <> sta var
R63685:63687 Imp <> st' var
R63620:63622 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63625:63628 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63632:63632 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63618:63619 Imp <> c1 var
R63623:63624 Imp <> st var
R63629:63631 Imp <> sta var
R63633:63635 Imp <> st' var
R63601:63603 Coq.Init.Logic <> :type_scope:x_'='_x not
R63591:63595 Imp BreakImp beval def
R63600:63600 Imp <> b var
R63597:63598 Imp <> st var
R63604:63607 Coq.Init.Datatypes <> true constr
R63794:63794 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63819:63822 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63825:63827 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63831:63832 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63795:63798 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63800:63805 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63808:63813 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63816:63818 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63799:63799 Imp <> b var
R63806:63807 Imp <> c1 var
R63814:63815 Imp <> c2 var
R63823:63824 Imp <> st var
R63828:63830 Imp <> sta var
R63833:63835 Imp <> st' var
R63768:63770 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63773:63775 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63779:63780 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63766:63767 Imp <> c2 var
R63771:63772 Imp <> st var
R63776:63778 Imp <> sta var
R63781:63783 Imp <> st' var
R63748:63750 Coq.Init.Logic <> :type_scope:x_'='_x not
R63738:63742 Imp BreakImp beval def
R63747:63747 Imp <> b var
R63744:63745 Imp <> st var
R63751:63755 Coq.Init.Datatypes <> false constr
R63903:63903 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63920:63923 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63926:63928 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63938:63939 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63904:63909 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R63911:63914 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R63916:63919 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R63910:63910 Imp <> b var
R63915:63915 Imp <> c var
R63924:63925 Imp <> st var
R63929:63937 Imp BreakImp SContinue constr
R63940:63941 Imp <> st var
R63885:63887 Coq.Init.Logic <> :type_scope:x_'='_x not
R63875:63879 Imp BreakImp beval def
R63884:63884 Imp <> b var
R63881:63882 Imp <> st var
R63888:63892 Coq.Init.Datatypes <> false constr
R64104:64104 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64121:64124 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64127:64129 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64139:64140 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64105:64110 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64112:64115 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64117:64120 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64111:64111 Imp <> b var
R64116:64116 Imp <> c var
R64125:64126 Imp <> st var
R64130:64138 Imp BreakImp SContinue constr
R64141:64144 Imp <> st'' var
R64053:64053 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64070:64073 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64077:64079 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64089:64089 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64054:64059 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64061:64064 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64066:64069 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64060:64060 Imp <> b var
R64065:64065 Imp <> c var
R64074:64076 Imp <> st' var
R64080:64088 Imp BreakImp SContinue constr
R64090:64093 Imp <> st'' var
R64021:64023 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64026:64028 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64038:64039 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64020:64020 Imp <> c var
R64024:64025 Imp <> st var
R64029:64037 Imp BreakImp SContinue constr
R64040:64042 Imp <> st' var
R64003:64005 Coq.Init.Logic <> :type_scope:x_'='_x not
R63993:63997 Imp BreakImp beval def
R64002:64002 Imp <> b var
R63999:64000 Imp <> st var
R64006:64009 Coq.Init.Datatypes <> true constr
R64239:64239 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64256:64258 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64261:64262 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64272:64272 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64240:64245 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64247:64250 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64252:64255 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64246:64246 Imp <> b var
R64251:64251 Imp <> c var
R64259:64260 Imp <> st var
R64263:64271 Imp BreakImp SContinue constr
R64273:64275 Imp <> st' var
R64215:64215 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64218:64219 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64226:64226 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64214:64214 Imp <> c var
R64216:64217 Imp <> st var
R64220:64225 Imp BreakImp SBreak constr
R64227:64229 Imp <> st' var
R64200:64200 Coq.Init.Logic <> :type_scope:x_'='_x not
R64190:64194 Imp BreakImp beval def
R64199:64199 Imp <> b var
R64196:64197 Imp <> st var
R64201:64204 Coq.Init.Datatypes <> true constr
R64343:64347 Imp BreakImp ceval ind
not 64312 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 64446:64457 BreakImp break_ignore
R64523:64525 Coq.Init.Logic <> :type_scope:x_'='_x not
R64521:64522 Imp <> st var
R64526:64528 Imp <> st' var
R64485:64485 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64495:64498 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64501:64504 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64506:64508 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64491:64493 Imp BreakImp ::x_';;'_x not
R64486:64490 Imp BreakImp ::'BREAK' not
R64494:64494 Imp <> c var
R64499:64500 Imp <> st var
R64505:64505 Imp <> s var
R64509:64511 Imp <> st' var
prf 64684:64697 BreakImp while_continue
R64765:64767 Coq.Init.Logic <> :type_scope:x_'='_x not
R64764:64764 Imp <> s var
R64768:64776 Imp BreakImp SContinue constr
R64724:64724 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64741:64744 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64747:64750 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64752:64754 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64725:64730 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64732:64735 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64737:64740 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64731:64731 Imp <> b var
R64736:64736 Imp <> c var
R64745:64746 Imp <> st var
R64751:64751 Imp <> s var
R64755:64757 Imp <> st' var
prf 64877:64896 BreakImp while_stops_on_break
R64972:64972 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64989:64992 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64995:64998 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65008:65010 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64973:64978 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64980:64983 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64985:64988 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64979:64979 Imp <> b var
R64984:64984 Imp <> c var
R64993:64994 Imp <> st var
R64999:65007 Imp BreakImp SContinue constr
R65011:65013 Imp <> st' var
R64945:64947 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64950:64953 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64960:64962 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64944:64944 Imp <> c var
R64948:64949 Imp <> st var
R64954:64959 Imp BreakImp SBreak constr
R64963:64965 Imp <> st' var
R64931:64933 Coq.Init.Logic <> :type_scope:x_'='_x not
R64921:64925 Imp BreakImp beval def
R64930:64930 Imp <> b var
R64927:64928 Imp <> st var
R64934:64937 Coq.Init.Datatypes <> true constr
R65038:65050 Imp BreakImp E_WhileLoop_B constr
R65038:65050 Imp BreakImp E_WhileLoop_B constr
prf 65187:65202 BreakImp while_break_true
R65299:65305 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65310:65311 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65313:65315 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65320:65323 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65330:65332 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65312:65312 Imp <> c var
R65316:65319 Imp <> st'' var
R65324:65329 Imp BreakImp SBreak constr
R65333:65335 Imp <> st' var
R65286:65288 Coq.Init.Logic <> :type_scope:x_'='_x not
R65275:65279 Imp BreakImp beval def
R65285:65285 Imp <> b var
R65281:65283 Imp <> st' var
R65289:65292 Coq.Init.Datatypes <> true constr
R65227:65227 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65244:65247 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65250:65253 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65263:65265 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65228:65233 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65235:65238 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65240:65243 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65234:65234 Imp <> b var
R65239:65239 Imp <> c var
R65248:65249 Imp <> st var
R65254:65262 Imp BreakImp SContinue constr
R65266:65268 Imp <> st' var
R65363:65368 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65370:65373 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65375:65378 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65363:65368 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65370:65373 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65375:65378 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 65700:65718 BreakImp ceval_deterministic
R65731:65733 Imp BreakImp com ind
R65823:65826 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65817:65819 Coq.Init.Logic <> :type_scope:x_'='_x not
R65814:65816 Imp <> st1 var
R65820:65822 Imp <> st2 var
R65829:65831 Coq.Init.Logic <> :type_scope:x_'='_x not
R65827:65828 Imp <> s1 var
R65832:65833 Imp <> s2 var
R65788:65790 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65793:65796 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65799:65801 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65787:65787 Imp <> c var
R65791:65792 Imp <> st var
R65797:65798 Imp <> s2 var
R65802:65804 Imp <> st2 var
R65760:65762 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65765:65768 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65771:65773 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65759:65759 Imp <> c var
R65763:65764 Imp <> st var
R65769:65770 Imp <> s1 var
R65774:65776 Imp <> st1 var
R66174:66174 Coq.Init.Logic <> :type_scope:x_'='_x not
R66174:66174 Coq.Init.Logic <> :type_scope:x_'='_x not
R66208:66216 Imp BreakImp SContinue constr
R66208:66216 Imp BreakImp SContinue constr
R66295:66300 Imp BreakImp SBreak constr
R66295:66300 Imp BreakImp SBreak constr
R66344:66349 Imp BreakImp SBreak constr
R66344:66349 Imp BreakImp SBreak constr
R66438:66446 Imp BreakImp SContinue constr
R66438:66446 Imp BreakImp SContinue constr
R66509:66514 Imp BreakImp SBreak constr
R66509:66514 Imp BreakImp SBreak constr
R66967:66967 Coq.Init.Logic <> :type_scope:x_'='_x not
R66967:66967 Coq.Init.Logic <> :type_scope:x_'='_x not
R67001:67009 Imp BreakImp SContinue constr
R67001:67009 Imp BreakImp SContinue constr
R67103:67108 Imp BreakImp SBreak constr
R67103:67108 Imp BreakImp SBreak constr
R67219:67227 Imp BreakImp SContinue constr
R67219:67227 Imp BreakImp SContinue constr
R67278:67283 Imp BreakImp SBreak constr
R67278:67283 Imp BreakImp SBreak constr
R67354:67361 Imp <> <> mod
